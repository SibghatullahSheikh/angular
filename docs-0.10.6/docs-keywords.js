NG_PAGES=[
{"section":"api","id":"index","name":"API Reference","depth":0,"shortName":"API Reference","type":"overview","keywords":"$compile $filter $rootscope and angular api attribute attributes attrmarkup automated bind compiler custom dependency directive directives documentation dom e2e-testing element extend filters for foreach fromjson functions guide html identification identity injection injector isarray isdate isdefined isfunction isnumber isobject isstring isundefined json lowercase manipulation markup misc mock mocks module ngmock noop object objects output overview reference runner scenario scope services strings template testing tojson type uppercase utility widget widgets"},
{"section":"api","id":"angular.attrMarkup","name":"angular.attrMarkup","depth":1,"shortName":"attrMarkup","type":"overview","keywords":"about allows angular api attribute attrmarkup attrname built-in code compiler complier content curly developer directive double element example extends for function guide information markup modify more most newattrmarkup ng:bind-attr node overview prominent see shorthand similar state text the understanding way which you"},
{"section":"api","id":"angular.bind","name":"angular.bind","depth":1,"shortName":"bind","type":"function","keywords":"all also angular api are args arguments becomes bind bindings bound call calls can context currying evaluated feature for function known optional org prebound returns self should specified supply that the this which wikipedia with wraps you"},
{"section":"api","id":"angular.bootstrap","name":"angular.bootstrap","depth":1,"shortName":"bootstrap","type":"function","keywords":"$injector angular api application array auta bootstrap declarations dom element function guide injector manual_bootstrap manually module modules root see start the this use which"},
{"section":"api","id":"angular.copy","name":"angular.copy","depth":1,"shortName":"copy","type":"function","keywords":"$filter about all and angular any api are array arrays augment can copied copy created creates deep deleted destination elements expressions for from function including information into its make module more must not note null object objects primitives properties provided returned same see should source specified supplied that the then this type undefined updated used was which will"},
{"section":"api","id":"angular.element","name":"angular.element","depth":1,"shortName":"element","type":"function","keywords":"above additional addtion alias all allows always and angular api api-compatible application are arguments associated available before both but can com commonly current data dom domcontentloaded domelement either element event fired following footprint for found function functionality html implementation implements inheriteddata injector into invocation jqlite jquery limited lite loaded lookups manipulate method methods most name needed never note object only over parent part precedence privides provided provides raw reached real references referred retrieves same scope small string styles subset supported tag takes that the they tiny top until value very walks was with within wrapped wraps"},
{"section":"api","id":"angular.equals","name":"angular.equals","depth":1,"shortName":"equals","type":"function","keywords":"all and angular api are arguments arrays begin being both but compare compared comparision comparison consider considered determines domwindow during equal equals equivalent false following function identify ignored javasscript least names nan object objects one only pass properties property same scope supports that the their true two type types value values with"},
{"section":"api","id":"angular.extend","name":"angular.extend","depth":1,"shortName":"extend","type":"function","keywords":"all angular api can copying destination dst extend extends from function multiple object objects properties source specify src the you"},
{"section":"api","id":"angular.forEach","name":"angular.forEach","depth":1,"shortName":"forEach","type":"function","keywords":"and angular api array become can collection context each either element expect for foreach function gender index invoked invokes item iterate iterator key known log male misko name note obj object once optional over previously property push reference specifying the this toequal value values var was where which with"},
{"section":"api","id":"angular.fromJson","name":"angular.fromJson","depth":1,"shortName":"fromJson","type":"function","keywords":"angular api available deserialize deserialized deserializes fromjson function json native parser string thingy use"},
{"section":"api","id":"angular.identity","name":"angular.identity","depth":1,"shortName":"identity","type":"function","keywords":"angular api argument code first function functional identity its return returns style that the this transformer useful value when writing"},
{"section":"api","id":"angular.injector","name":"angular.injector","depth":1,"shortName":"injector","type":"function","keywords":"$compile $digest $document $injector $rootscope added aliases angular api application arguments auto can create creates dependency explicitly for function functions guide implicit inference inject injection injector invoke kick list module modules must retrieving see services that the their type typical usage use used var well your"},
{"section":"api","id":"angular.isArray","name":"angular.isArray","depth":1,"shortName":"isArray","type":"function","keywords":"angular api array check determines function isarray reference true value"},
{"section":"api","id":"angular.isDate","name":"angular.isDate","depth":1,"shortName":"isDate","type":"function","keywords":"angular api check date determines function isdate reference true value"},
{"section":"api","id":"angular.isDefined","name":"angular.isDefined","depth":1,"shortName":"isDefined","type":"function","keywords":"angular api check defined determines function isdefined reference true value"},
{"section":"api","id":"angular.isElement","name":"angular.isElement","depth":1,"shortName":"isElement","type":"function","keywords":"angular api check determines dom element function iselement jquery reference true value wrapped"},
{"section":"api","id":"angular.isFunction","name":"angular.isFunction","depth":1,"shortName":"isFunction","type":"function","keywords":"angular api check determines function isfunction reference true value"},
{"section":"api","id":"angular.isNumber","name":"angular.isNumber","depth":1,"shortName":"isNumber","type":"function","keywords":"angular api check determines function isnumber number reference true value"},
{"section":"api","id":"angular.isObject","name":"angular.isObject","depth":1,"shortName":"isObject","type":"function","keywords":"angular api are but check considered determines function isobject javascript not null object objects reference true typeof unlike value"},
{"section":"api","id":"angular.isString","name":"angular.isString","depth":1,"shortName":"isString","type":"function","keywords":"angular api check determines function isstring reference string true value"},
{"section":"api","id":"angular.isUndefined","name":"angular.isUndefined","depth":1,"shortName":"isUndefined","type":"function","keywords":"angular api check determines function isundefined reference true undefined value"},
{"section":"api","id":"angular.lowercase","name":"angular.lowercase","depth":1,"shortName":"lowercase","type":"function","keywords":"angular api converted converts function lowercase lowercased specified string the"},
{"section":"api","id":"angular.markup","name":"angular.markup","depth":1,"shortName":"markup","type":"overview","keywords":"angular api built-in code compilation compiler content create curly custom developer directive dom double elements example expression extensions for function functions further guide information into like linking markup more most newmarkup ng:bind not other overview parentelement portions produce prominent see shorthand text textnode the themselves think this transforms understanding way which widget"},
{"section":"api","id":"angular.noop","name":"angular.noop","depth":1,"shortName":"noop","type":"function","keywords":"angular api calculateresult can code foo function functional noop operations performs result style that the this useful var when writing"},
{"section":"api","id":"angular.toJson","name":"angular.toJson","depth":1,"shortName":"toJson","type":"function","keywords":"and angular api contain function input into json json-formatted jsonified newlines obj output pretty representing serialized serializes set string the tojson true whitespace will"},
{"section":"api","id":"angular.uppercase","name":"angular.uppercase","depth":1,"shortName":"uppercase","type":"function","keywords":"angular api converted converts function specified string the uppercase uppercased"},
{"section":"api","id":"angular.version","name":"angular.version","depth":1,"shortName":"version","type":"property","keywords":"about angular angularjs api code codename contains current dot following full has information jiggling-armfat major minor name number object properties property release string such that the this version"},
{"section":"api","id":"angular.directive","name":"angular.directive","depth":1,"shortName":"directive","type":"function","keywords":"about across add also and angular api are arguments associated attribute attributes behavior being below between biggest called can case clone comes compilation compile compilefn compiler create custom developer differenciator directive directives dom during each element elements for function functions gets guide hand how identifier information insensitive instance instead jquery learn linked linking may modify more name ng:repeat not notes number occurence occurences once other own passed per phase present registered repeated repeater representing return scope see signature specified string template that the they this understanding use value when where which widget widgets with within work wrapped your"},
{"section":"api","id":"angular.directive.ng:app","name":"angular.directive.ng:app","depth":2,"shortName":"ng:app","type":"directive","keywords":"add and angular any api application auto-bootstrap below bootstrap can compiled designates directive document easiest element example html load module name ng:app not one only optional page per placed resolved root the then this typically use used way would"},
{"section":"api","id":"angular.directive.ng:bind","name":"angular.directive.ng:bind","depth":2,"shortName":"ng:bind","type":"directive","keywords":"and angular any api attribute below binding box but changes check compiled compiler content ctrl curly directive directly doc-example-live don double element enter evaluate expect expression expressions function given greeting guide hello html input instantly instead let like live markup name ng:bind ng:controller ng:model preview replace should specified tells template text that the this tobe transform type typically update use using value when whirled with world you"},
{"section":"api","id":"angular.directive.ng:bind-attr","name":"angular.directive.ng:bind-attr","depth":2,"shortName":"ng:bind-attr","type":"directive","keywords":"_note_ above and angular angularjs any api application attr attribute attribute_json attributes between binding box can capable check click clicking com compilation compile consider contains created creating ctrl cumbersome databinding directive doc-example-live double-curly during each element embedded enter executes expect expression expressions following for form function gets given google guide how href html http index input instantly instead into json key key-value link live main make mapped markup matches mentioned might more needs ng:bind ng:bind-attr ng:controller ng:href ng:model ng:non-bindable not number one pair pairs particular prefered present preview query raw replace replaced representing search should shows snippet specified specifies specify statements string sure template templates text that the then this time tobe translated type unlike use user using val value want way which will with writing you your"},
{"section":"api","id":"angular.directive.ng:bind-template","name":"angular.directive.ng:bind-template","depth":2,"shortName":"ng:bind-template","type":"directive","keywords":"and angular any api attribute binding box can change check contain ctrl directive doc-example-live element elements enter eval expect expressions few form function greeting greetings have hello here html input multiple name ng:bind ng:bind-template ng:controller ng:model not option replaced required salutation should since some span specifies such template text that the this title tobe try type unlike user using watch with world"},
{"section":"api","id":"angular.directive.ng:checked","name":"angular.directive.ng:checked","depth":2,"shortName":"ng:checked","type":"directive","keywords":"absence and angular any api attributes binding both browsers can check checkbox checkboxes checked checkslave compiler contain correctly directive doc-example-live expect expression false from function html input introduce markup master means ng:checked ng:model not presence preserve prevents problem prop require retrieving should solve special specs string such template the them this tobefalsy tobetruthy true type which"},
{"section":"api","id":"angular.directive.ng:class","name":"angular.directive.ng:class","depth":2,"shortName":"ng:class","type":"directive","keywords":"add added all allows already and angular any api are array button can changes check class classes classname clear click css databinding delimited directive doc-example-live duplicate dynamically element eval evaluation expect expression expressions function guide html myvar names new ng-input-indicator-wait ng:class ng:click not only particular previously prop removed representing represents result set should space span string text that the then tomatch type using value was when won you"},
{"section":"api","id":"angular.directive.ng:class-even","name":"angular.directive.ng:class-even","depth":2,"shortName":"ng:class-even","type":"directive","keywords":"affect and angular any api applied array can cate check class classname conjunction delimited directive doc-example-live eval evaluation even exactly except expect expression expressions function guide john mary name names ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only prop representing result rows scope should space span string suz takes the this tomatch widget with within works"},
{"section":"api","id":"angular.directive.ng:class-odd","name":"angular.directive.ng:class-odd","depth":2,"shortName":"ng:class-odd","type":"directive","keywords":"affect and angular any api applied array can cate check class classname conjunction delimited directive doc-example-live eval evaluation exactly except expect expression expressions function guide john mary name names ng-format-negative ng-input-indicator-wait ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only prop representing result rows scope should space span string suz takes the this tomatch widget with within works"},
{"section":"api","id":"angular.directive.ng:click","name":"angular.directive.ng:click","depth":2,"shortName":"ng:click","type":"directive","keywords":"allows angular any api behavior check click clicked count custom directive doc-example-live element evaluate expect expression expressions function guide increment ng:click ng:init should specify the tobe upon when you"},
{"section":"api","id":"angular.directive.ng:cloak","name":"angular.directive.ng:cloak","depth":2,"shortName":"ng:cloak","type":"directive","keywords":"across add addition all alternatively and angular any api application applied are around attr attribute avoid being below benefit best briefly browser browsers but can cannot caused children class comes compilation compiled cooperation css deletes directive display displayed doc-example-live during effect element elements embedded example expect external file files fine-grained flicker following for form from function head hello hidden html ie7 included its legacy like limitation loaded loading makes match min must ng-cloak ng:cloak none not order prefered prevent progressive provide raw remove rendering result rule script section selector should shown stylesheet support tagged template template1 template2 that the their they this tobedefined typically undesirable use used view visible when which while with within work works you your"},
{"section":"api","id":"angular.directive.ng:controller","name":"angular.directive.ng:controller","depth":2,"shortName":"ng:controller","type":"directive","keywords":"$route access accessible add addcontact adding alert allows also alternative and angular any api application are aspect assigns attached automatically becomes behavior behind bindings business called can changes check class clear clearcontact clearing click components contact contacts controller controllers current data declared define design directive div doc-example-live dom easily easy editing element email evaluates expect express expression expressions for form from function globally greet greeting guide has here how href index indexof information input instance into john key logic manual markup methods model model-view-controller module mvc name need ng:click ng:controller ng:model ng:repeat note notice org pattern phone principles properties prototype push reflected removecontact removing rendered scope scopes service settingscontroller should simple smith source specifies splice supports tab template text that the these this tobe type typically update user val value var via view way with without yourname"},
{"section":"api","id":"angular.directive.ng:disabled","name":"angular.directive.ng:disabled","depth":2,"shortName":"ng:disabled","type":"directive","keywords":"absence and angular any api attributes binding browsers but button can check checkbox checked chrome click compiler contain correctly directive disabled doc-example-live enabled expect expression false following from function html ie8 ies input introduce isdisabled make markup means ng:disabled ng:init ng:model not older presence preserve prevents problem prop require retrieving scope should solve special specs string such template the them this tobefalsy tobetruthy toggle true type which will"},
{"section":"api","id":"angular.directive.ng:hide","name":"angular.directive.ng:hide","depth":2,"shortName":"ng:hide","type":"directive","keywords":"and angular any api check checkbox checked click conditionally count directive directives doc-example-live element expect expression expressions function guide hidden hide html input ng:hide ng:model ng:show portion respectively should show shown span the then toequal truthy type when you"},
{"section":"api","id":"angular.directive.ng:href","name":"angular.directive.ng:href","depth":2,"shortName":"ng:href","type":"directive","keywords":"actual and angular any api attr attribute before broken buggy but can chance change click clicks com contain correct directive don element empty enter error example execute expect function gravatar has hash href http input inside like likely link link-1 link-2 link-3 link-4 link-5 link-6 makes markup most name namespace ng:click ng:ext-link ng:href ng:model not only open page path placing problem reload replace return should solves specified string template that the this tobe toequal url user uses using val value variable way when which will window with without write wrong xxx"},
{"section":"api","id":"angular.directive.ng:init","name":"angular.directive.ng:init","depth":2,"shortName":"ng:init","type":"directive","keywords":"angular any api attribute before bootstrap check directive during enters eval executed execution expect expression expressions function greeting guide hello initialization mode ng:init person should specifies tasks template the tobe world"},
{"section":"api","id":"angular.directive.ng:multiple","name":"angular.directive.ng:multiple","depth":2,"shortName":"ng:multiple","type":"directive","keywords":"absence and angular any api attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function html input introduce markup means multiple ng:model ng:multiple not presence preserve prevents problem prop require retrieving select should solve special specs string such template the them this tobefalsy tobetruthy toggle true type which"},
{"section":"api","id":"angular.directive.ng:readonly","name":"angular.directive.ng:readonly","depth":2,"shortName":"ng:readonly","type":"directive","keywords":"absence and angular any api attr attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function html input introduce make markup means ng:model ng:readonly not presence preserve prevents problem prop readonly require retrieving should solve special specs string such template text the them this tobefalsy tobetruthy toggle true type value which"},
{"section":"api","id":"angular.directive.ng:selected","name":"angular.directive.ng:selected","depth":2,"shortName":"ng:selected","type":"directive","keywords":"absence and angular any api attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function greet greetings html input introduce markup means ng:model ng:selected not presence preserve prevents problem prop require retrieving select selected should solve special specs string such template the them this tobefalsy tobetruthy true type which"},
{"section":"api","id":"angular.directive.ng:show","name":"angular.directive.ng:show","depth":2,"shortName":"ng:show","type":"directive","keywords":"and angular any api check checkbox checked click conditionally count directive directives doc-example-live dom element expect expression expressions function guide hidden hide input ng:hide ng:model ng:show portion respectively should show shown span the then toequal tree truthy type when your"},
{"section":"api","id":"angular.directive.ng:src","name":"angular.directive.ng:src","depth":2,"shortName":"ng:src","type":"directive","keywords":"angular any api attribute browser buggy can com contain correct directive doesn expression fetch from gravatar http inside like literal markup namespace ng:src placing problem replaces right solves src string template text the this until url using way which will with work write"},
{"section":"api","id":"angular.directive.ng:style","name":"angular.directive.ng:style","depth":2,"shortName":"ng:style","type":"directive","keywords":"allows and angular any api are button check clear click color conditionally corresponding css directive doc-example-live element evals expect expression expressions for function guide html keys mystyle names ng:click ng:style object red rgb set should span style text the those tobe type value values which whose you"},
{"section":"api","id":"angular.directive.ng:submit","name":"angular.directive.ng:submit","depth":2,"shortName":"ng:submit","type":"directive","keywords":"action additionally and angular api binding check click ctrl current default directive doc-example-live element empty enables enter eval events expect expression expressions for form function guide hello hit ignore list means name ng:controller ng:model ng:submit onsubmit page prevents push reloading request sending server should strings submit text the this tobe type val value"},
{"section":"api","id":"angular.inputType","name":"angular.inputType","depth":1,"shortName":"inputType","type":"overview","keywords":"$dirty $disabled $emit $error $invalid $modelvalue $parsemodel $parseview $pristine $readonly $render $required $valid $validate $viewvalue action all allow already also and angular api are attribute based been build catch checkbox classes classname codenames complex creating css ctrl data defined developer disabled does dom element empty enter error example expect expected expression expressions false for form forms framework fromjson function guide hand has have however html inline input inputtype interaction invalid invalidate json key listener listeners match means method methods modified myform name needs ng-dirty ng-invalid ng-pristine ng-valid ng:controller ng:disabled ng:model ng:pattern ng:readonly ng:required not only optional overview parsing pattern patterns prop properties provided providing readonly regexp required scope sets short should simple simpler size supper-powers supplied support text that the thing this toequal tojson tomatch try type user valid validation validators value way when which widget widgets will wrong you"},
{"section":"api","id":"angular.inputType.checkbox","name":"angular.inputType.checkbox","depth":2,"shortName":"checkbox","type":"inputType","keywords":"angular api assignable change changes check checkbox ctrl data-bind due element executed expect expression false form function html input inputtype interaction myform name ng:change ng:controller ng:false-value ng:model ng:true-value not property published selected set should state the this toequal true type under user value value1 value2 when which widgets with yes"},
{"section":"api","id":"angular.inputType.email","name":"angular.inputType.email","depth":2,"shortName":"email","type":"inputType","keywords":"$error $valid address angular api assignable class com ctrl data-bind defined does email empty enter entered error expect expected expression expressions false for form function initialize inline input inputtype invalid key longer match maxlength minlength model myform name ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets shorter should text than the this toequal true type under valid validation value which widgets with xxx"},
{"section":"api","id":"angular.inputType.integer","name":"angular.inputType.integer","depth":2,"shortName":"integer","type":"inputType","keywords":"$error $valid and angular api assignable changes class ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function greater initialize inline input inputtype integer interaction invalid key less list longer match max maxlength min minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not over pattern patterns property published regexp required scope sets shorter should text than the then this toequal transformation true type under user valid validation value when which widgets with"},
{"section":"api","id":"angular.inputType.list","name":"angular.inputType.list","depth":2,"shortName":"list","type":"inputType","keywords":"$error $valid angular api array assignable between changes class comma-seperated converts ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function igor initialize inline input inputtype interaction into invalid key list match misko model myform name names ng:change ng:controller ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets should string strings text that the this toequal true type under user validation value vojta when which widgets with"},
{"section":"api","id":"angular.inputType.number","name":"angular.inputType.number","depth":2,"shortName":"number","type":"inputType","keywords":"$error $valid and angular api assignable changes class ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function greater initialize inline input inputtype interaction invalid key less list longer match max maxlength min minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not number over pattern patterns property published regexp required scope sets shorter should text than the then this toequal transformation true type under user valid validation value when which widgets with"},
{"section":"api","id":"angular.inputType.radio","name":"angular.inputType.radio","depth":2,"shortName":"radio","type":"inputType","keywords":"angular api assignable blue button change changes color ctrl data-bind due element executed expect expression form function green html input inputtype interaction myform name ng:change ng:controller ng:model property published radio red select selected set should state the this toequal type under user value when which widgets with"},
{"section":"api","id":"angular.inputType.text","name":"angular.inputType.text","depth":2,"shortName":"text","type":"inputType","keywords":"$error $valid angular api assignable binding changes class ctrl data data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function guest hello html initialize inline input inputtype interaction invalid key longer match maxlength minlength model multi myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not only pattern patterns property published regexp required scope sets shorter should single standard text than the this toequal true type under user validation value when which widgets with word world"},
{"section":"api","id":"angular.inputType.url","name":"angular.inputType.url","depth":2,"shortName":"url","type":"inputType","keywords":"$error $valid angular api assignable changes class com content ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function http initialize inline input inputtype interaction invalid key longer match maxlength minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets shorter should text than the this toequal true type under url user valid validation value when which widgets with xxx"},
{"section":"api","id":"angular.widget","name":"angular.widget","depth":1,"shortName":"widget","type":"overview","keywords":"$route about after and angular api are attribute before blocks built-in but can changes cloned collection compilation compiler conditionally creates custom data-bound developer directive directives dom during either element elements entirely existing external following for fragment from guide html include includes information input inputtype list manages markup modifies more new ng:include ng:non-bindable ng:repeat ng:switch ng:view overview partial processed processing see standard structure templates that the understanding widget widgets with works"},
{"section":"api","id":"angular.widget.@ng:non-bindable","name":"angular.widget.@ng:non-bindable","depth":2,"shortName":"@ng:non-bindable","type":"widget","keywords":"actually alone angular any api are attribute binding bindings but check chunk code directive div doc-example-live element example expect function html ignore left like location looks make necessary ng:non-bindable note one present should simple sometimes text the there this tobe tomatch two use where which widget wrapped write"},
{"section":"api","id":"angular.widget.@ng:repeat","name":"angular.widget.@ng:repeat","depth":2,"shortName":"@ng:repeat","type":"widget","keywords":"$index $position actually adam age although amalie and angular any api are attribute can check collection count current currently defined directive display doc-example-live each element enumerate every example expect exposed expression first for formats friend friends from function gets given giving have how identifiers including index indicating initializes instance instantiates item iterator its john key last length length-1 like list local looks loop mary middle name names ng:init ng:repeat note offset old once one own per person position properties repeat_expression repeated repeater row scope set should special supported template the then they this tobe toequal track tracks two user uses using value var variable where who widget years"},
{"section":"api","id":"angular.widget.form","name":"angular.widget.form","depth":2,"shortName":"form","type":"widget","keywords":"$error $form $formfactory $valid action alias all allow allows and angular any api application applications apps are attached attribute because behaves browser browsers but button buttons called can child class click client-side coming creates ctrl data default desirable detailed different discussion doesn dom double element elements empty enclosing enter error execution expect false field fields first following for form forms from full function guest guide handle handler has hitting however html identical initialize input instance instead into invalid javascript jquery key link logic means method model module more myform name nested nesting ng:click ng:controller ng:form ng:model ng:show ng:submit not old-school one only outer page prevent preventing prevents provides reason reload required resulting role roundtrip rules scope see sends server should since some spec specific specified specify submission submit submitted submitting text than that the then this toequal translate trigger triggered triggers true two type under unless use using valid way ways well what when which widget widgets will you"},
{"section":"api","id":"angular.widget.input","name":"angular.widget.input","depth":2,"shortName":"input","type":"widget","keywords":"$error $formfactory $valid allowing and angular api assignable based behavior browsers changes class ctrl current custom data-bind data-binding declaring defined definition does due element empty enter entered error executed expect expected expression expressions false follows for form format from full function guest html html5 initialize inline input inputs inputtype interaction invalid key last lastname length less lifecycle loaded long longer match max maxlength min minlength model module myform name need new ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not older pattern patterns polyfills property provide published quick regexp required ridiculously scope scopetype set sets sharthand short shorter shorthand should some text text-box than the then there this through toequal tomatch too true type types under user username valid validation value visitor when which widget widgets with"},
{"section":"api","id":"angular.widget.ng:include","name":"angular.widget.ng:include","depth":2,"shortName":"ng:include","type":"widget","keywords":"$anchorscroll $rootscope access after and angular api applies attribute autoscroll blank call change compiles constant content ctrl disable doc-example-live enable evaluate evaluates evaluating examples expect expression external false fetches file for fragment function href html included includes instance jsfiddle keep load loaded make mind module mypartialtemplate name new ng-include ng:controller ng:include ng:model ng:options not onload only option optional origin otherwise partial policy quotes resources same scope scroll scrolling select set should source src string sure template template1 template2 templates text that the this tobe toequal truthy url value viewport when whether which widget without won work wrap you"},
{"section":"api","id":"angular.widget.ng:pluralize","name":"angular.widget.ng:pluralize","depth":2,"shortName":"ng:pluralize","type":"widget","keywords":"according actual added allows also and angular any api are attribute attributes better between binded bounded braces bundled but can case categories category closed configure configuring correct correctly correspoding count ctrl current customization data-binded decide deduct default desired dev did display displayed displays doc-example-live document documentation dozen either en-us enter evaluated example expect experience explicit expression expressions following for found from function further guide how html http i18n igor including input instead interpret into its john json kate later let locale localization look many mapping mappings marry match matched matches may message messages might misko must names ng-pluralize ng:controller ng:model ng:non-bindable ng:pluralize nobody not note notice number numbers object off offset offsets one only optional org other others overridden overview parts people perhaps person person1 person2 personcount placeholder plural pluralization pluralized previous provide providing pural replace result rule rules scope see set should show showing shown shows simple specifies specify specifying still string strings substituted take taken text that the there these this three throughout tobe total two type use user uses using value variable view viewing views vojta want when which while widget will with without would you"},
{"section":"api","id":"angular.widget.ng:switch","name":"angular.widget.ng:switch","depth":2,"shortName":"ng:switch","type":"widget","keywords":"add against angular api case casses change child conditionally ctrl deafault default displayed div doc-example-live dom elments expect expression for function home item items match matchvalue1 matchvalue2 ng:controller ng:model ng:options ng:switch ng:switch-default ng:switch-when option other select selection settings should span start statement structure text the then this toequal when widget will"},
{"section":"api","id":"angular.widget.ng:view","name":"angular.widget.ng:view","depth":2,"shortName":"ng:view","type":"widget","keywords":"$inject $route according advantages angular api auto_bootstrap automatic available below bootstrap bootstrapctrl changes click compared complements configuration controller current doc-example-live doesn efficient element every execution expect false file function functionality guide href html included including index initialization initializing into jsfiddle layout like load main module more myctrl ng:controller ng:include ng:view offers overview overviewctrl partials provides rendered require root route scope service shorter should similar src syntax template templates text that the these this time tomatch undefined used view when widget with"},
{"section":"api","id":"angular.widget.select","name":"angular.widget.select","depth":2,"shortName":"select","type":"widget","keywords":"$remove after allowed angular api array assignable attribute background-color because below bind binding binds black blue border bound browsers but can causing check chose class color colors confuses considered containing currently dark data data-bind data-binding default demonstration dom during dynamically each element elements empty entered evaluates evaluating example expect expression facility following for form forms function generate group grouped hard-coded height href html identified incorect instead into item iterate iteration iterator key label light likely list local menu might model most must mycntrl name need nested ng:click ng:controller ng:model ng:options ng:repeat ng:style not note null nullable object objects obtained one only option optionally options over parent property propertyname provides push reasons red refer rendering represent represented required requires result see select selected set shade should single source sources specified string strings style suitable that the then this tomatch unrolls use used using valid value variable when where which white widget will with yellow"},
{"section":"api","id":"angular.widget.textarea","name":"angular.widget.textarea","depth":2,"shortName":"textarea","type":"widget","keywords":"allowing and angular api are assignable changes current data-bind data-binding defined definition does due element entered error exactly executed expected expression expressions for form format from html inline input inputtype interaction key loaded longer match maxlength minlength name ng:change ng:maxlength ng:minlength ng:model ng:pattern not pattern patterns properties property published quick regexp required same scope scopetype sets shorter textarea than the then this those type types under user validation value when which widget widgets with"},
{"section":"api","id":"angular.Module","name":"angular.Module","depth":1,"shortName":"Module","type":"interface","keywords":"angular api configuring for interface module modules"},
{"section":"api","id":"angular.mock","name":"angular.mock","depth":1,"shortName":"mock","type":"overview","keywords":"angular angular-mocks api code contains from mock namespace overview related testing which"},
{"section":"api","id":"angular.mock.debug","name":"angular.mock.debug","depth":2,"shortName":"debug","type":"function","keywords":"also angular any api argument available can common console debug debugging display elements etc for function globally injectable instance into just method mock not object objects serialized serializing string strings the this turn used useful where window"},
{"section":"api","id":"angular.mock.inject","name":"angular.mock.inject","depth":2,"shortName":"inject","type":"function","keywords":"$injector $provide access aliases also and angular any api auto available beforeeach can com configured creates creating describe easy example expect fns for function functions get github here http inject injectable injected injector inside instance into jasmine like list looks method mock mode module multiple myapp mytestmodule mytestsmodule needed new number only overridden override per provide published references resolving see service should test tests the then this toequal typical used using value version what which will window with wraps you"},
{"section":"api","id":"angular.mock.module","name":"angular.mock.module","depth":2,"shortName":"module","type":"function","keywords":"access aliases also and angular anonymous any api are automatically available code collects com configuration configure created easy example fns for function functions github http information initialization inject injector jasmine loaded mock module modules ngmock number only published registers represented see string the this usage used when which will window with"},
{"section":"api","id":"angular.mock.TzDate","name":"angular.mock.TzDate","depth":2,"shortName":"TzDate","type":"object","keywords":"angular api arg available best but called calls can class code complete constroctor create date date-like dependency depends desired errors fixed foo from getdate getfullyear gethours getminutes getmonth gettimezoneoffset globally has honored hours implemented incompatible incomplete inherit injectable instance instances intercept its just like list local machine main make matters methods might missing mock new newyearinbratislava non-standard not object offset only our prototype purpose representing result running safely settings since some specified stuff test that the this time timestamp timezone type tzdate unimplemented var via warning were where which will with without worse zone"},
{"section":"api","id":"angular.module","name":"angular.module","depth":1,"shortName":"module","type":"function","keywords":"$injector $locationprovider all and angular api application appname auto available being blocks bootstrap can collocation config configfn configuration configure core create created creating directive directives existing filters for function further global hashprefix however information initialization injector inside just like likely load mechanism module modules more must mycoolapp mymodule name new ng:app option party place process providers register registered registering requires retrieve retrieved same service services should simplify specified that the then this unspecified use used using value var with you your"},
{"section":"api","id":"angular.module.AUTO","name":"angular.module.AUTO","depth":2,"shortName":"AUTO","type":"overview","keywords":"$injector added angular api auto automatically each gets implicit module overview which"},
{"section":"api","id":"angular.module.AUTO.$injector","name":"angular.module.AUTO.$injector","depth":3,"shortName":"$injector","type":"object","keywords":"$inject $injector $provide adding all always and angular annotated annotating annotation annotations api are argument arguments array auto call calling can change code defined definition dependency does equivalent expect explicit extracted following for function get have holds inference inferred injection injector inline instances instantiate invoke item javascript last load methods minfication minified module modules names needed not obfuscation object onto parameters parsed property provider retrieve return returns servicea since specified the then these this tobe tools tostring true types used valid var way ways where with work works"},
{"section":"api","id":"angular.module.AUTO.$provide","name":"angular.module.AUTO.$provide","depth":3,"shortName":"$provide","type":"object","keywords":"$get $injector $provide additional ahoj allow angular api are auto beforeeach calls can configuration create describe expect factories for function greet greeter greetprovider have hello inject injector instance method methods module name new object provide provider providers register return salutation same service share should suffixed text the them they this toequal use var which with would"},
{"section":"api","id":"angular.module.ngMockE2E","name":"angular.module.ngMockE2E","depth":2,"shortName":"ngMockE2E","type":"overview","keywords":"$httpbackend angular api contains currently e2e end-to-end for mock mocks module ngmocke2e one only overview present suitable testing the there this which"},
{"section":"api","id":"angular.module.ngMockE2E.$httpBackend","name":"angular.module.ngMockE2E.$httpBackend","depth":3,"shortName":"$httpBackend","type":"object","keywords":"$http $httpbackend additionally adds afterwards and angular api apis app application applications array automatically backend backend-less behavior being bootstrap bypass can category certain closely configure create current data defines depends desirable developed development don during dynamic e2e end-to-end etc fake fetch files flush flushes for from fromjson handler have http implementation instead interact issue its like list manually mock mocked module modules myapp myappdev new ngmock ngmocke2e object often opposed optionally out pass passthrough phone phone1 phone2 phones please push real reason remote replaced request requests respond responses returns run scenario see service setup shortcuts simulating specific static suitable templates testing that the this through unit unit-testing url use used via want webserver when whenget whenpost with xmlhttprequest you your"},
{"section":"api","id":"angular.module.ng","name":"angular.module.ng","depth":2,"shortName":"ng","type":"overview","keywords":"all angular api contains core module overview services the which"},
{"section":"api","id":"angular.module.ng.$anchorScroll","name":"angular.module.ng.$anchorScroll","depth":3,"shortName":"$anchorScroll","type":"function","keywords":"$anchorscroll $anchorscrollprovider $location $rootscope $window according also anchor and angular any api called calling can changes checks current disableautoscrolling disabled element function hash html html5 http match module org related rules scroll spec specified the this value watches when whenever"},
{"section":"api","id":"angular.module.ng.$browser","name":"angular.module.ng.$browser","depth":3,"shortName":"$browser","type":"object","keywords":"$browser $log abstract all and angular api apis application away browser can caused convenient features for global goals has hide implementation inconsistencies interaction mock module ngmock object provide real service specific state testing tests the this two used which window with without"},
{"section":"api","id":"angular.module.ng.$cacheFactory","name":"angular.module.ng.$cacheFactory","depth":3,"shortName":"$cacheFactory","type":"object","keywords":"$cachefactory all angular api behavior cache cached cacheid capacity constructs created currently factory following for from get into items key key-value lru methods miss module name new newly number object objects options pair properties put puts remove removeall removes returns set size specifies that the turns undefined value values with"},
{"section":"api","id":"angular.module.ng.$compile","name":"angular.module.ng.$compile","depth":3,"shortName":"$compile","type":"function","keywords":"$compile $digest $injector $new $rootscope access allowing and angular any api application apply appropriate are around asking attach attrmarkup automatically available been before being bind bootstrap bootstrapped both bound bring but call called caller calling can case children chose clicked clone cloneattachfn cloned clonedelement collects comment compilation compile compiler compiles contain corresponding create current descend developer directive directives document doesn dom done each either element elements empty entire evaluation example except executed executes false following for found from function functions get guide hand have how html important information injector instance into invoke invoked keep life likely link linked linker linking manual_bootstrap manually many-times markup match means methods module must name need needs new ng:click not once one only original other own passed phase piece place point process processing produce produces provided rather reference registered repeater result results retain return returned returns right run scope section see send set single someparentscope state string template text that the them then there this through together transformed tree true trying two typically understand use used values var via view walking was ways when where which widget widgets will window with working works would write yet you your"},
{"section":"api","id":"angular.module.ng.$cookies","name":"angular.module.ng.$cookies","depth":3,"shortName":"$cookies","type":"object","keywords":"$browser $cookies $eval access adding and angular api are browser cookies created current end exposed module new object only properties provides read removing simple the this"},
{"section":"api","id":"angular.module.ng.$cookieStore","name":"angular.module.ng.$cookieStore","depth":3,"shortName":"$cookieStore","type":"object","keywords":"$cookies $cookiestore angular api are automatically backed cookies deserialized from key-value module object objects provides put retrieved serialized session storage that this tojson"},
{"section":"api","id":"angular.module.ng.$defer","name":"angular.module.ng.$defer","depth":3,"shortName":"$defer","type":"function","keywords":"$browser $defer $exceptionhandler and angular any api block but can cancel defer deferid deferred delegates exceptions execution flush function functions into milliseconds module queue service should task tests that the try use used via who wraps you"},
{"section":"api","id":"angular.module.ng.$document","name":"angular.module.ng.$document","depth":3,"shortName":"$document","type":"object","keywords":"$document $window angular api browser document element jquery module object reference the window"},
{"section":"api","id":"angular.module.ng.$exceptionHandler","name":"angular.module.ng.$exceptionHandler","depth":3,"shortName":"$exceptionHandler","type":"function","keywords":"$exceptionhandler $log angular angular-mocks any api browser console default delegated delegates error exception expressions function implementation into loaded logs mock module ngmock overriden service simply tests the this uncaught unit which"},
{"section":"api","id":"angular.module.ng.$filterProvider","name":"angular.module.ng.$filterProvider","depth":3,"shortName":"$filterProvider","type":"object","keywords":"$filterprovider $injector $provide about achieve always and angular annotated api are check consists create creating definition demonstrate dependencies dependency developer expect factory filter filters for forgiving function functions generate greet guide hello how however information inject injected injection input instance just module more mymodule name need needed object output own register registered registration responsible return reverse reversefilter salutation same see service should suffixe templates text the this tobe transform under understanding uses validity value which with work your"},
{"section":"api","id":"angular.module.ng.$formFactory","name":"angular.module.ng.$formFactory","depth":3,"shortName":"$formFactory","type":"object","keywords":"$apply $createwidget $destroy $element $emit $error $formfactory $inject $invalid $modelvalue $parsemodel $render $rootscope $valid $viewchange $viewvalue and angular api are attr bind both but catch classname collection cols contenteditable controller controllerargs could create cycle data-binding default destroyed directive dom editorcntl editorform element enable enter example exp expect feature find for forelement form function get given how html htmleditorwidget htmlfilter injection input instance instances invalid invalidate keep keyup life mind model module name nearest need new ng:contenteditable ng:controller ng:model none not notify now object one parent parentform parsable prop protect responsible return rootform scope scopes script self should shows specified that the then this tomatch true try use validation var were which widget widgets would write"},
{"section":"api","id":"angular.module.ng.$formFactory.Form","name":"angular.module.ng.$formFactory.Form","depth":4,"shortName":"Form","type":"object","keywords":"$formfactory angular api contained controller form keeps module object the track validity which widgets within"},
{"section":"api","id":"angular.module.ng.$http","name":"angular.module.ng.$http","depth":3,"shortName":"$http","type":"function","keywords":"$browser $cachefactory $http $httpbacked $httpbackend $httpprovider $injector $provide $resource $rootscope able above absolute abstraction accept accessing add added adding address advantage all allows also and angular angularjs anonymous any api apis application applications applies are argument arguments array aspx assured asynchronous asynchronously attack authentication automatically available backend before being below body both browser built but cache cached caching callback callbacks called came can certain check click client code com comes common communication complete conditions config configuration configured consider considerations contains content-type cookie cooperate cooperation core could counter created creating cross currently data debugging default defaults deferred definition delete delivery dependencies dependency1 dependency2 describing deserialize deserialized design designing desirable destructured details detected digest domain each element eliminate enable enabled equal error etc even example examples expect factories factory failed fails false fetch fetchctrl first following for forgery format from fulfil fulfilled fully function functions gain general generate get getter global globally handed handler handling has have head header headers headersgetter hello hero higher how html http https info initiated injected instance intercept interceptor interceptors into invalid invocation invoke issues its javascript jsfiddle json jsonp kind level leverage list local locally lower-cased made make making map matches meant mechanism message method methods milliseconds mock module more mozilla multiple must my-header myhttpinterceptor name need needs new next ng:click ng:controller ng:model ngmock non-get not note null object objects occurs one only order org original other otherwise out outside over overridden override overwrite own parser party passed pending pendingrequests performing php please populated post pre-configured prefix preprocessing prevent primarily private processed processing promise properties property protection provided provides purposes push put range read readable reads real receive received recommend register registered reject relative remaining remote remove representation representing request requested requests require required resource respectively response responseinterceptors responseornewpromise responses responsible return returned returns running runs salt same sample section security see self send sending sent serialize serialized served server servers service session set sets setting shortcut should signature simplify simply since single site size some something specific specified specifying standard start status stores strategies string strings strip subsequent succeeds success such sure synchronous take takes technique testing text than that the them then there therefore these they third this threats time timeout tobe token tokens tomatch transform transformations transformed transformrequest transformresponse transforms true turn two type unauthorized under understand unique unit updatemodel url usage use used user using value var verifiable verify version via vulnerability vulnerable was way web web-site well were when which wikipedia will with without work x-requested-with x-xsrf-token xhr xmlhttprequest xsrf xsrf-token yet you your"},
{"section":"api","id":"angular.module.ng.$httpBackend","name":"angular.module.ng.$httpBackend","depth":3,"shortName":"$httpBackend","type":"object","keywords":"$browser $document $http $httpbackend $resource $window abstractions and angular api backend browser can deals delegates directly during higher-level http implementation incompatibilities instead jsonp mock module need never ngmock object responses service should swapped testing that the this trained use used which with xmlhttprequest you"},
{"section":"api","id":"angular.module.ng.$locale","name":"angular.module.ng.$locale","depth":3,"shortName":"$locale","type":"object","keywords":"$locale angular api components en-us for formatted languageid-countryid locale localization module now object only provides public right rules service the various"},
{"section":"api","id":"angular.module.ng.$location","name":"angular.module.ng.$location","depth":3,"shortName":"$location","type":"object","keywords":"$browser $document $location $sniffer address and angular api application are available back bar browser button can change changes clicks current developer exposes for forward guide hash history host https information into link location makes methods module more mozilla object observe org parses path port reflected represents search see service services set synchronizes the url user using watch when window with you your"},
{"section":"api","id":"angular.module.ng.$locationProvider","name":"angular.module.ng.$locationProvider","depth":3,"shortName":"$locationProvider","type":"object","keywords":"$locationprovider angular api application are configure deep how linking module object paths stored the use"},
{"section":"api","id":"angular.module.ng.$log","name":"angular.module.ng.$log","depth":3,"shortName":"$log","type":"object","keywords":"$log $window and angular api browser button console debugging default enter error for function hello hit implementation info into log logctrl logging main message module ng:click ng:controller ng:model object open page present purpose service simple simplify text the this troubleshooting type warn with world writes"},
{"section":"api","id":"angular.module.ng.$q","name":"angular.module.ng.$q","depth":3,"shortName":"$q","type":"service","keywords":"$apply $http $rootscope access action additionally after alert all allow allowed allows and angular another any api apis approach are argument associated assume async asyncgreet asynchronous asynchronously attached available avoiding because been between browser but bytes call callback callbacks called calling calls can catch chain chaining chains changes code com comes common commonjs completes completion complexity composition constructed contains cost could create created current dealing defer deferred derived describes differences documentation easily else engine equivalent error errorcallback especially event example executes expose extra failed faster features finished first flickering for from function functionality further future get given greeting handling hard has have hello hood immediately implement implementation important incremented injected inspired instance instead integrated interacting interceptors interested interface into its joining keywords kowal kris length let lexical like loop main make makes many may means mechanism method might model models module more name need needed new not object observation observed obvious one org our parallel parties passed pause payoff performed perspective please point possible powerful programing promise promisea promiseb promises propagation properly proposal purpose reason recognized regardless reject rejected rejection rejects repaints represents resolution resolve resolved resolves resolving response result resulting retrieved return returns robin scope section see serial service settimeout signaling since single soon success successcallback successful synchronous task tasks templates templating that the then there they this three throw time tiny traditional treat trouble try turn unnecessary unsuccessful used value values var variables very via was way well were what when which why wikipedia will with worth would wrap you your"},
{"section":"api","id":"angular.module.ng.$resource","name":"angular.module.ng.$resource","depth":3,"shortName":"$resource","type":"object","keywords":"$action $charge $http $inject $resource $save abc above access action action2 actions activities activity activityid actor actual after all allows and angular any api appended are array arrives assigned automatically available becomes behaviors bound buzz buzzcontroller callback calling came can card cardid cards case charge class client collection com comments contains content could count create created creates credit creditcard crud custom data declaration default define definition delete depending destination each easily empty example excess execution existing expandreplies expect extend extended extracted factory false fetch first float following font-size for format from function get getresponseheaders gets getter given googleapis googlebuzz greet has hash having header headers hello high-level href html http https immediately important instance instanceof instances interact invoke invoked invoking isarray item items itself jsfiddle json json_callback jsonp key keys let lets level like links look looks low mapped margin-left max-height means method methods mike model module most name need never new newcard ng:click ng:controller ng:model ng:repeat non non-get noting number object once one onto operations optional optionally org other our overridden paramdefaults parameter parameterized parameters params passed perform populated post postdata pre-bound prefix prefixed present profileurl prototype provide put putresponseheaders query re-renders read realize reference remove rendered rendering replies reply request resource response results retrieve returned returns rewrite right salutation save saved search section see server server-side service set should showing since smith sources specified src static style success support template that the then these this thumbnailurl toequal trick true type update url useful user userid usually valid value values var view well what when where which wikipedia with without worth write you your"},
{"section":"api","id":"angular.module.ng.$rootScope","name":"angular.module.ng.$rootScope","depth":3,"shortName":"$rootScope","type":"object","keywords":"$rootscope all and angular api application are child developer event every for guide has life-cycle mechanism model module object other processing provide root scope scopes see single the watching"},
{"section":"api","id":"angular.module.ng.$rootScope.Scope","name":"angular.module.ng.$rootScope.Scope","depth":4,"shortName":"Scope","type":"function","keywords":"$digest $injector $new $rootscope $watch all and angular api append are auto automatically been called can child compiled created current default defaults dependency example executed expect factory fire for from function greeting guide handy have having hello here how html inherit inheritance initialize injection injector instancecache interact invoke key map method misko module name need newly not old override parent pre-instantiated provided providers provides retrieved root salutation scope scopes see service services should show simple since snippet still template the this toequal unit-testing using value var watch watches welcome when which with world yet you"},
{"section":"api","id":"angular.module.ng.$route","name":"angular.module.ng.$route","depth":3,"shortName":"$route","type":"object","keywords":"$location $route $routeparams against all and angular api array bookcntl causes ch1 ch4 changing chaptercntl choose configured conjunction controller controllers current deep-linking definition example examples existing false for function hash how href html jsfiddle maincntl map match module name ng:controller ng:view object params partial partials path pulls reference route routes scope service shows template the this tries typically url urls used views watches when widget with"},
{"section":"api","id":"angular.module.ng.$routeParams","name":"angular.module.ng.$routeParams","depth":3,"shortName":"$routeParams","type":"object","keywords":"$location $route $routeparams and angular api are case change collision com combination current even extracted given guarantees html http identity its likely matched moby module name object occurs over parameter parameters params path precedence properties remain route search sectionid service set take that the then unchanged url when will"},
{"section":"api","id":"angular.module.ng.$sniffer","name":"angular.module.ng.$sniffer","depth":3,"shortName":"$sniffer","type":"object","keywords":"$sniffer $window angular api browser does event features hashchange history html5 implementation module object simple support testing the this very"},
{"section":"api","id":"angular.module.ng.$window","name":"angular.module.ng.$window","depth":3,"shortName":"$window","type":"object","keywords":"$service $window alert all always angular api are available because browser causes current don evaluated expressions for from global globality globally greeting hello javascript may mocked module ng:click ng:init ng:model object overriden problems refer reference removed respect scope service suffer testability testing text the they through type variable while window with world"},
{"section":"api","id":"angular.module.ng.$filter","name":"angular.module.ng.$filter","depth":3,"shortName":"$filter","type":"function","keywords":"$filter angular api are data displayed expression filter filter_name filters follows for formatting function general module name retrieve syntax templates the used user"},
{"section":"api","id":"angular.module.ng.$filter.currency","name":"angular.module.ng.$filter.currency","depth":4,"shortName":"currency","type":"filter","keywords":"$filter amount angular api ctrl currency current custom default displayed enter expect filter for formats formatted function identifier init input locale module ng:controller ng:model number provided should symbol this tobe type update usd used when with"},
{"section":"api","id":"angular.module.ng.$filter.date","name":"angular.module.ng.$filter.date","depth":4,"shortName":"date","type":"filter","keywords":"$filter also angular api based can clock composed contain date datetime day description digit eee eeee either elements en_us equivalent expect extended filter following for format formats formatted formatting friday fulldate function guide hour i18n input iso literal locale localizable longdate marker medium mediumdate mediumtime milliseconds minute mmm mmmm module month morning need ng:non-bindable not number object offset one order output padded predefined quote quoted quotes recognized representation requested rules second sep september sequence short shortdate shorttime should single specified sssz string the these timezone tomatch two use used values week with year yyyy yyyy-mm-dd"},
{"section":"api","id":"angular.module.ng.$filter.filter","name":"angular.module.ng.$filter.filter","depth":4,"shortName":"filter","type":"filter","keywords":"$filter about above accept across adam against all and angular any api arbitrary array arrays augment called can column contain contained containing described each element elements enter equivalent example expect expression expressions fields filter filtering filters final for friend friends from function have information input items john julie mary match mike module more name negated new ng:init ng:model ng:repeat note object objects one only pattern phone predicate prefixing properties property result results return returned returns search searchobjresults searchtext searchtextresults see selecting selects should simple source special specific string strings subset substring text that the this those toequal true type used using value when which will with write"},
{"section":"api","id":"angular.module.ng.$filter.html","name":"angular.module.ng.$filter.html","depth":4,"shortName":"html","type":"filter","keywords":"$filter absolutely all and angular any api application are argument attacks back being binding browser but bypasses call can color cols content ctrl default discouraged dom enter escape escaped escaped-html expect filter filtered from function get getting hate here however html html-filter html-unsafe-filter inline input inserted into make makes may means module more new ng:bind ng:controller ng:model not obscure only onmouseover option optional other our parser parsing possible prevents properly pwn3d raw recognized returned rows safe sanitize sanitized sanitizer serialized should since snippet some strict string strongly style textcontent than that the then this through tobe tokens trust typical unsafe update used users using valid vulnerable which whitelist with without won would xss you your"},
{"section":"api","id":"angular.module.ng.$filter.json","name":"angular.module.ng.$filter.json","depth":4,"shortName":"json","type":"filter","keywords":"$filter allows always and angular any api applied arrays automatically binding convert converted curly debugging double element encapsulating expect filter filtered for function into javascript json jsonify module mostly name ng-monospace notation object objects primitive should string the this tobe types useful using value when you"},
{"section":"api","id":"angular.module.ng.$filter.limitTo","name":"angular.module.ng.$filter.limitTo","depth":4,"shortName":"limitTo","type":"function","keywords":"$filter about and angular api are array arrays augment beginning containing copied creates ctrl doc-example-live either elements end enter entered exceed exceeds expect expressions first for from function had information input integer items json length less limit limited limitto maximum module more negative new ng:controller ng:model not note number numbers numer only output positive returned see should sign size source specified sub-array taken than the this three tobe toequal trimmed type update used val value when will"},
{"section":"api","id":"angular.module.ng.$filter.linky","name":"angular.module.ng.$filter.linky","depth":4,"shortName":"linky","type":"filter","keywords":"$filter address and angular another api binding cols ctrl email enter escaped-html expect filter finds ftp function href html html-linkified http input into linkify links linky linky-filter mailto module more new ng:bind ng:controller ng:model not one org plain pretty rows should snippet some supports text the them this tobe turns update urls with without"},
{"section":"api","id":"angular.module.ng.$filter.lowercase","name":"angular.module.ng.$filter.lowercase","depth":4,"shortName":"lowercase","type":"filter","keywords":"$filter angular api converts filter lowercase module string"},
{"section":"api","id":"angular.module.ng.$filter.number","name":"angular.module.ng.$filter.number","depth":4,"shortName":"number","type":"filter","keywords":"$filter after and angular api ctrl decimal decimalplaces default digit each empty enter expect filter format formats formatting fractions function input module negative ng:controller ng:model not number numbers places returned round rounded should string text the third this tobe update val"},
{"section":"api","id":"angular.module.ng.$filter.orderBy","name":"angular.module.ng.$filter.orderBy","depth":4,"shortName":"orderBy","type":"function","keywords":"$filter about adam age aged angular api are array arrays ascending augment but called can class click column comparator control copy ctrl descending determine different doc-example-live element elements equivalent evaluates example expect expression expressions first for friend friends function getter href informaton items john julie mary mike module more name next ng:click ng:controller ng:repeat note number object one operator optionally order orderby ordered orders phone predicate predicates prefixed property reorder result reverse see selects should sort sorted sorting source specified string such table the this tobe toequal two type used user using when which will with"},
{"section":"api","id":"angular.module.ng.$filter.uppercase","name":"angular.module.ng.$filter.uppercase","depth":4,"shortName":"uppercase","type":"filter","keywords":"$filter angular api converts filter module string uppercase"},
{"section":"api","id":"angular.module.ngMock","name":"angular.module.ngMock","depth":2,"shortName":"ngMock","type":"overview","keywords":"$injector adds and angular api auto configuration mocks module ngmock overview the unit-test used useful well which with"},
{"section":"api","id":"angular.module.ngMock.$browser","name":"angular.module.ngMock.$browser","depth":3,"shortName":"$browser","type":"object","keywords":"$browser $defer angular api apis are available browser can code commonly cookies defer enables etc except executing fake following for functions hard helper implementation methods mock module ngmock object provides real same service settimeout several test testing tests that the there this used uses via which xhr"},
{"section":"api","id":"angular.module.ngMock.$exceptionHandler","name":"angular.module.ngMock.$exceptionHandler","depth":3,"shortName":"$exceptionHandler","type":"object","keywords":"$exceptionhandler $exceptionhandlerprovider angular api configuration errors for implementation information into logs mock module ngmock object passed rethrows see that"},
{"section":"api","id":"angular.module.ngMock.$exceptionHandlerProvider","name":"angular.module.ngMock.$exceptionHandlerProvider","depth":3,"shortName":"$exceptionHandlerProvider","type":"object","keywords":"$exceptionhandler $exceptionhandlerprovider angular api configures errors implementation into log mock module ngmock object passed rethrow the"},
{"section":"api","id":"angular.module.ngMock.$httpBackend","name":"angular.module.ngMock.$httpBackend","depth":3,"shortName":"$httpBackend","type":"object","keywords":"$http $httpbackend $injector $new a-token about aftereach algorithm all allow allowing allows alternatively always and angular any api apis application appropriate are assert assertions async asynchronously auth authentication authorization backend backend-less because been beforeeach behavior below both but calls can care cases certain change check class code common content controller create data define defined definition definitions dependencies dependency development didn doesn don during dynamic e2e easy end end-to-end error etc evaluated execute execution expect expectation expectations expected expectget expectpost explicitly external fail fake fetch first flush flushing follow for from function get gets hard has have having header headers http https implementation inject injection jsonp just let made maintain make makes match matched matters message method mock module mozilla msg multiple mycontroller need needs ngmock ngmocke2e not now object order org our particular pass pending please post pre-trained preserved preserving production provide quickly real really reason request requests required respond responds response responses result return returned returns run same savemessage saving scope search see send sending sends sent sequential server service shortcuts should some specified specifies specify static status still success suitable synchronously table test testing tests that the their them there they this those thus time tobe token trained two undefined under unit usage use used user userx using var verify verifynooutstandingexpectation verifynooutstandingrequest via want was wasn way ways what whatever when whenpost where whether which while width wikipedia will with without won would write wrong xhr xxx you your"},
{"section":"api","id":"angular.module.ngMock.$log","name":"angular.module.ngMock.$log","depth":3,"shortName":"$log","type":"service","keywords":"$log all angular api are array arrays each error exposed for function gathers implementation level level-specific log logged logging logs messages mock module ngmock per property service that the these"},
{"section":"cookbook","id":"index","name":"Cookbook","depth":0,"shortName":"Cookbook","type":"overview","keywords":"able abstractions across add advanced advancedform aids ajax allowing anchor and angular api app application applications apps are available away basic behavior bidirectional binding bread but butter buzz changes changing classic collection common communicate controller controllers cookbook creates data deep deeplinking demonstrates dependency design detection dirty disabling displaying dom easy editing eliminating emailing errors example exist external features first for form forms from full-page get global hello helloworld here implement initialization initialized injection instead its level likely linking links lived loads long maintainability makes model module multi-page must mvc navigates never next objects order overview own page particular pattern perils possible pre-bundled presentation prevent problem project providing reloading reloads resolves resources responsive reverting safeguards screen screens send separate separation services show simplest single solve specially specific state submit such tailored taking testability that the this through thus tic-tac-toe time-tested tries typical update url urls useful user uses using validation view way web welcome what which will with within without world you your"},
{"section":"cookbook","id":"advancedform","name":"Cookbook: Advanced Form","depth":1,"shortName":"Advanced Form","type":"overview","keywords":"$invalid addcontact address advanced and angular anytown are attr back basic being button buttons cancel change changes city click common contact contacts cookbook copy debug detection dirty disabled element enable enabled enter equals errors example expect extend features for form function here href include input internal invalid iscanceldisabled issavedisabled john length line1 main master model models myform name ng:click ng:controller ng:disabled ng:model ng:pattern ng:repeat notice one only original other overview phone presented preventing pristine prototype push removecontact required return reverting reverts save should shows size smith something splice state submission such text the there this tobefalsy tobetruthy toequal two type updates user userform val validation value var view zip"},
{"section":"cookbook","id":"buzz","name":"Cookbook: Resources - Buzz","depth":1,"shortName":"Resources - Buzz","type":"overview","keywords":"$inject $resource activities activity activityid actor and angular api are attach behavior buzz buzzcontroller callback can class click com comments content cookbook count data div element example expand expandreplies expect external factory fetch float font-size for function get give google googleapis googlebuzz has help href html http https item items json json_callback jsonp links margin-left max-height name names ng:click ng:controller ng:href ng:model ng:repeat ng:src object overview params profileurl prototype provide rendered replies reply resource resources retrieve right style templates that the them then this thumbnailurl tobegreaterthan urls use used userid which with xit you"},
{"section":"cookbook","id":"deeplinking","name":"Cookbook: Deep Linking","depth":1,"shortName":"Deep Linking","type":"overview","keywords":"$inject $location $route alert allows also and angular anonymous any api app appcntl application appropriate are assign associated assumptions background-color behavior blue bookmarked bookmarks bootstraps border boundary but can cancel case causes change changed changes changing chrome class click color com common consist consists construct constructed contact contacts controller cookbook copy current deal deep define defined described details difference display divided does each easy edit element email encode enter etc example expect false following footer for force form from function greet has have hello here home href html implement information initialization initialize input instantiated instantiates into jsfiddle later like line linking loads make makes maps margin model module most multiple name navigate newly ng:controller ng:ext-link ng:view not notice overview padding page parent partial partials particular path person programatically proper prototype refer restored routes routing same save scope screen screens service services sets settings settingscntl several should show shows simple single snippet solid something state style sufficient table template text that the then these things this tomatch two url urls useful user using very view views visible visit watches way welcome welcomecntl when whether which while white widget will with would you your yourname"},
{"section":"cookbook","id":"form","name":"Cookbook: Form","depth":1,"shortName":"Form","type":"overview","keywords":"$rootscope abc add addcontact adding address allow and angular anytown api application are array available better blank both build can city class classname click clicking contact contacts controller cookbook data data-bound debug debugging digits directive div element enter entering example expect field for form formcontroller forms from function gather going guide have how href included initial initialized input inputs into items john leaving length line1 link main make model module name new ng:click ng:controller ng:model ng:pattern ng:repeat non not notice off operations org overview phone present prop purpose purposes push read reason refer reflected remove removecontact required scope should show shows simple simply size smith splice state strives text the them then these things this tomatch trivial type understand updated user using validate value var view web what which widget widgets will with write xxx you your zip"},
{"section":"cookbook","id":"helloworld","name":"Cookbook: Hello World","depth":1,"shortName":"Hello World","type":"overview","keywords":"$rootscope and angular any api binding binds bootstrap bootstraps bound brace change changes concept cookbook curly data databinding double enter enters environment event events expect field firing for function greeting guide hello hellocntl implicit input listener look module name need ng:controller ng:model note notice overview presence reflects registration root scope script should source tag take templates text that the things this through toequal type user value variable when which widget world your"},
{"section":"cookbook","id":"mvc","name":"Cookbook: MVC","depth":1,"shortName":"MVC","type":"overview","keywords":"$index $location $rootscope $watch above all allows and angular any api are available back because behavior between black board border browser button call calls can cell cellstyle center changes changing class clean click code col connection controller cookbook copy cursor deep-linking defined diagonal droppiece easy element example execute expect for foreach function functions game grade grafted has hash height html injected instantiate instantiated into invokes isolation javascript join just listener logic makes middle model module mvc needed next nextmove ng:click ng:controller ng:repeat ng:show ng:style notice one onto overview piece play player pointer projection properties prototype push readurl reference rendering reset return row rows same scope search see separation set seturl share should simply since solid split state steps still stored style template test testable text text-align that the there things this tictactoecntl toequal undo url value var variable vertical-align very view when which width will winner without won"},
{"section":"guide","id":"index","name":"Developer Guide","depth":0,"shortName":"Developer Guide","type":"overview","keywords":"about and angular apps are auto_bootstrap automatic before bootstrap both check come comparing compiler completely component controller controllers creating creating_services dependencies dependency details dev_guide develop developer directives directives_widgets documents filters following forms getting guide here how html initialization initializing injection internals learn managing managing_dependencies manual manual_bootstrap markup may misc model mvc objects one out overview place relatively returning right scope scopes service services started templates testing testing_services the tutorial understanding understanding_controller understanding_di understanding_model understanding_scopes understanding_services understanding_view unfamiliar use using using_di_controllers view want web welcome widgets with you"},
{"section":"guide","id":"dev_guide.overview","name":"Developer Guide: Overview","depth":1,"shortName":"Overview","type":"overview","keywords":"$10 $19 _expression_ _really_ _you_ about above add addchild adding affected ajax all allowfullscreen allowing allows allowscriptaccess almost along also although always amount and angular angularjs another answer any api apis app application applications approach apps are around aspect assists attribute authoring auto auto-injected automated automatically back basic been behind belief better bidirectional bind binding bit blank boilerplate bonus bootstrap borders both bound braces browser browsers building built built-in built-ins business but call callbacks can cause change changes class client client-side clutters code coding color com combination comes comfort coming common compiler complex component components consider control core cornerstone cost could create creates crud cumbersome curly currency cycle data declarative declaratively decouple deeper demonstrate dependency-injection depends describe describes describing design designer designing details dev_guide develop developer developers developing development different difficult difficulty directive directs disappears display displaying does doesn dom don double double-curly dramatically dynamic early easier easily easy edited either eliminates enough ensures enter entire equal erm error-prone errors example excellent executes existing expand expect expressing expression extends extensible fantastic far features feedback few field fields filter filters finally fine first flow following for forest form format formatting four framework freed frees from full function functions get gets give given going gone good google got greater guice guide guides gwt hard has have height hello helpful here home homing hours how html http https hundreds idea immerse imperative implement implementation importance improves includes indeed initialization initialize input instant integer integrate internal into introductory invalid invoicecntl its itself javascript journey jquery july just know label leave leaving let level libraries library life like line list listeners live load loaded logic long look looks lot lots low major majority make makes making manipulate manipulating manipulation many markup marshaling may might min model model-view-controller modify money more most movie much multiply mysterious name names namespace need never new ng:app ng:bind ng:controller ng:model nice nicely normal not notation note noticed now number object occurred one only operations org others out output over overall overview page pain parallel parent part parts pattern perceive perhaps philosophy place plumbing point points possible powerful presentation preview process programatically programmatic progress provide provides put qty quantity quickly rather read really reasons red reduces reflected refreshing regard registering removes removing required resulting returning reuse round run runs same saving say scenes see server services setclass sets settext short shortcut should show side sides simple simply since single sites software some source specify spent src started state structured style substantial subsystem such suffice sum sweet syntax system systems tag tags talk tasks teaches technology template templates templating testability testing tests text than that the them then there these they thing things think this those thought thous thrill thrilled through time times toequal together tons too tools total traditional transformed trees tricks trip trivial true truth try turn two-way type typically uis user users uses using utility validating validation validators value var variables vastly versus very view vocabulary walk want wanted was watch way web well what when where which while why widget widgets width will wiring with within without work working world would write writing written xmlns yes you your yourself youtube"},
{"section":"guide","id":"dev_guide.bootstrap","name":"Developer Guide: Initializing Angular","depth":1,"shortName":"Initializing Angular","type":"overview","keywords":"add addition alias all and angular angular- another are auto_bootstrap automatic automatically bootstrap browsers called cases choose com comes compile compiler compressed consists could create creating debug debugging declaration declare define dev_guide developer development domain either example explorer file flavor flavors following follows for form fully guide how html http human-readable initialization initialize initializing internet load loading manage manual manual_bootstrap map min must name namespace namespaces need ng:app not obfuscated older org overview own page process production properly qualified ready related render script set should simplest simply specify specifying src suitable tag tell than that the this topics two unique use using version versions way when whether which whole widget widgets xhtml xmlns you your"},
{"section":"guide","id":"dev_guide.bootstrap.auto_bootstrap","name":"Developer Guide: Initializing Angular: Automatic Initialization","depth":2,"shortName":"Automatic Initialization","type":"overview","keywords":"$compile add all and angular api apis are assume attempt automatic automatically because before bootstrap bound browser can children compilation compile compiler contains creates details dev_guide developer directive document dom domcontentloaded during element entire event exists fields for found from global guide happens high-level how html included initialization initializes initializing into its just load loads looks manual manual_bootstrap may module namespace ng:app not object only optionally options order overview page part portion proceeds process processed reason related root runs script see set should single specify src that the then this topics variable view waits what when why with works you your"},
{"section":"guide","id":"dev_guide.bootstrap.manual_bootstrap","name":"Developer Guide: Initializing Angular: Manual Initialization","depth":2,"shortName":"Manual Initialization","type":"overview","keywords":"$compile advanced after angular angularjs api application auto_bootstrap automatic best bi-directionally bootstrap bootstrapping bound but call can choose code compile compiler control dev_guide developer directive document each element executable explicitly find follow get guide handle handy happens hello html http initialization initializing instead into letting loaded look manual method module more ng:app org over overview own page process ready related root sequence should showing src start started step template that the this topics typically use users using want way what when which who with world xmlns you your"},
{"section":"guide","id":"dev_guide.mvc","name":"Developer Guide: About MVC in Angular","depth":1,"shortName":"About MVC in Angular","type":"overview","keywords":"about acquired along and angular appeared applications basic behind better between building client-side component components controller coupling data dependency design dev_guide developer developing different distinct easier encourage explain first following greatly guide has how http incorporates injection into its logic loose maintain makes meaning model model-view-controller more mvc org original over overview pattern presentation principles separate services shades since software structured summarized testable the these topics understanding understanding_controller understanding_model understanding_view view way web while wikipedia with years"},
{"section":"guide","id":"dev_guide.mvc.understanding_controller","name":"Developer Guide: About MVC in Angular: Understanding the Controller Component","depth":2,"shortName":"Understanding the Controller Component","type":"overview","keywords":"$eval $new $rootscope $route about above accomplished across add adding affects all along also always and angular any api app application applied applies are argument arguments assigned assigning assignment associate associating augment augmented augments automatic automatically available away baby babyctrl based because become becomes beforeeach behavior being belong between binding body both bound box business but button buttons called can capital child childctrl children chili chilispicy clicked code common compiler complicated component components consisting constant construct constructors contain contains context controller controllers convention correctly could create created creates creating ctrl customspice data-binding databinding default defined defines demonstrated dependency depending depends describe dev_guide developer direct directive directives directly discussed does doesn dom earlier element encapsulate encapsulating ends evaluated evening event example examples excluding existing expect explicitly expressions filtering filters first following food for form formatting forms from function functions general gingerbreak greeting greetingctrl guide habanero handlers happens hard have hola hot how illustrate implicitly inheritance inherits initial injection input instances instantiate instantiated instead interacts into invoked invoking its jalape jalapeno jalapenospicy javascript just keep keyword kind known lava length let letter life-cycle little logic look mainctrl manage manipulation manual mattie means mentioned message method methods might mild model models modifies module morning most much mvc mycontroller name named naming necessary need needed nested never new ng:click ng:controller ng:model nikki not note notice now object objects offers one only operator option other our output overview own parent pasilla pass passes perform plain presentation previous primitives properties property prototype prototypical putting rather referred refers related replaced result return root run same scope scopes second section sections sense service services set sets setting shadows shared should shouldn significantly simple single slim spice spiceiness spiceness spices spiciness spicy spicyctrl standard starts state stateful stateless string take takes task tell template templates test testability testing that the then there these things this three through timeofday tobe too topics try two type typically understanding understanding_model understanding_view updated updates upon use used using value values var variation very via view was wasabi way well when which widgets will with within work works you your"},
{"section":"guide","id":"dev_guide.mvc.understanding_model","name":"Developer Guide: About MVC in Angular: Understanding the Model Component","depth":2,"shortName":"Understanding the Model Component","type":"overview","keywords":"_model_ about above all and angular any api application applications apps array arrays assign assigning assignment ball bar become being called can child cloud code collection commonly component constructs contain contains context controller controllers create created creates creating current data declaration depending dev_guide developer direct directive discussion documentation each either elements eligible entire entities entity example explicitly expression expressions fluffy following foo for form from function garbage guide identifier illustration img implicitly initial input item iterator its javascript make model models most must mvc myctrl name ng:click ng:init ng:model ng:repeat ng:repeater not object objects occurs one only operator other overview phone phones png primitives processing properties property query reachable real recommended refer reference referenced references referencing related representing requirement scope scopes select set shows simple single src stale stops suitable template templates term textarea that the these this topics toy understanding understanding_controller understanding_view use value view ways when widget with you"},
{"section":"guide","id":"dev_guide.mvc.understanding_view","name":"Developer Guide: About MVC in Angular: Understanding the View Component","depth":2,"shortName":"Understanding the View Component","type":"overview","keywords":"about after and angular api associated based bindings both browser call can component controller data-binding dev_guide developer directive directives dom form function functions guide has img implementation information knowledge knows loaded model mvc ng:controller ng:view occurs overview png related rendered src such template the these this through topics transformed two-way understanding understanding_controller understanding_model view ways where widget"},
{"section":"guide","id":"dev_guide.scopes","name":"Developer Guide: Scopes","depth":1,"shortName":"Scopes","type":"overview","keywords":"$apply $eval $rootscope $watch addition additional all also and angular any api apis apply are between bindings can changes communicate compilation components context contexts controller created creates data data-bindings dev_guide developer directive during elements evaluated example expressions for functions get guide html input instances interested internals javascript link linkage linked mechanism medium model model-view-controller module ng:bind notify object objects overview paradigm process property provide provides providing registered related scope scopes serve system template the think this through together topics understanding understanding_scopes useful view watch watching which with within you"},
{"section":"guide","id":"dev_guide.scopes.internals","name":"Developer Guide: Scopes: Scope Internals","depth":2,"shortName":"Scope Internals","type":"overview","keywords":"$apply $defer $destroy $digest $http $location $new $provide $rootscope $watch $watch-er $watch-ers about access action after afterwards against all allow allows already always ancestor and angular angularized any api apis application applications applied are argument assert associated asynchronous attach attached automatically available back because before behavior binding both built-in but button call callbacks called calling calls can cases categories cause change changes characteristics check checked child clicking code collector come comes compilation compile compiler components comprise context control controller controllers correct correctly corresponding create created creates creator current custom cycle cycles data decide defaulting define demonstrates dependency dependents describes design destroy destroyed destruction detail detected dev_guide developer digest directive directives docs does doesn doing dom double-curly during each effects element elements end enough entire environment etc evaluate evaluated event events every example execute executes execution expect explicitly expose expression expressions external extra fall fetch find fire fires firing following for framework free from full function functions garbage get gets getting given grandparent granularity greeting guide handlers happen happens has have having hello hide how however html immediately implementation implicitly including information inherit inheritance inherits inject injected injection inputs instances instead interact interactions intercepts internals into invoke isolate its javascript kinds life listener listeners longer made magic make managed managing manually matches may means memory method methods might mimic mimics mock mocks mode model model-view-controller models module more most must mutate mutation mutations mvc name necessary need needed needs nested nesting new ng:click ng:controller ng:include ng:repeat normal not notified object objects observation observations observe observed observing one only other outside over override overview own parent parentscope parts passed pattern phase play process propagate propagates propagating propagation properly properties property provide providers providing pushes read realm reason received reclaimed recursively references reflected register registering registration related released remove request reside response responsibility results retrieve right root run-time same scope scopes section see sense server service services set shared should shown side similarly since situations some spec started stop such super-heroic synchronous system template templates test tests that the their them then there these think this those through throughout time timer timers tobe toequal topics transitions trigger triggered two type typical typically undefined understand understanding understanding_controller understanding_scopes unit-testing unit-tests unnecessary update updated updates updating use used user using usually value var via view watch watcher watches way what when whenever whether which while widget widgets will with within work worry wraps write writes written xhr xhrs yet you your"},
{"section":"guide","id":"dev_guide.scopes.understanding_scopes","name":"Developer Guide: Scopes: Understanding Scopes","depth":2,"shortName":"Understanding Scopes","type":"overview","keywords":"$rootscope above along and angular any api are array arrays attached attaches automatically based bindings binds built called can changes child closest code controller created creates data dev_guide developer directive display displayed doc-example-live doesn dom during each element elements example expect expression find finds following for from function functions further gail guide hank has have hierarchy how html igor illustration img infrastructure inherits initialization initialized internals items its kai list looking looks misko model module name names nested new ng:init ng:repeat object objects observe original outside overridden override overview page parent parents png pre primitives properties property related repeater repeats respective root row scope scopes serves should shows snippet source specified src template text that the their this tobe toequal topics tree understanding until upstream use value values view walks when where which widget with you your"},
{"section":"guide","id":"dev_guide.compiler","name":"Developer Guide: Angular HTML Compiler","depth":1,"shortName":"Angular HTML Compiler","type":"overview","keywords":"$compile all also and angular api application applications apps are browser building but can compilation compiler core create default dev_guide developer directives dom domain-specific dynamic element extend extending extending_compiler for generic guide how html into involved its language markup module new overview page place processes provides related server specific static takes testing testing_dom_element that the topics transform transformations types understanding understanding_compiler useful web widgets works you"},
{"section":"guide","id":"dev_guide.compiler.directives","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Directives","depth":2,"shortName":"Understanding Angular Directives","type":"overview","keywords":"above add added all always and angular any api associated attribute between binding button can change click comparing compiler constants context created creating creating_directives current custom data databinding dev_guide developer directive directives directives_widgets directly div dom element encounters event ever evil example executed existing expression following foo for function guide handlers have how html knows lets like model modify new next ng:bind ng:click ng:controller nothing number onclick other overview passes per prefix process properties reflect related represented result scope set sets sorry span specified specify standard tag tells template templates text that the them this topics turn two type understanding unlike updated use value view when which widget widgets will with would you"},
{"section":"guide","id":"dev_guide.compiler.directives.creating_directives","name":"Developer Guide: Angular HTML Compiler: Directives: Creating Custom Angular Directives","depth":3,"shortName":"Creating Custom Angular Directives","type":"overview","keywords":"$compile $watch additional and angular api below built-in child code comparing compiledelement compiler compiling control creating currentscope custom define definition descend dev_guide developer directive directives directives_widgets doc docs element elements example exposes extending following for function guide how html ignores information lets linkelement may method methods module need new ng:bind other overview own processes related return see shows simplified snippet text that the this understanding use var when whether widgets writing you your"},
{"section":"guide","id":"dev_guide.compiler.directives_widgets","name":"Developer Guide: Angular HTML Compiler: Comparing Directives and Attribute Widgets","depth":2,"shortName":"Comparing Directives and Attribute Widgets","type":"overview","keywords":"although and angular api appear appropriate are attribute attributes because before browser cannot choice comparing compiler consider copies creating custom declared determine dev_guide developer difference directive directives doesn each element evaluated evaluation example execute execution existing first for guarantee guide have here higher html implemented make mary matter matters mike more must need ng:bind ng:init ng:repeat not notice once one order others overview people person piece priority processed related responsibility right run same should significant situation template than that the there they this topics understanding use user uses want when where whether which widget widgets will with would you"},
{"section":"guide","id":"dev_guide.compiler.extending_compiler","name":"Developer Guide: Angular HTML Compiler: Extending the Angular Compiler","depth":2,"shortName":"Extending the Angular Compiler","type":"overview","keywords":"$compile $watch about above add added aggregate and angular any api append applied are attr attribute attributes automatically because block bootstrap browser called careful changes class classes clones code compilation compile compileelement compiler contains copy corresponding create css data declare definition depth-first dev_guide developer display displays dom element elements example execute expression expressions extending extract find following for function greeting guide have hello here how html includes just knows let link linkelement module more name nameexp namespace namespan new ng:init not note one output overview page phase process processed processing produce recursively reference related rendering repeating return salutation salutationexp salutationspan say see set should shows snippet source span spans steps style such tag tags takes template testing testing_dom_element text that the them this topics transformed traverse treat two understanding understanding_compiler values var want was watches when which widget widgets will with works world write you"},
{"section":"guide","id":"dev_guide.compiler.markup","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Markup","depth":2,"shortName":"Understanding Angular Markup","type":"overview","keywords":"$compile ability addclass additional-class after all allows also and angular api are attribute attrmarkup attrname binding built-in calls can chance changes compile compiled compiler content could create creating curly-brace curly-braces custom declarations declare define details dev_guide developer directive directives docs dom double easier element elements enclosed every except expanded expression expressions extend extends extraclass feature find footer for function functions giving guide handler header here horizontal how html index indexof into let lets link make markup matches model modify module name needs ng:bind node normally one overview own parentelement phase points pre-compile prior processes provides rather reason reference related remove represents returned rule say see shorthand should similar simple state substring templates text textnode than that the then this topics transform transformed transforms translate translates understand understanding unlike use used useful using var very view want way which widget widgets works write you your"},
{"section":"guide","id":"dev_guide.compiler.testing_dom_element","name":"Developer Guide: Angular HTML Compiler: Testing a New DOM Element","depth":2,"shortName":"Testing a New DOM Element","type":"overview","keywords":"$compile angular api come compiler dev_guide developer dom element extending extending_compiler guide how html module new over overview related testing the topics understanding understanding_compiler works"},
{"section":"guide","id":"dev_guide.compiler.understanding_compiler","name":"Developer Guide: Angular HTML Compiler: Understanding How the Compiler Works","depth":2,"shortName":"Understanding How the Compiler Works","type":"overview","keywords":"$compile aggregate all and angular any api application are automatically bootstrap built-in call called calls can case caused cloned clones compilation compile compiler compiles completes comprises create dataset defined depth-first details dev_guide developer directive directives doc dom don each element elements encounters every exactly example execute executed executes exposes expression extending extending_compiler follows for found function functions generated gets guide happens have how html individual information initializing inject into item iteration link list listener loaded look make markup matching methods modify module multiple must need new ng:app ng:repeat note once one optionally overview own page per phase phases predefined previously proceeds process recursively refer registered registers related repeat repeater repeating result return returned returns root scope see services set sets should specify step steps testing testing_dom_element that the them then there these this through times topics traverse type understanding use used were when which while widget widgets will with works write writing you your"},
{"section":"guide","id":"dev_guide.compiler.widgets","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Widgets","depth":2,"shortName":"Understanding Angular Widgets","type":"overview","keywords":"$compile adding allowed already always and angular any api are attribute before being browser built-in can come compiler create creating creating_directives creating_widgets custom dev_guide developer difference directive directives doesn dom element elements example existing guide html intended main manipulate modify module new ng:repeat one only overview own per processed properties provides related same shown similar some specified that the topics tree two types understand understanding which widget widgets will with you your"},
{"section":"guide","id":"dev_guide.compiler.widgets.creating_widgets","name":"Developer Guide: Angular HTML Compiler: Widgets: Creating Custom Widgets","depth":3,"shortName":"Creating Custom Widgets","type":"overview","keywords":"$compile $watch about added additional alert and angular any api attr attribute block bootstrap but can child compileelement compiler compiling control create creating creating_directives css current currentscope custom date defining descend dev_guide developer directives display div doc dom each element elements example existing exp exposes expression for function guide html ignores implement information initializing let lets like linkelement live may method methods module must name namespace namespaces need new other overview own processes related return same say see set settimeout tag text that the them this time topics type update use user value var watch when whether widget widgets with would writing you your"},
{"section":"guide","id":"dev_guide.e2e-testing","name":"Developer Guide: E2E Testing","depth":1,"shortName":"E2E Testing","type":"overview","keywords":"$location able about above addition after all almost also and angular any api application applications are array assert asserts assigned attr available avoid becomes bees before behave below binding bindings block blocks browser bugs built but button buzz call called calling can catch certain check checkbox checks click clicking clicks client code column com come comes commands compiler complexity comprised console contain continues correctness count css current currently defined describe describes destination developer done dsl duplicating dynamic dynamically e2e each easy element elements end enter entering enters example excuse executed executes execution expect expectation expectations expression fail failed fails features feel field filter filtertext first following for frame from function functions future futures get given google great grow guide hash have health height help helper here how href html http https img index innerheight innerwidth input interaction interactions into item items jacksparrow javascript jquery key label language link list listed lists loaded loads location made makes manual many marks match matcher matchers matching may method methods module more multi name navigate navigateto needs negation new next no-help not notice number object offset one only option options ouput outerheight outerwidth output overview page pass passing path pathname pause pauses picks png position power problem prop query radio reason reduced refreshes regardless regressions reload rely repeater requirements result results resume return returned returns row rows run runner satisfies scenario scenarios scopes scrollleft scrolltop search seconds section select selectedelements selection selector selects set should simple simulates single size sleep solve something source specific specifically specified src starts state statements stream strong strongly tell test testing tests text that the then there these they think this toequal turn typed unknown unrealistic until url use used user using val value value2 values verifies verify very when where whether which width will window with write written you your"},
{"section":"guide","id":"dev_guide.expressions","name":"Developer Guide: Understanding Angular Expressions","depth":1,"shortName":"Understanding Angular Expressions","type":"overview","keywords":"$30 $compile $document $eval $filter $parent $window access accidental according act actual adam add addexp addfuture addfutureaction adding additional additions against alert alerttext all allow allows also and angular api application arbitrary are arguments array assignments attribute attributes augmentation augments because become before behavior behind below binding bindings bugs built-in but calculate call called can canned cannot case chain change choose class click clutter cntl1 cntl2 code collide collision collisions colon-delimited common compiler complicated conditional conditionals consider contacts control controller controllers convert core correct could count create creates current data databinding decimal default define defined delegate dev_guide develop developer developers did didn differences different differentiate display displaying does doesn done element embed enter entirely equivalent etc eval evaluating evaluation evaluations evaluator even example example2 example3 exception existing exists expect expr expression expressions exprs extend extensions extra filter filter1 filter2 filters flow following for forgiving format formatted frameworks friend friends from function further future general global greet guide hand harmony have hello here href html human-readable input instead intentionally intermediary into invoking its javascript john julie language length like limited list locale logic look loop loops make makes markup mary method methods might mike mock mockwindow module more much must name names namespace need needs neither new ng-attr-widget ng:bind ng:click ng:controller ng:init ng:model ng:repeat nor not nothing null number object objects often operators order other others our over overview pass passes philosophy phone place points prefix prefixing presenting prevent primarily problem properties property prototype purpose push raw reason refer related removeexp repeater reserves reserving response return returns reverse richness row run same scope search searchtext sense server set should show significance similar similarly simple simply size soon source splice state statement statements string subtle such syntax table takes templates tempting ternary testing text than that the them then there these they think this through throw throws tobe toequal topics try type types undefined understanding unlike uppercase use used user user-friendly uses using valid value var version view views vocabulary waiting want wasn way what when where which while who will window with without wondering work world worse would write yet you"},
{"section":"guide","id":"dev_guide.forms","name":"Developer Guide: Forms","depth":1,"shortName":"Forms","type":"overview","keywords":"$apply $createwidget $destroy $digest $element $emit $error $form $formfactory $inject $invalid $modelvalue $new $on $parsemodel $parseview $render $rootscope $service $valid $validate $viewchange $viewvalue $watch abc abcdef above access act added addition address addressform aggregated aggregating alias all allow also always and angular angular-defined any anytown api application appropriate are area array assigned assigns attr attribute behaves between bidirectional bind bindings block boolean booleans border both bound bult-in but button calling calls can cancel carlos catch center chance change changeing changing check checkbox child city class classes classname clean click collection cols common complementary consist contains contenteditable control controller controllerargs controllers controlling converting converts copies copy created creates creating creation css css-styling ctrl current custom customer data data-set debug declare declared demonstrates describe described desirable destroyed determines dev_guide developer different directive disable disabled disablelogin displayed does dom each editor editorcntl editorform element emit emited emits emitted emitting empty enable enabled enter entered enters environment equals error errors event events example examples exercise exp expect expression external false field filled fired fires following font-size for forelement form format forms from function further get gets gives giving groups guide has have highlighting how html htmlcontent htmleditorwidget htmlfilter img implement implemented implements implicit includes incomplete individual influence information inject injection input input1 input2 input3 input4 input5 input6 inputs inside instance instantiate instead interact interaction interacts intercepts internal into invalid invalidate iscanceldisabled issavedisabled its itself john jquery key keyup later length life-cycle line1 listener listeners listens logic logical login logincontroller loginform main managing manually marshaling master may method methods missing mock model module more most multiple multiselect must myreason name necessary need needs nested new ng-form ng-invalid ng-valid ng:click ng:controller ng:disabled ng:html-editor-model ng:model ng:non-bindable ng:pattern ng:show not notify now number object one only option options other out outside overview own parsable password pattern perform png present production prop properly properties property protect prototype provide provided pulldown radio raw red reference references registered registers removed renderable rendering represent represented required responds response responsible retrieval return rootform rules save scope scopes script select self service set sets short should show shown shows similarly simulate since single size smith solid src standard state states string strongpassword structure style styling submission such templates term tests text textarea that the their them themselves then there therefore these they this tobe tobefalsy tobetruthy toequal together tomatch too tracking translate translated translating translations triggered triggers true try turn type under unit unit-test unit-tested unit-testing update updated updates updating use used useful user user-entered userform userformcntl username users using val valid validate validation validator validators validity value var verify view way web-designer well were when where which widget widgets widgetwhichemitedinvalid will with within would write writing written you your zip"},
{"section":"guide","id":"dev_guide.i18n","name":"Developer Guide: i18n and l10n","depth":1,"shortName":"i18n and l10n","type":"overview","keywords":"$1000 $filter $locale abbreviated about above abstracted abstracting accordingly account actual adapting additionally all allows also always and angular angular_de-ge angularjs anticipate any api app application applications apply approach approaches apps are automatically balance because binding bits both bound browser can case cases cat changes client code codes com commonly components computer concatenating configure consists containing contains content correct correspond country create css cultural cultures currency currently custom date datetime default depend depending described desired developer developers developing development different display displaying disregard dollars each easily either en-au en-us enable end example examples extra extreme few file files filter filters find fine folder following for format formats from generic geographical german github gotcha gotchas greatly guide have hence her here how however html http https i18n icu icu-project ids include including index index_de-ge information instead internationalization internationalizing into japan javascript jump june junio keep l10n language languages length level like likely linguistic list loaded local locale locale-specific locales localizable localization localized localizing look make managed market may means might min mind module more most need needs neither ng:app ng:pluralize nor not number one only optional org other out overlap override overview own package page pages parameter particular parts pluralization political pre-bundle pre-bundled pre-configured prepare process products provide provided providing readers really region rely requires rule rules running same script second see separates serve server service sets settings should show showcase shown slower someone something spanish specific specified specify specifying src starts straight strings such support supported supports sure symbol testing text that the their there these they this thorough time timezone translated translations two understood upset usability usd use used uses using valid value various vary viewers views want way web website when which who widget will with would you your zh-cn zone"},
{"section":"guide","id":"dev_guide.introduction","name":"Developer Guide: Introduction","depth":1,"shortName":"Introduction","type":"overview","keywords":"absent abstraction action adding and angular app application applications apps automatically back because been before between binding bookmarking both brings browser but buttons can care case change client-side coding compiler components concentrate course css data data-binding dependency designed develop developer developers developing development dom ease easier entirely error-prone ever every example existing extensible far faster feature features follow for forward from guide handles have history however html implemented important including increasing injection input introduction involved javascript less level leverage listeners load logic long long-established low-level lower-level make manipulation many might migrating more most much normally notifiers objects older one operations overview page part presentation primarily pure relatively repetitive round-trip same sense separation services setting simplifies single-page sophisticated subset substitutable supports takes tasks techniques technologies technology templates testing than that the these this time together too use using validation want way web were wiring with work works would wouldn written you"},
{"section":"guide","id":"dev_guide.templates","name":"Developer Guide: Understanding Angular Templates","depth":1,"shortName":"Understanding Angular Templates","type":"overview","keywords":"$route above access add addition along also and angular angular-specific api app are attribute attributes augmented augments bar becomes behavior bind body brace browser built-in button buttontext can changefoo code compiler complex conjunction consists contained containing controller css curly custom data declarative declaring dev_guide developer direct directive directives display dom double dynamic eight element elements example existing expression expressions file files filter filters following foo for form formats forms from guide html include index information input into javascript just lets located made main markup model module more multiple mycontroller ng:app ng:click ng:controller ng:model ng:repeat ng:view notation note one overview page partials reference related rendered sees segments separate service seven shorthand shown shows simple single-page snippet specification src standard static steps string tag tags technique template templates that the these this topics transform tutorial types understanding use user using validate value view views which widget widgets with within wrapped you your"},
{"section":"guide","id":"dev_guide.templates.css-styling","name":"Developer Guide: Templates: Working With CSS in Angular","depth":2,"shortName":"Working With CSS in Angular","type":"overview","keywords":"also angular any api application applies because bound browser browsers changed character class classes could css dev_guide developer did directive does element elements for forms guide has have input interaction interacts marking name new ng-directive ng-dirty ng-include ng-invalid ng-pristine ng-valid ng-widget ng:include not notpass old once overview pre provide reason related replacing select sets styling support templates that the these this topics used useful user validation where which widget with working your"},
{"section":"guide","id":"dev_guide.templates.databinding","name":"Developer Guide: Templates: Data Binding in Angular","depth":2,"shortName":"Data Binding in Angular","type":"overview","keywords":"additional after all along always and angular any application apps are automatic automatically because between bind binding browser can change changes class classical code compilation compiled completely components constantly controller data data-binding dependency dev_guide developer diagram different direction directives dom easy first for from greatly guide has html illustrated img immediately implements instant into isolation just lets live makes markup means merge model most not occurs one only overview png produces programing projection propagated reflected reflects related right say scopes second sections separated simplifying simply single-source-of-truth snap src state step syncing syncs systems template templates templating test testing that the they think this times together topics treat unaware uncompiled user versa vice view way web when with without works worse write you your"},
{"section":"guide","id":"dev_guide.templates.filters","name":"Developer Guide: Templates: Understanding Angular Filters","depth":2,"shortName":"Understanding Angular Filters","type":"overview","keywords":"$filter according addition allows also angular api applying before can chain conditionally creating creating_filters css data dev_guide developer display displaying dom evaluator example expression expressions filter filtered filters for format formatted formatting guide handle have like locale might modify module name needs object output overview pass passes related simply styles such tasks templates that the this through topics understanding uppercase user using using_filters value you"},
{"section":"guide","id":"dev_guide.templates.filters.creating_filters","name":"Developer Guide: Templates: Filters: Creating Angular Filters","depth":3,"shortName":"Creating Angular Filters","type":"overview","keywords":"$element $filter abc addition additional allows and angular any api are argument arguments assigns based binding can cba charat color compiler conditional conditionally containing creating ctrl current define dev_guide developer dom easy element enter expect filter filters first following for framework function greeting guide hello html input javascript just length makes manipulate module myreversemodule ng:controller ng:model object olleh optional out overview own passed passes related return reverse reverses sample scope should string templates text the these this toequal topics touppercase type understanding upper-case uppercase use value var variable variables very writing you your"},
{"section":"guide","id":"dev_guide.templates.filters.using_filters","name":"Developer Guide: Templates: Filters: Using Angular Filters","depth":3,"shortName":"Using Angular Filters","type":"overview","keywords":"$filter $rootscope after also and angular any api applying are argument arguments before binding bindings but can chain chained colon-delimited colons creating creating_filters data decimal dev_guide developer different digits display evaluation example examples expression expressions filter filter1 filter2 filters for format formatting guide here how many module new notice number optional overview part pass point points process related right rounding scope separated show significant some specifies syntax take takes templates that the this topics transform two type typically understanding used using values with you your"},
{"section":"guide","id":"dev_guide.services","name":"Developer Guide: Angular Services","depth":1,"shortName":"Angular Services","type":"overview","keywords":"also angular api apps are been brings client-side commonly controllers creating creating_services dependencies dependency dev_guide developer feature for from guide have injecting injecting_controllers injection into key long managing managing_dependencies module most objects often overview related server service services side substitutable testing testing_services that the time together topics understanding understanding_services used using web where wired with"},
{"section":"guide","id":"dev_guide.services.$location","name":"Developer Guide: Angular Services: Using $location","depth":2,"shortName":"Using $location","type":"overview","keywords":"$apply $browser $digest $document $location $locationprovider $observers $provide $rootscope $sniffer $watch $watchers $window _blank _escaped_fragment_ able about absolute absurl access according actually add addition address after again ajax all allow allows always among and angular angularjs any api apis app append application applications appropriate apps are attr automatically available aware back bar based basehref basically because beforeeach begin behave best bind binding bootstrap bot both break browser browsers but button call called calls can capability care cases cause causes caveats chain chaining change changed changes changing character characters check class click clicks coalesces code com commit comparing compiler compose configuration configure connected contain content control controller conversion crawlable crawler crawlers crawling create creating current currently customizing decoded default defer delay depending describe developer differences different differently directive directly displaying docroot document does doesn dom domain don during each earlier element elm empty empty-corner-lt enable enabled encode encoded encoding encouraged enough entire entry equivalents etc event everything example examples exposes extra facilitate factory fake fakebrowser fall fallback false features fireurlchange first flag following follows for form format forward fragment frees from full function future general get getelementbyid getter getters going google guide happens has hasbang hash hashbang hashbang-mode hashbangcntl hashpath hashprefix hashsearch have having head here history host hover href html html5 html5-hashbang-example html5-mode html5cntl html5mode http https ietf images img immediately implement index indexed indexing information initenv initial initurl inject input inside instances instantiated instead integrates integration interact internal into issue issues item its jpg jquery-style just keydown keypress keyup knows last legacy level life-cycle like link links loaded location locationpath lower lower-level make makes making management many means meta method methods migrating missing mode modern modes modified module more mozilla multiple must mutations name navigate navigation necessary need needs new next ng:address-bar ng:controller ng:ext-link ng:model ng:non-bindable noop not note notified notify notifywhenoutstandingrequests null object observe obtains old older once one only onurlchange open opening operation option org original others otherwise outside overview page param parameter parameters parses parsing part parts pass passed path perform phase phases please point port prefix prefixes process processes propagate properties property protocol provided provides pushed rather raw react read read-only recognize record records redirect redirection redirects reflected regular related relative release releases reload replace replaced replacing represents request require requires resets responsibility retrieve retrigger return returned returns rewrite rewrites rewriting rewritten rfc rill root rules running same scope scripts search sec section see segments sending serve server server-side service services serviceundertest set setter setters settimeout should show side since single slash snapshots source special specified specify src state statement stoppropagation strongly such suitable supplies support supported supports sure synced synchronizes tag takes target technique tell test testing text than that the their them then there these this through time transparent transparently true two two-way txt type unless update updated updatehash updates url urlchange urls use used useful user users uses using val value values var versa via vice viewing want was watch watchers web well what whatever when whether which widget will window with without work worry would write you your"},
{"section":"guide","id":"dev_guide.services.creating_services","name":"Developer Guide: Angular Services: Creating Services","depth":2,"shortName":"Creating Services","type":"overview","keywords":"$inject $provide $window ability about after afterwards alert all allergic allows also and angular annotation any api application approaches are arguments array auto begin body both but called can component config configuration constructs controllers create created creating crucially custom declaring depended dependencies dependency depends dev_guide developer directly displays each either example except factory find following for function given global guide have highly important indirectly injecting injecting_controllers injection injector injectors inside instance instantiate instantiates instantiating instantiation into its join just lastly lazily lazy length lethally make managing managing_dependencies means minification-proof mocks module more msgs multiple must mymodule name need needed nontrivial not notation note notifications notify offers one only other overview own parameter part participate passed per possible property provided pseudo-code push rarely rather read realize register registered registering related requested return service serviceid services several shinynewserviceinstance shows simple simply since singletons specified state stores swap system testable testing testing_services tests that the themselves there these they third this topics under understanding understanding_di understanding_services unless upon use useful using var very via well when where which while will win window with won words write you your"},
{"section":"guide","id":"dev_guide.services.injecting_controllers","name":"Developer Guide: Angular Services: Injecting Services Into Controllers","depth":2,"shortName":"Injecting Services Into Controllers","type":"overview","keywords":"$inject $loc $location $log $window alert angular another api array but calling callnotify can containing controller controllers convention corresponding creating creating_services dependencies dev_guide developer don dynamic expect factory figure firstmethod for function guide ids info inject injected injecting into javascript join language languages length managing managing_dependencies match matter matters message module msgs must mycontroller myservicemodule name names ng:click ng:controller ng:init ng:model notify notifyservice order out overview parameters property push registered related return secondmethod service services sethash should similar simple since specify static strings test testing testing_services text the therefore they this toequal topics try type typed types understanding understanding_services use used using val var very when which will win with you"},
{"section":"guide","id":"dev_guide.services.managing_dependencies","name":"Developer Guide: Angular Services: Managing Service Dependencies","depth":2,"shortName":"Managing Service Dependencies","type":"overview","keywords":"$afterroutechange $defer $inject $log $on $provide $rootscope $route allows and angular annotate annotations api application are argument array batches batchlog batchlogmodule both built-in but can change checking console construction controllers creating creating_services current currently custom declaration declare dep1 dep2 depend dependencies depends determine dev_guide developer dropped each either every example experimental factory feature flushed for framework from function get guide here identifiers ids important inference inferred inferring inject injecting injecting_controllers injector instances into kick length log logged logs main managing memory message messagequeue messages minifiers module monitors mymodulecfgfn myservice myservicefactory names needed notation note notice null optionally order other our overview periodic property provided push queued related return routetemplatemonitor same seconds service services setting signature specify start string template testing testing_services that the their them things this topics two understanding understanding_services unless use uses using var via web well which with you"},
{"section":"guide","id":"dev_guide.services.testing_services","name":"Developer Guide: Angular Services: Testing Angular Services","depth":2,"shortName":"Testing Angular Services","type":"overview","keywords":"$injector $provide $window after alert all angular api args beforeeach browser callcount clear conrollers createspy creating creating_services dependencies dev_guide developer example expect first following for function get guide inject injecting injecting_controllers instead into jasmine managing managing_dependencies messages mock module more mostrecentcall not notification notifications notify one overview real related service services should spy test testing the third three toequal tohavebeencalled tohavebeencalledwith topics two understanding understanding_services unit uses value var"},
{"section":"guide","id":"dev_guide.services.understanding_services","name":"Developer Guide: Angular Services: Understanding Angular Services","depth":2,"shortName":"Understanding Angular Services","type":"overview","keywords":"$http $inject $location about above access also always and angular another api apps are because browser built-in can cannot care carry charge common controller core create creating creating_services custom define dependencies dependency dependent depends dev_guide developer dynamically example explicitly factory for framework function functions guide identifiers identify injection injector injects instantiation its javascript language level like low managing managing_dependencies mentioned module must mycontroller object operations other out overview own passed property provides provision reason related requested resolution rest service services set singletons specific start static subsystem such takes tasks testing testing_services that the this topics typed types understanding use using variables via web with xmlhttprequest you your"},
{"section":"guide","id":"dev_guide.di","name":"Developer Guide: About Dependency Injection (DI)","depth":1,"shortName":"About Dependency Injection (DI)","type":"overview","keywords":"about all and angular api application applications behind book built-in com component components control cycles decouple decoupling dependencies dependency depends design dev_guide develop developer done each easier favorite for fowler from general guide has helps html http idea individual information injection injector into inversion its job life make management manages managing martin module more moving object-oriented org other out overview particular pattern provider read related responsibility see service services software subsystem supports test that the this topics understand understanding understanding_di way wikipedia your"},
{"section":"guide","id":"dev_guide.di.understanding_di","name":"Developer Guide: DI: Understanding DI in Angular","depth":2,"shortName":"Understanding DI in Angular","type":"overview","keywords":"$http $inject $provide $rootscope $window above after all along already and angular annotation any api application applications apps are argument arguments automatically available because been behind below benefits between bootstrap break brings built-in cache calling calls can change checks child code common compiles components construct controller controllers create created creates creating_services creation curry custom declaration declare define defined definitions depend dependencies dependency dev_guide developer directive does drawbacks during either element end equivalent events expect experimental explicitly factory feature filters find fna fnb following follows for from function future generate get given guide handle has how identifiers identifies illustration img implemented implicitly implies important infer inference inferring information inject injected injection injector insert instance instances instantiated instantiates into its java javascript job just languages list loads main manages may means method minified minifiers module module1 modules myfn name names need new ng:app ng:controller not note objects only our out overview own part phonecat phonelistctrl png pre-processor proceeds property provide provider providers provides provision reason registered related relates resort returns root scan scenes scope section see sequence service servicea servicea_ services several should shown signature source src statically steps subsystem such tasks template that the them then there therefore they this those through time toequal topics tostring tries triggers turns two typed under understanding use used user uses using way web well what whether which while widely widgets will with you your"},
{"section":"guide","id":"dev_guide.di.using_di_controllers","name":"Developer Guide: DI: Using DI in Controllers","depth":2,"shortName":"Using DI in Controllers","type":"overview","keywords":"$inject $route about additional angular angularjs annotations any api applications are argument arguments call called cause common configure configuring controller controllers correct dependency dev_guide developer example follows for form from function guide have here html http information injected injection injector instance instantiated instantiating instantiation into javascript know min module most mvc mycontroller needs ng:app ng:controller one org overview place property referencing reflection related responsible route routes service services should simple since src supply supplying takes template the then there think this topics two understanding understanding_controller understanding_di use used using ways what when with xmlns your"},
{"section":"guide","id":"dev_guide.unit-testing","name":"Developer Guide: Unit Testing","depth":1,"shortName":"Unit Testing","type":"overview","keywords":"$filter abc able about above abstraction actual addclass advantage all allow almost also and angular another answer any api append application applications apply approach are arguments ask assert asserting assumptions bad basic because becomes being below binds bits body bound brittle built but call called calling calls can chance change changes class code com come comes compiler complete concerns controllers correct correctly could crated crating create created creation creator data dependencies dependency dependency-injection dev_guide developer developers did different difficult directives div document does dom don dose dowork dynamically each easier easy elements else end everything ex1 example excuse executes expect explanation expression failures fake features feel filter filters find follow for forced forget format formatting forward from function functions fundamentally further get getting glabal global going good got grade great guide handed happen hard harmed has have having hevery hold how however html http idea implies important individual inject injection input instance instantiate intercept into isolate isolation issue its jasmine javascript javascripttestdriver kind know known language last lastly length lets like likely list location logic look look-up looking magic make makes making manipulates manipulating manipulation many may means medium method mind mix mixed mixing mock mocks mockxhr model module monkey msg much must mutated myclass mymodule name need needed needs network new no-help not nothing notice nutshell obvious often oldservicelocator oldxhr one only onreadystatechange open operator order other oue out outside overview passed passing password passwordcntrl passwordcontroller patching permanently piece pieces place power preferred present problem problematic project provide purposes pwd question random rather readable reads reason reasons references registry related remove removeclass replace requires reset resetting resort responsibility responsible resulting results return returned right same sample say scope see seem seen send separated separates server service servicelocator serviceregistry services set several shorter should simplifying simulate since singleton singletons site size solved some sort sorts span state still story straight strength strictly strong strongly such take tells test testability testable testing tests text than that the then there these they thing things think this through time toequal transform tried true try trying type typed typical unique unit units untestable uoe updating url user using usually val var variable variables very wait want was way ways weak well were what when where which while whoever why will wish with without would write writing written wrong xhr xhrmock yes you your"},
{"section":"misc","id":"contribute","name":"Contributing","depth":0,"shortName":"Contributing","type":"overview","keywords":"absolutely accept accepted access account add added address afterwards ahead aliases all also always and angular angular- angular-ie-compat angular-scenario angularjs annotations anonymous api apis application applying are artifacts automatically available base based before below best better binaries branch browser browsers bug build building bundle can capture case change changed changes characters check checking checkout clone closure closures code com commit compatibility complete complex concise configure consistency consists contained contains contents contribute contributing contribution contributions coordinate craft crafted crazy create creating curl debug default delete dependencies depending development directories directory discussed docs document documentation documented don duplication each efforts either end2end ensure entire errors even exceptions executed execution existing explicitly explorer export extended external features file files first fixes follow following for fork forking from functions generate git github good google googlecode grab guidance guide guidelines h1_1 h1_2 h1_3 h1_4 h1_5 have help here hierarchies hosted how href html http https implicitly information inheritance install installation installing instead instructions integration intend internal internally internet jasmine jasmine-node java javascript jsdoc jstd jstestdriver keep latest license licensed like lint linux list listed local located log love machine machines macintosh made mailing main major make makes map markdown master mean means merged methods min mind minified misc mit modules more most must my-fix-branch name namespaces necessary need needed new ngdoc ngdocs node non-minified not npm objects off often one only open org origin other our out output over overview package page part pass patch please plenty possible pre-installed pre-packaged prefer prevent private project prototypical provided public pull purpose push q-fs quite rake rather release remote repository request reviewed rubyforge rules run runner running runtime script see send sense separately server serves several simple small source standards start steps style submit submitted submitting successfully suite support sure system tag tail tarball templating test tested tests tgz than thank that the them then there these this throughout time today trigger true type under unit unit-tests unless update upstream use used useful username version via view warnings watchr web website welcome what when whenever which with work working wrap write written xml you your yours"},
{"section":"misc","id":"downloading","name":"Downloading","depth":0,"shortName":"Downloading","type":"overview","keywords":"__angular- after all allows always and angular angular- angular-ie-compat- angular-mocks- angular-scenario- angularjs any anything app application applications apps archive are artifacts available better browser build can closure code compiler compose contains copy created data development directory docs docs- documentation don download downloaded downloading during each easier editor end-to-end error even everything example execute explorer file files following for from fun get getting handy harness have host hosting html http human-readable implementation importantly includes including internet javascript js__ late lifetime listing load loaded local locally maintain make makes messages min minified minimize misc mocks more navigate ng:app nifty non-minified non-obfuscated obfuscated offline older one opening option order org our overview own parent particular path point points production project quickest released releasing resides same script scripts see server servers set should since single size special specifically src started strongly suggest suitable sure tag tailored tarball template test testing tests tgz that the their there these this those two types under unit url urls use user version versioned versions very view want way web which who with work write xmlns you your"},
{"section":"misc","id":"faq","name":"FAQ","depth":0,"shortName":"FAQ","type":"overview","keywords":"about above ajax all and android angular another any api app application apps are attack attacks back basic because bidirectional big binding bindings blackberry bootstrap both brackets browser browsers build building built-in but call called can chrome client closure code com compatible compilation compile compiled compressed constantly create cross-site css data dependency depending desktop details developer development different does dom don download downloading element environment escaping existing falls faq file firefox fit for framework from functions good google has highest holes host how however html html5 http ie6 ie7 impervious implementation important include including injection instructions integrate integrated iphone its itself javascript jquery july just learn level libraries library license licensed like lite live load locally look lots makes manipulate manipulation many means memory misc mit mobile model module more namespace native need none not note obfuscated one only open open-source orthogonal other overview own path performance plugin present primitives produces project projections protection provide radically reason render round-trip script scripting security see service side size sounds source step strings sync system systems tag takes talk technology template templating testability testable that the there these this together two use uses vary very view watch way webkit-based webos what which why widget widgets will with work works worry write yes you your youtube"},
{"section":"misc","id":"started","name":"Getting Started","depth":0,"shortName":"Getting Started","type":"overview","keywords":"__source__ above abstraction across add addition additional after ajax all anatomy and angular angularjs any api app application application-specific applications apps are arrays attributes awesome because behavior behind below bi-directional bind binding binds bootstrap border bound box brace braces browser browsers build building built-in caching called can center change changes check class closer code comes compiler concept concepts contents controller cookbook copy could create created css curly data databinding declarative define defines definitely demonstrates dependency-injection describes design details developer did direction display displayed doesn dom don double downloads dynamic easily easy edit editor elements employs entire event events example examples explains explanations explicitly expression extend extensible far favorite feature field file finally first following for from fully further get getting going great greeting guide handler hands-on happens have hello helloworld here how html http illustration img immediate immediately important include including input instructions interest interesting into javascript keep language learned left let like line listener listeners literal loaded logic look maintain makes manipulators map markup matter matters meaning min misc model model-view-controller more name namespace need next ng:app ng:model not notation note notice now object objects occurs open org other our out overview own page pages parts paste pattern png points presented primitives process processes properties provided real referenced reflected reflects refresh register replace resulting routing scenes scope scopes script section see select serve services set should shows some something source src standard started state string sync tags take tells template templates test text that the these they this through together top tradtional try tutorial two-way type typing understand url use useful uses using value variable versa very vice view walks way web what when whenever where which widget window with work world write xhr xmlns you your yourname"}];