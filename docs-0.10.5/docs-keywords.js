NG_PAGES=[
{"section":"api","id":"index","name":"API Reference","depth":0,"shortName":"API Reference","type":"overview","keywords":"and angular api array arrays attribute attributes attrmarkup automated bind compile compiler custom dependency directive directives documentation dom e2e-testing element extend filter filters for foreach fromjson functions guide html identification identity injection injector isarray isdate isdefined isfunction isnumber isobject isstring isundefined javascript json lowercase manipulation markup methods misc mock mocks noop object objects output overview reference runner scenario scope service services strings template testing tojson type types uppercase utility widget widgets"},
{"section":"api","id":"angular.attrMarkup","name":"angular.attrMarkup","depth":1,"shortName":"attrMarkup","type":"overview","keywords":"about allows angular api attribute attrmarkup attrname built-in code compiler complier content curly developer directive double element example extends for function guide information markup modify more most newattrmarkup ng:bind-attr node overview prominent see shorthand similar state text the understanding way which you"},
{"section":"api","id":"angular.bind","name":"angular.bind","depth":1,"shortName":"bind","type":"function","keywords":"all also angular api are args arguments becomes bind bindings bound call calls can context currying evaluated feature for function known optional org prebound returns self should specified supply that the this which wikipedia with wraps you"},
{"section":"api","id":"angular.compile","name":"angular.compile","depth":1,"shortName":"compile","type":"function","keywords":"$apply $digest $new access allowing and angular any api application apply appropriate are around asking attach attrmarkup automatically available been before being bind bootstrap bootstrapped both bound bring but call called caller calling can case children clicked clone cloneattachfn cloned clonedelement collects comment compilation compile compiler compiles contain corresponding create created current descend developer directive directives document doesn dom done each either element elements empty entire evaluation example except executed executes false following for found from function functions get give guide hand have how html important information instance into invoke invoked keep life likely link linked linker linking manual_bootstrap manually many-times markup match means methods must name need needs new newly ng:click none not once one only original other own passed phase piece place point process processing produce produces provided rather reference registered repeater result results retain return returned returns right root rootscope rootscope2 run same scope section see send set single someparentscope specified state string template text that the them then there this through together transformed tree true trying two typically understand use used values var via view walking was ways were when where which widget widgets will window with working works would write yet you your"},
{"section":"api","id":"angular.copy","name":"angular.copy","depth":1,"shortName":"copy","type":"function","keywords":"alias angular api copy for function object"},
{"section":"api","id":"angular.element","name":"angular.element","depth":1,"shortName":"element","type":"function","keywords":"above additional addtion alias all allows always and angular api api-compatible are arguments available before both but can com commonly current data dom domcontentloaded domelement either element event fired following footprint for found function functionality html implementation implements inheriteddata into invocation jqlite jquery limited lite loaded lookups manipulate method methods most name needed never note object only over parent precedence privides provided provides raw reached real references referred retrieves same scope small string styles subset supported tag takes that the they tiny top until value very walks was with within wrapped wraps"},
{"section":"api","id":"angular.equals","name":"angular.equals","depth":1,"shortName":"equals","type":"function","keywords":"alias angular api equals for function object"},
{"section":"api","id":"angular.extend","name":"angular.extend","depth":1,"shortName":"extend","type":"function","keywords":"all angular api can copying destination dst extend extends from function multiple object objects properties source specify src the you"},
{"section":"api","id":"angular.forEach","name":"angular.forEach","depth":1,"shortName":"forEach","type":"function","keywords":"and angular api array become can collection context each either element expect for foreach function gender index invoked invokes item iterate iterator key known log male misko name note obj object once optional over previously property push reference specifying the this toequal value values var was where which with"},
{"section":"api","id":"angular.fromJson","name":"angular.fromJson","depth":1,"shortName":"fromJson","type":"function","keywords":"angular api available deserialize deserialized deserializes fromjson function json native parser string thingy use"},
{"section":"api","id":"angular.identity","name":"angular.identity","depth":1,"shortName":"identity","type":"function","keywords":"angular api argument code first function functional identity its return returns style that the this transformer useful value when writing"},
{"section":"api","id":"angular.injector","name":"angular.injector","depth":1,"shortName":"injector","type":"function","keywords":"$eager $inject $service after all also and angular api are arguments array auto-injected automatically available call can create creates creating curry curryargs currying dependency dependency-injected doesn eager factory for function functions guide has have initialize injection injector instances invocation invoke invoked invoking known lists map may methods name optional override pass place properties property retrieve retrieving reuse root saved scope self service servicefactory servicename services set should specified tests that the them these this used well when where which with you"},
{"section":"api","id":"angular.isArray","name":"angular.isArray","depth":1,"shortName":"isArray","type":"function","keywords":"angular api array check determines function isarray reference true value"},
{"section":"api","id":"angular.isDate","name":"angular.isDate","depth":1,"shortName":"isDate","type":"function","keywords":"angular api check date determines function isdate reference true value"},
{"section":"api","id":"angular.isDefined","name":"angular.isDefined","depth":1,"shortName":"isDefined","type":"function","keywords":"angular api check defined determines function isdefined reference true value"},
{"section":"api","id":"angular.isFunction","name":"angular.isFunction","depth":1,"shortName":"isFunction","type":"function","keywords":"angular api check determines function isfunction reference true value"},
{"section":"api","id":"angular.isNumber","name":"angular.isNumber","depth":1,"shortName":"isNumber","type":"function","keywords":"angular api check determines function isnumber number reference true value"},
{"section":"api","id":"angular.isObject","name":"angular.isObject","depth":1,"shortName":"isObject","type":"function","keywords":"angular api are but check considered determines function isobject javascript not null object objects reference true typeof unlike value"},
{"section":"api","id":"angular.isString","name":"angular.isString","depth":1,"shortName":"isString","type":"function","keywords":"angular api check determines function isstring reference string true value"},
{"section":"api","id":"angular.isUndefined","name":"angular.isUndefined","depth":1,"shortName":"isUndefined","type":"function","keywords":"angular api check determines function isundefined reference true undefined value"},
{"section":"api","id":"angular.lowercase","name":"angular.lowercase","depth":1,"shortName":"lowercase","type":"function","keywords":"angular api converted converts function lowercase lowercased specified string the"},
{"section":"api","id":"angular.markup","name":"angular.markup","depth":1,"shortName":"markup","type":"overview","keywords":"angular api built-in code compilation compiler content create curly custom developer directive dom double elements example expression extensions for function functions further guide information into like linking markup more most newmarkup ng:bind not other overview parentelement portions produce prominent see shorthand text textnode the themselves think this transforms understanding way which widget"},
{"section":"api","id":"angular.noop","name":"angular.noop","depth":1,"shortName":"noop","type":"function","keywords":"angular api calculateresult can code foo function functional noop operations performs result style that the this useful var when writing"},
{"section":"api","id":"angular.toJson","name":"angular.toJson","depth":1,"shortName":"toJson","type":"function","keywords":"and angular api contain function input into json json-formatted jsonified newlines obj output pretty representing serialized serializes set string the tojson true whitespace will"},
{"section":"api","id":"angular.uppercase","name":"angular.uppercase","depth":1,"shortName":"uppercase","type":"function","keywords":"angular api converted converts function specified string the uppercase uppercased"},
{"section":"api","id":"angular.version","name":"angular.version","depth":1,"shortName":"version","type":"property","keywords":"about angular angularjs api code codename contains current dot following full has information jiggling-armfat major minor name number object properties property release string such that the this version"},
{"section":"api","id":"angular.Array","name":"angular.Array","depth":1,"shortName":"Array","type":"overview","keywords":"$foo __angular __javascript add adds all and angular api apis are array augment because bound built call character code collisions count creates determines element elements existing exposed expressions filter following foo for functions index indexof invoke invoked javascript limitto manipulation method methods minimize must myarrayobject names namespace naming new nor number numbers object objects optionally orderby orders overview params prefixed remove removes returns specified sub-array subset subtype sum sums the these two type utility value ways well with"},
{"section":"api","id":"angular.Array.add","name":"angular.Array.add","depth":2,"shortName":"add","type":"function","keywords":"$add $remove about add and angualar angular api appended appends array arrays augment beforeeach can click clicked create created ctrl default delete differs doc-example-live element empty example expanded expect expressions female for from function how href information initially input javascript john male mary method more name new ng:click ng:controller ng:model ng:repeat note object objects one-- optional people person populate record see sex should shows similar simplify specifying that the this tobe type use used user value when with you"},
{"section":"api","id":"angular.Array.count","name":"angular.Array.count","depth":2,"shortName":"count","type":"function","keywords":"$count about and angular api array arrays augment being calculate compiled condition containing count counted counting counts determines doc-example-live element elements enter evaluated evaluates expect exposed expression expressions for fork function have information input item items iterated knife more name ng:init ng:model ng:repeat note number one only option over point points provides recalculate returns see should specified spoon text than the this those toequal true type updated used using when which whose"},
{"section":"api","id":"angular.Array.filter","name":"angular.Array.filter","depth":2,"shortName":"filter","type":"function","keywords":"$filter about above accept across adam against all and angular any api arbitrary array arrays augment called can column contain contained containing described each element elements enter equivalent example expect expression expressions fields filter filtering filters final for friend friends from function have information input items john julie mary match mike more name negated new ng:init ng:model ng:repeat note object objects one only pattern phone predicate prefixing properties property result results return returned returns search searchobjresults searchtext searchtextresults see selecting selects should simple source special specific string strings subset substring text that the this those toequal true type used using value when which will with write"},
{"section":"api","id":"angular.Array.indexOf","name":"angular.Array.indexOf","depth":2,"shortName":"indexOf","type":"function","keywords":"$indexof about and angular api array arrays augment bookname books calculate cannot correctly ctrl determines dick element enter expect expressions foo for found function gatsby great index indexof information initial input juliet list moby more ng:controller ng:model note position recalculate returned romeo search see should the this tobe type used value"},
{"section":"api","id":"angular.Array.limitTo","name":"angular.Array.limitTo","depth":2,"shortName":"limitTo","type":"function","keywords":"$limitto about and angular api are array arrays augment beginning containing copied creates ctrl doc-example-live either elements end enter entered exceed exceeds expect expressions first for from function had information input integer items json length less limit limited limitto maximum more negative new ng:controller ng:model not note number numbers numer only output positive returned see should sign size source specified sub-array taken than the this three tobe toequal trimmed type update used val value when will"},
{"section":"api","id":"angular.Array.orderBy","name":"angular.Array.orderBy","depth":2,"shortName":"orderBy","type":"function","keywords":"$orderby about adam age aged angular api are array arrays ascending augment but called can class click column comparator control copy ctrl descending determine different doc-example-live element elements equivalent evaluates example expect expression expressions first for friend friends function getter href informaton items john julie mary mike more name next ng:click ng:controller ng:repeat note number object one operator optionally order orderby ordered orders phone predicate predicates prefixed property reorder result reverse see selects should sort sorted sorting source specified string such table the this tobe toequal two type used user using when which will with"},
{"section":"api","id":"angular.Array.remove","name":"angular.Array.remove","depth":2,"shortName":"remove","type":"function","keywords":"$remove about and angular api applications array arrays augment build check click column cool count demos doc-example-live documentation element expect expressions first for from function href indexof information initialize instance learn list looked modifies more ng:click ng:init ng:repeat note only out read remove removed removing see should task tasks the this tobe toequal type used using value which will with"},
{"section":"api","id":"angular.Array.sum","name":"angular.Array.sum","depth":2,"shortName":"sum","type":"function","keywords":"$99 $add $remove $sum about add all and angular api are around array arrays augment because becomes calculate calculated calculates class click cost count ctrl currency description doc-example-live during each element enter entry evaluated evaluates evaluation expect expression expressions for function gadget had href info initialize input integer invoice issues item items lame more ng:click ng:controller ng:model ng:repeat note number numbers qty recalculate required returns row see should size source specs sum supplied table text the then these this tobe toequal totals type used using values with work"},
{"section":"api","id":"angular.Object","name":"angular.Object","depth":1,"shortName":"Object","type":"overview","keywords":"$foo __angular __javascript all and angular api are argument arrays augment bound call character code collisions copy creates deep determines don elements equals equivalent example exposed expressions first foo for function functions invoke invoked javascript method methods minimize must myobject names namespace naming number object objects order overview param2 parameter prefixed size source strings the these two type used utility values ways with without work"},
{"section":"api","id":"angular.Object.copy","name":"angular.Object.copy","depth":2,"shortName":"copy","type":"function","keywords":"$equals about all and angular any api are array arrays augment button can click clicked copied copy created creates css ctrl deep deleted destination display doc-example-live element elements equal expect expressions for form from function hello including information initialy inline input into its make master more must name ng:click ng:controller ng:hide ng:model none not note null object objects primitives print properties provided returned salutation same see should source span specified supplied text that the then this tobe type undefined updated used val was when which will world"},
{"section":"api","id":"angular.Object.equals","name":"angular.Object.equals","depth":2,"shortName":"equals","type":"function","keywords":"$equals about all and angular api are arguments array arrays augment begin both compare comparision comparison considered copy css ctrl determines display doc-example-live during enter equal equals equivalent expect expressions following for form function greeting hardcoded hello ignored information initialy inline input kitty least master modified more name names ng:controller ng:hide ng:model none not note object objects one pass print properties property salutation same say see should span supports text that the their this tobe true two type types used val value values when with world"},
{"section":"api","id":"angular.Object.size","name":"angular.Object.size","depth":2,"shortName":"size","type":"function","keywords":"$size about and angular api array arrays augment correct count determines elements expect expressions foo foostringlength for function has information inspect items length more neither ng:controller nor note number obj object only own print properties see should size sizectrl sizes string the this tobe type used"},
{"section":"api","id":"angular.directive","name":"angular.directive","depth":1,"shortName":"directive","type":"overview","keywords":"about act add affect and angular api assigns attribute attributes before behavior between binds bootstrap built-in but can class clicked collection compiler conditionally conjunction create creates css custom data data-binding developer directive directives displays dom element elements even events executed executes expressions following for guide hides how href html information initialization instead into json key learn like linked list model modify more namespace ng:autobind ng:bind ng:bind-attr ng:bind-template ng:class ng:class-even ng:class-odd ng:click ng:controller ng:hide ng:href ng:init ng:show ng:src ng:style ng:submit not object odd onsubmit overview own pairs parameter places portion replaces rows run scope see set similar specified src styles tasks template text that the understanding use uses value way when which widget widgets with work works your"},
{"section":"api","id":"angular.directive.ng:autobind","name":"angular.directive.ng:autobind","depth":2,"shortName":"ng:autobind","type":"directive","keywords":"act and angular api boot bootstrap bootstrapping can compile details developer directive document documented element exist for guide initializing manage must ng:autobind ng:autoboot not one only page parameter parameters part rename root script section see separate should starting technically tells that the time used whole with"},
{"section":"api","id":"angular.directive.ng:bind","name":"angular.directive.ng:bind","depth":2,"shortName":"ng:bind","type":"directive","keywords":"and angular any api attribute below binding box but changes check compiled compiler content ctrl curly directive directly doc-example-live don double element enter evaluate expect expression expressions function given greeting guide hello html input instantly instead let like live markup name ng:bind ng:controller ng:model preview replace should specified tells template text that the this tobe transform type typically update use using value when whirled with world you"},
{"section":"api","id":"angular.directive.ng:bind-attr","name":"angular.directive.ng:bind-attr","depth":2,"shortName":"ng:bind-attr","type":"directive","keywords":"_note_ above and angular angularjs any api application attr attribute attribute_json attributes between binding box can capable check click clicking com compilation compile consider contains created creating ctrl cumbersome databinding directive doc-example-live double-curly during each element embedded enter executes expect expression expressions following for form function gets given google guide how href html http index input instantly instead into json key key-value link live main make mapped markup matches mentioned might more needs ng:bind ng:bind-attr ng:controller ng:href ng:model ng:non-bindable not number one pair pairs particular prefered present preview query raw replace replaced representing search should shows snippet specified specifies specify statements string sure template templates text that the then this time tobe translated type unlike use user using val value want way which will with writing you your"},
{"section":"api","id":"angular.directive.ng:bind-template","name":"angular.directive.ng:bind-template","depth":2,"shortName":"ng:bind-template","type":"directive","keywords":"and angular any api attribute binding box can change check contain ctrl directive doc-example-live element elements enter eval expect expressions few form function greeting greetings have hello here html input multiple name ng:bind ng:bind-template ng:controller ng:model not option replaced required salutation should since some span specifies such template text that the this title tobe try type unlike user using watch with world"},
{"section":"api","id":"angular.directive.ng:checked","name":"angular.directive.ng:checked","depth":2,"shortName":"ng:checked","type":"directive","keywords":"absence and angular any api attributes binding both browsers can check checkbox checkboxes checked checkslave compiler contain correctly directive doc-example-live expect expression false from function html input introduce markup master means ng:checked ng:model not presence preserve prevents problem prop require retrieving should solve special specs string such template the them this tobefalsy tobetruthy true type which"},
{"section":"api","id":"angular.directive.ng:class","name":"angular.directive.ng:class","depth":2,"shortName":"ng:class","type":"directive","keywords":"add added all allows already and angular any api are array button can changes check class classes classname clear click css databinding delimited directive doc-example-live duplicate dynamically element eval evaluation expect expression expressions function guide html myvar names new ng-input-indicator-wait ng:class ng:click not only particular previously prop removed representing represents result set should space span string text that the then tomatch type using value was when won you"},
{"section":"api","id":"angular.directive.ng:class-even","name":"angular.directive.ng:class-even","depth":2,"shortName":"ng:class-even","type":"directive","keywords":"affect and angular any api applied array can cate check class classname conjunction delimited directive doc-example-live eval evaluation exactly except expect expression expressions function guide john mary name names ng-format-negative ng-input-indicator-wait ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only prop representing result rows scope should space span string suz takes the this tomatch widget with within works"},
{"section":"api","id":"angular.directive.ng:class-odd","name":"angular.directive.ng:class-odd","depth":2,"shortName":"ng:class-odd","type":"directive","keywords":"affect and angular any api applied array can cate check class classname conjunction delimited directive doc-example-live eval evaluation exactly except expect expression expressions function guide john mary name names ng-format-negative ng-input-indicator-wait ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only prop representing result rows scope should space span string suz takes the this tomatch widget with within works"},
{"section":"api","id":"angular.directive.ng:click","name":"angular.directive.ng:click","depth":2,"shortName":"ng:click","type":"directive","keywords":"allows angular any api behavior check click clicked count custom directive doc-example-live element evaluate expect expression expressions function guide increment ng:click ng:init should specify the tobe upon when you"},
{"section":"api","id":"angular.directive.ng:cloak","name":"angular.directive.ng:cloak","depth":2,"shortName":"ng:cloak","type":"directive","keywords":"across add addition all alternatively and angular any api application applied are around attr attribute avoid being below benefit best briefly browser browsers but can cannot caused children class comes compilation compiled cooperation css deletes directive display displayed doc-example-live during effect element elements embedded example expect external file files fine-grained flicker following for form from function head hello hidden html ie7 included its legacy like limitation loaded loading makes match min must ng-cloak ng:cloak none not order prefered prevent progressive provide raw remove rendering result rule script section selector should shown stylesheet support tagged template template1 template2 that the their they this tobedefined typically undesirable use used view visible when which while with within work works you your"},
{"section":"api","id":"angular.directive.ng:controller","name":"angular.directive.ng:controller","depth":2,"shortName":"ng:controller","type":"directive","keywords":"$route access accessible add addcontact adding alert allows also alternative and angular any api application are array aspect assigns attached automatically becomes behavior behind bindings business called can changes check class clear clearcontact clearing click components contact contacts contacttoremove controller controllers current data declared define design directive div doc-example-live dom easily easy editing element email evaluates expect express expression expressions for form from function globally greet greeting guide has here how href information input instance into john key logic manual markup methods model model-view-controller mvc name need ng:click ng:controller ng:model ng:repeat note notice org pattern phone principles properties prototype push reflected remove removecontact removing rendered scope scopes service settingscontroller should simple smith source specifies supports tab template text that the these this tobe type typically update user val value via view way with without yourname"},
{"section":"api","id":"angular.directive.ng:disabled","name":"angular.directive.ng:disabled","depth":2,"shortName":"ng:disabled","type":"directive","keywords":"absence and angular any api attributes binding browsers but button can check checkbox checked chrome click compiler contain correctly directive disabled doc-example-live enabled expect expression false following from function html ie8 ies input introduce isdisabled make markup means ng:disabled ng:init ng:model not older presence preserve prevents problem prop require retrieving scope should solve special specs string such template the them this tobefalsy tobetruthy toggle true type which will"},
{"section":"api","id":"angular.directive.ng:hide","name":"angular.directive.ng:hide","depth":2,"shortName":"ng:hide","type":"directive","keywords":"and angular any api check checkbox checked click conditionally count directive directives doc-example-live element expect expression expressions function guide hidden hide html input ng:hide ng:model ng:show portion respectively should show shown span the then toequal truthy type when you"},
{"section":"api","id":"angular.directive.ng:href","name":"angular.directive.ng:href","depth":2,"shortName":"ng:href","type":"directive","keywords":"actual and angular any api attr attribute before broken buggy but can chance change click clicks com contain correct directive don element empty enter error example execute expect function gravatar has hash href http input inside like likely link link-1 link-2 link-3 link-4 link-5 link-6 makes markup most name namespace ng:click ng:ext-link ng:href ng:model not only open page path placing problem reload replace return should solves specified string template that the this tobe toequal url user uses using val value variable way when which will window with without write wrong xxx"},
{"section":"api","id":"angular.directive.ng:init","name":"angular.directive.ng:init","depth":2,"shortName":"ng:init","type":"directive","keywords":"angular any api attribute before bootstrap check directive during enters eval executed execution expect expression expressions function greeting guide hello initialization mode ng:init person should specifies tasks template the tobe world"},
{"section":"api","id":"angular.directive.ng:multiple","name":"angular.directive.ng:multiple","depth":2,"shortName":"ng:multiple","type":"directive","keywords":"absence and angular any api attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function html input introduce markup means multiple ng:model ng:multiple not presence preserve prevents problem prop require retrieving select should solve special specs string such template the them this tobefalsy tobetruthy toggle true type which"},
{"section":"api","id":"angular.directive.ng:readonly","name":"angular.directive.ng:readonly","depth":2,"shortName":"ng:readonly","type":"directive","keywords":"absence and angular any api attr attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function html input introduce make markup means ng:model ng:readonly not presence preserve prevents problem prop readonly require retrieving should solve special specs string such template text the them this tobefalsy tobetruthy toggle true type value which"},
{"section":"api","id":"angular.directive.ng:selected","name":"angular.directive.ng:selected","depth":2,"shortName":"ng:selected","type":"directive","keywords":"absence and angular any api attributes binding browsers can check checkbox checked compiler contain correctly directive doc-example-live expect expression false from function greet greetings html input introduce markup means ng:model ng:selected not presence preserve prevents problem prop require retrieving select selected should solve special specs string such template the them this tobefalsy tobetruthy true type which"},
{"section":"api","id":"angular.directive.ng:show","name":"angular.directive.ng:show","depth":2,"shortName":"ng:show","type":"directive","keywords":"and angular any api check checkbox checked click conditionally count directive directives doc-example-live dom element expect expression expressions function guide hidden hide input ng:hide ng:model ng:show portion respectively should show shown span the then toequal tree truthy type when your"},
{"section":"api","id":"angular.directive.ng:src","name":"angular.directive.ng:src","depth":2,"shortName":"ng:src","type":"directive","keywords":"angular any api attribute browser buggy can com contain correct directive doesn expression fetch from gravatar http inside like literal markup namespace ng:src placing problem replaces right solves src string template text the this until url using way which will with work write"},
{"section":"api","id":"angular.directive.ng:style","name":"angular.directive.ng:style","depth":2,"shortName":"ng:style","type":"directive","keywords":"allows and angular any api are button check clear click color conditionally corresponding css directive doc-example-live element evals expect expression expressions for function guide html keys mystyle names ng:click ng:style object red rgb set should span style text the those tobe type value values which whose you"},
{"section":"api","id":"angular.directive.ng:submit","name":"angular.directive.ng:submit","depth":2,"shortName":"ng:submit","type":"directive","keywords":"action additionally and angular api binding check click ctrl current default directive doc-example-live element enables enter eval events expect expression expressions for form function guide hello hit list means ng:controller ng:model ng:submit onsubmit page prevents push reloading request sending server should submit text the this tobe type value"},
{"section":"api","id":"angular.filter","name":"angular.filter","depth":1,"shortName":"filter","type":"overview","keywords":"about and angular api are built-in create currency data date developer displayed expression filter filter_name filters following follows for formatting general guide how html information json linky list lowercase more number overview own see syntax templates the understanding uppercase used user work your"},
{"section":"api","id":"angular.filter.currency","name":"angular.filter.currency","depth":2,"shortName":"currency","type":"filter","keywords":"amount angular api applied binding class classname css ctrl currency current custom default displayed doc-example-live enter expect filter for formats formatted function identifier init input locale making negative ng-binding ng-format-negative ng:controller ng:model number prop provided red should symbol the this tobe tomatch type update usd used value when with"},
{"section":"api","id":"angular.filter.date","name":"angular.filter.date","depth":2,"shortName":"date","type":"filter","keywords":"also angular api based can clock composed contain date datetime day description digit eee eeee either elements en_us equivalent expect extended filter following for format formats formatted formatting friday fulldate function guide hour i18n input iso literal locale localizable longdate marker medium mediumdate mediumtime milliseconds minute mmm mmmm month morning need ng:non-bindable not number object offset one order output padded predefined quote quoted quotes recognized representation requested rules second sep september sequence short shortdate shorttime should single specified sssz string the these timezone tomatch two use used values week with year yyyy yyyy-mm-dd"},
{"section":"api","id":"angular.filter.html","name":"angular.filter.html","depth":2,"shortName":"html","type":"filter","keywords":"absolutely all and angular any api application are argument attacks back being binding browser but bypasses call can color cols content ctrl default discouraged dom enter escape escaped escaped-html expect filter filtered from function get getting hate here however html html-filter html-unsafe-filter inline input inserted into make makes may means more new ng:bind ng:controller ng:model not obscure only onmouseover option optional other our parser parsing possible prevents properly pwn3d raw recognized returned rows safe sanitize sanitized sanitizer serialized should since snippet some strict string strongly style textcontent than that the then this through tobe tokens trust typical unsafe update used users using valid vulnerable which whitelist with without won would xss you your"},
{"section":"api","id":"angular.filter.json","name":"angular.filter.json","depth":2,"shortName":"json","type":"filter","keywords":"allows always and angular any api applied arrays automatically binding convert converted curly debugging double element encapsulating expect filter filtered for function into javascript json jsonify mostly name ng-monospace notation object objects primitive should string the this tobe types useful using value when you"},
{"section":"api","id":"angular.filter.linky","name":"angular.filter.linky","depth":2,"shortName":"linky","type":"filter","keywords":"address and angular another api binding cols ctrl email enter escaped-html expect filter finds ftp function href html html-linkified http input into linkify links linky linky-filter mailto more new ng:bind ng:controller ng:model not one org plain pretty rows should snippet some supports text the them this tobe turns update urls with without"},
{"section":"api","id":"angular.filter.lowercase","name":"angular.filter.lowercase","depth":2,"shortName":"lowercase","type":"filter","keywords":"angular api filter lowercase"},
{"section":"api","id":"angular.filter.number","name":"angular.filter.number","depth":2,"shortName":"number","type":"filter","keywords":"after and angular api ctrl decimal decimalplaces default digit each empty enter expect filter format formats formatting fractions function input negative ng:controller ng:model not number numbers places returned round rounded should string text the third this tobe update val"},
{"section":"api","id":"angular.filter.uppercase","name":"angular.filter.uppercase","depth":2,"shortName":"uppercase","type":"filter","keywords":"angular api filter uppercase"},
{"section":"api","id":"angular.inputType","name":"angular.inputType","depth":1,"shortName":"inputType","type":"overview","keywords":"$dirty $disabled $emit $error $invalid $modelvalue $parsemodel $parseview $pristine $readonly $render $required $valid $validate $viewvalue action all allow already also and angular api are attribute based been build catch checkbox classes classname codenames complex creating css ctrl data defined developer disabled does dom element empty enter error example expect expected expression expressions false for form forms framework fromjson function guide hand has have however html inline input inputtype interaction invalid invalidate json key listener listeners match means method methods modified myform name needs ng-dirty ng-invalid ng-pristine ng-valid ng:controller ng:disabled ng:model ng:pattern ng:readonly ng:required not only optional overview parsing pattern patterns prop properties provided providing readonly regexp required scope sets short should simple simpler size supper-powers supplied support text that the thing this toequal tojson tomatch try type user valid validation validators value way when which widget widgets will wrong you"},
{"section":"api","id":"angular.inputType.checkbox","name":"angular.inputType.checkbox","depth":2,"shortName":"checkbox","type":"inputType","keywords":"angular api assignable change changes check checkbox ctrl data-bind due element executed expect expression false form function html input inputtype interaction myform name ng:change ng:controller ng:false-value ng:model ng:true-value not property published selected set should state the this toequal true type under user value value1 value2 when which widgets with yes"},
{"section":"api","id":"angular.inputType.email","name":"angular.inputType.email","depth":2,"shortName":"email","type":"inputType","keywords":"$error $valid address angular api assignable class com ctrl data-bind defined does email empty enter entered error expect expected expression expressions false for form function initialize inline input inputtype invalid key longer match maxlength minlength model myform name ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets shorter should text than the this toequal true type under valid validation value which widgets with xxx"},
{"section":"api","id":"angular.inputType.integer","name":"angular.inputType.integer","depth":2,"shortName":"integer","type":"inputType","keywords":"$error $valid and angular api assignable changes class ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function greater initialize inline input inputtype integer interaction invalid key less list longer match max maxlength min minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not over pattern patterns property published regexp required scope sets shorter should text than the then this toequal transformation true type under user valid validation value when which widgets with"},
{"section":"api","id":"angular.inputType.list","name":"angular.inputType.list","depth":2,"shortName":"list","type":"inputType","keywords":"$error $valid angular api array assignable between changes class comma-seperated converts ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function igor initialize inline input inputtype interaction into invalid key list match misko model myform name names ng:change ng:controller ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets should string strings text that the this toequal true type under user validation value vojta when which widgets with"},
{"section":"api","id":"angular.inputType.number","name":"angular.inputType.number","depth":2,"shortName":"number","type":"inputType","keywords":"$error $valid and angular api assignable changes class ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function greater initialize inline input inputtype interaction invalid key less list longer match max maxlength min minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not number over pattern patterns property published regexp required scope sets shorter should text than the then this toequal transformation true type under user valid validation value when which widgets with"},
{"section":"api","id":"angular.inputType.radio","name":"angular.inputType.radio","depth":2,"shortName":"radio","type":"inputType","keywords":"angular api assignable blue button change changes color ctrl data-bind due element executed expect expression form function green html input inputtype interaction myform name ng:change ng:controller ng:model property published radio red select selected set should state the this toequal type under user value when which widgets with"},
{"section":"api","id":"angular.inputType.text","name":"angular.inputType.text","depth":2,"shortName":"text","type":"inputType","keywords":"$error $valid angular api assignable binding changes class ctrl data data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function guest hello html initialize inline input inputtype interaction invalid key longer match maxlength minlength model multi myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not only pattern patterns property published regexp required scope sets shorter should single standard text than the this toequal true type under user validation value when which widgets with word world"},
{"section":"api","id":"angular.inputType.url","name":"angular.inputType.url","depth":2,"shortName":"url","type":"inputType","keywords":"$error $valid angular api assignable changes class com content ctrl data-bind defined does due element empty enter entered error executed expect expected expression expressions false for form function http initialize inline input inputtype interaction invalid key longer match maxlength minlength model myform name ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not pattern patterns property published regexp required scope sets shorter should text than the this toequal true type under url user valid validation value when which widgets with xxx"},
{"section":"api","id":"angular.scope","name":"angular.scope","depth":1,"shortName":"scope","type":"function","keywords":"$digest $new $watch all and angular api append are automatically been called calling can child compiled created current default defaults dependency example executed expect factory fire for from function greeting guide handy have having hello here how html inherit inheritance initialize injection instancecache interact map method misko name need newly not old override parent pre-instantiated provided providers provides root salutation scope scopes see service services should show simple since snippet still template the this toequal unit-testing using value var watch watches welcome when which with world yet you"},
{"section":"api","id":"angular.scope.$apply","name":"angular.scope.$apply","depth":2,"shortName":"$apply","type":"function","keywords":"$apply $digest $eval $exceptionhandler $root $watch after angular any api are because browser calling catch current cycle defined dom evaluating events example exception exceptions execute executed executing execution exp expression expressions finally fired following forwarded framework from function guide handling immediately into libraries life life-cycle listeners method need outside parameter party perform proper pseudo-code result return rules scope service settimeout stages string the third through transitions try used using was watch watches with xhr"},
{"section":"api","id":"angular.scope.$broadcast","name":"angular.scope.$broadcast","depth":2,"shortName":"$broadcast","type":"function","keywords":"$broadcast $exceptionhandler $on afterwards all along and angular any api args arguments called calls canceled cannot child children current cycle direct dispatches downwards emit emmited event exception for from function get indirect life listeners listening name notified notifying onto optional passed propagates registered scope scopes service set starts the their this was way which will"},
{"section":"api","id":"angular.scope.$destroy","name":"angular.scope.$destroy","depth":2,"shortName":"$destroy","type":"function","keywords":"$destroy $digest $emit all also and angular api calls children collection current destructing directives eligible emits event for from function garbage implies its longer loop managing ng:repeat parent propagate removal remove scope such that the unrolling used usually widget will"},
{"section":"api","id":"angular.scope.$digest","name":"angular.scope.$digest","depth":2,"shortName":"$digest","type":"function","keywords":"$apply $digest $watch adam all and angular api are because call called calling can change children controllers counter current directive directives directly don example exceeded exceeds expect firing force from function get have infinite instead into iteration iterations its keeps life-cycle limit listener listeners loop maximum may means misko model more name need newvalue ng:controller notified number oldvalue possible process register scope simulate that the this throw toequal unit-tests until usually var variable want watcher watchers watchexpression whenever will with within you"},
{"section":"api","id":"angular.scope.$emit","name":"angular.scope.$emit","depth":2,"shortName":"$emit","type":"function","keywords":"$emit $exceptionhandler $on afterwards all along and angular any api args arguments called calls cancels cycle dispatches emit emmited event exception for from function get hierarchy life listeners listening name notified notifying one onto optional passed propagating registered root scope service set starts stop the this through toward traverses upwards was way which will"},
{"section":"api","id":"angular.scope.$eval","name":"angular.scope.$eval","depth":2,"shortName":"$eval","type":"function","keywords":"$eval angular any api are current defined engular evaluating example exceptions execute executed executes expect expression expressions function guide parameter propagated result return returning rules scope string the this toequal useful using var when with"},
{"section":"api","id":"angular.scope.$evalAsync","name":"angular.scope.$evalAsync","depth":2,"shortName":"$evalAsync","type":"function","keywords":"$digest $evalasync $exceptionhandler after angular any api are context current cycle defined dom exceptions execute executed executes execution expression expressions forwarded from function guarantees guide later least makes one only parameter performed point rendering rules scope script service string that the time using when will with"},
{"section":"api","id":"angular.scope.$id","name":"angular.scope.$id","depth":2,"shortName":"$id","type":"property","keywords":"$id alphanumeric angular api debugging for increasing property scope sequence unique useful"},
{"section":"api","id":"angular.scope.$new","name":"angular.scope.$new","depth":2,"shortName":"$new","type":"function","keywords":"$destroy $digest $new additional and angular any api applied are arguments behave called can change child class controller created creates curried curryarguments dependency desired detached detection events for from function guide hierarchy injection into invoking its listener model must new newly notification optionally parent participating permanently propagate removed scope scopes see should stop the thus using when which will"},
{"section":"api","id":"angular.scope.$on","name":"angular.scope.$on","depth":2,"shortName":"$on","type":"function","keywords":"$broadcast $emit $on angular api attributes call calling cancel current currentscope cycle deregistration discussion emitted event events following for format function further given handling has into life listen listener name object only passed propagation returns scope see targetscope that the this type was were when which will"},
{"section":"api","id":"angular.scope.$parent","name":"angular.scope.$parent","depth":2,"shortName":"$parent","type":"property","keywords":"$parent angular api current parent property scope the"},
{"section":"api","id":"angular.scope.$root","name":"angular.scope.$root","depth":2,"shortName":"$root","type":"property","keywords":"$root angular api current hierarchy property root scope the"},
{"section":"api","id":"angular.scope.$service","name":"angular.scope.$service","depth":2,"shortName":"$service","type":"property","keywords":"$service angular api can dependency discouraged favor general guide injection injector instance proper property provides reference retrieve scope service services the this use used which"},
{"section":"api","id":"angular.scope.$watch","name":"angular.scope.$watch","depth":2,"shortName":"$watch","type":"function","keywords":"$digest $watch according achieved adam adverse also and angular api are call callback called calls can change changes comparison complex copy counter current cycle deadlock deregistration detected detects determined each equal equals evaluated every example execute executed expect expression expressions fire for from function guide have idempotent implications inequality infinity iteration later limit listener loop may means memory misko model multiple name newvalue not notified object oldvalue only options other parameter parameters per performance prepared prevent previous register registers rerun rerunning reruns return returns save scope should string that the this times toequal trigger triggers until used value values var variable want watch watched watchers watchexpression watching when whenever which will with you your"},
{"section":"api","id":"angular.service","name":"angular.service","depth":1,"shortName":"service","type":"overview","keywords":"$browser $cookies $cookiestore $defer $document $exceptionhandler $location $log $resource $route $window $xhr access and angular api app are backed block browser browsers carrying catch common cookies creates data deep-linking defers dependency developer document element exceptions execution for function generates guide how information injection instance interacting key location logging managed object objects out overview own parses provides read receives reference references request restful see server-side service services session sources storage system tasks the try uncaught url value web window with work write xhr your"},
{"section":"api","id":"angular.service.$browser","name":"angular.service.$browser","depth":2,"shortName":"$browser","type":"service","keywords":"$browser $log abstract all and angular api apis application away browser can caused convenient exposed features for global goals has hide implementation inconsistencies interaction mock object provide real service specific state testing tests the this two used which window with without"},
{"section":"api","id":"angular.service.$cookieStore","name":"angular.service.$cookieStore","depth":2,"shortName":"$cookieStore","type":"service","keywords":"$cookies $cookiestore angular api are automatically backed cookies deserialized from key-value objects provides put retrieved serialized service session storage that this tojson"},
{"section":"api","id":"angular.service.$cookies","name":"angular.service.$cookies","depth":2,"shortName":"$cookies","type":"service","keywords":"$browser $cookies $eval access adding and angular api are browser cookies created current end exposed new object only properties provides read removing service simple the this"},
{"section":"api","id":"angular.service.$defer","name":"angular.service.$defer","depth":2,"shortName":"$defer","type":"service","keywords":"$browser $defer $exceptionhandler and angular any api block but can cancel defer deferid deferred delegates exceptions execution flush function functions into milliseconds queue service should task tests that the try use used via who wraps you"},
{"section":"api","id":"angular.service.$document","name":"angular.service.$document","depth":2,"shortName":"$document","type":"service","keywords":"$document $window angular api browser document element jquery reference service the window"},
{"section":"api","id":"angular.service.$exceptionHandler","name":"angular.service.$exceptionHandler","depth":2,"shortName":"$exceptionHandler","type":"service","keywords":"$exceptionhandler $log angular angular-mocks any api browser console default delegated delegates error exception expressions implementation into loaded logs mock overriden service simply tests the this uncaught unit which"},
{"section":"api","id":"angular.service.$formFactory","name":"angular.service.$formFactory","depth":2,"shortName":"$formFactory","type":"service","keywords":"$apply $createwidget $destroy $emit $error $formfactory $inject $invalid $modelvalue $parsemodel $render $valid $viewchange $viewvalue and angular api are attr bind both but catch classname collection cols contenteditable controller controllerargs could create cycle data-binding default destroyed directive dom editorcntl editorform element enable enter example exp expect feature filter find for forelement form forms function get given guide how href html htmleditorwidget htmlfilter injection input instance instances invalid invalidate keep keyup life linkfn mind model name nearest need new ng:contenteditable ng:controller ng:model none not notify now one parent parentform parsable prop protect responsible return rootform scope scopes script self service should shows specified that the then this tomatch true try use validation var were which widget widgets would write"},
{"section":"api","id":"angular.service.$locale","name":"angular.service.$locale","depth":2,"shortName":"$locale","type":"service","keywords":"$locale angular api components en-us for formatted languageid-countryid locale localization now only provides public right rules service the various"},
{"section":"api","id":"angular.service.$location","name":"angular.service.$location","depth":2,"shortName":"$location","type":"service","keywords":"$browser $document $location $locationconfig $sniffer address and angular api application are available back bar browser button can change changes clicks current developer exposes for forward guide hash history host https information into link location makes methods more mozilla object observe org parses path port reflected represents search see service services set synchronizes the url user using watch when window with you your"},
{"section":"api","id":"angular.service.$log","name":"angular.service.$log","depth":2,"shortName":"$log","type":"service","keywords":"$log $window and angular api browser button console debugging default enter error for function hello hit implementation info into log logctrl logging main message ng:click ng:controller ng:model open page present purpose service simple simplify text the this troubleshooting type warn with world writes"},
{"section":"api","id":"angular.service.$resource","name":"angular.service.$resource","depth":2,"shortName":"$resource","type":"service","keywords":"$action $charge $inject $resource $save $xhr abc above action action2 actions activities activity activityid actor actual after all allows and angular any api appended are array arrives assigned async automatically available becomes behaviors bound buzz buzzcontroller cache callback calling came can card cardid cards case charge class client collection com comments contains content could count create created creates credit creditcard crud custom data declaration default define definition delete depending destination each easily empty example excess execution existing expandreplies expect extend extended extracted factory false fetch first float following font-size for format from function get gets given googleapis googlebuzz greet has hash having hello high-level hit href html http https immediately important instance instanceof instances interact invoke invoked invoking isarray item items itself jsfiddle json json_callback jsonp key keys known let lets level like links look looks low made mapped margin-left max-height means method methods mike model most name need never new newcard ng:click ng:controller ng:model ng:repeat non non-get noting number object occurs once one onto operations optional optionally org other our overridden paramdefaults parameter parameterized parameters params passed perform populated post pre-bound prefix prefixed present profileurl prototype provide put query raw re-renders read realize received reference remove rendered rendering replies reply request resource resources response results retrieve returned returns rewrite right salutation save search section see server server-side service set should showing since smith sources specified src static style success support template that the then these this thumbnailurl toequal trick true type update updated url useful user userid usually valid value values var verifycache view well what when whenever where which wikipedia will with without worth write xmlhttprequest you your"},
{"section":"api","id":"angular.service.$route","name":"angular.service.$route","depth":2,"shortName":"$route","type":"service","keywords":"$location $route $routeparams against all and angular api array bookcntl causes ch1 ch4 changing chaptercntl choose configured conjunction controller controllers current deep-linking definition example examples existing false for function hash how href html jsfiddle maincntl map match name ng:controller ng:view params partial partials path pulls reference route routes scope service shows template the this tries typically url urls used views watches when widget with"},
{"section":"api","id":"angular.service.$routeParams","name":"angular.service.$routeParams","depth":2,"shortName":"$routeParams","type":"service","keywords":"$location $route $routeparams and angular api are case change collision com combination current even extracted given guarantees html http identity its likely matched moby name object occurs over parameter parameters params path precedence properties remain route search sectionid service set take that the then unchanged url when will"},
{"section":"api","id":"angular.service.$sniffer","name":"angular.service.$sniffer","depth":2,"shortName":"$sniffer","type":"service","keywords":"$sniffer $window angular api browser does event features hashchange history html5 implementation service simple support testing the this very"},
{"section":"api","id":"angular.service.$window","name":"angular.service.$window","depth":2,"shortName":"$window","type":"service","keywords":"$service $window alert all always angular api are available because browser causes current don evaluated expressions for from global globality globally greeting hello javascript may mocked ng:click ng:init ng:model object overriden problems refer reference removed respect scope service suffer testability testing text the they through type variable while window with world"},
{"section":"api","id":"angular.service.$xhr","name":"angular.service.$xhr","depth":2,"shortName":"$xhr","type":"service","keywords":"$browser $inject $log $resource $xhr above absolute abstraction accept accepts accessing add added address adds advantage all allows always and angular angularjs api application applications are arguments aspx assured attack authentication automatically backend before both but callback called calling came can case causes certain check click client code com comes common conditions configuration configured consider considerations considered contains content content-type cookie cooperate cooperation could counter create cross currently custom data default defaults delegated delegates delete design designing destination digest domain each either element eliminate equal error example exceptions execution exists expect expectations failed false features fetch fetchcntl first following for forgery format from fully function gain generated generates get handler handling have header headers hero higher html http include index insertion intercept into invalid invoke issues its javascript jsfiddle json json_callback jsonp level lower lowercased make making matches mechanism method mock must my-header name needs new ng:click ng:controller ng:model nicer non non-200 non-get normal not null object one only order org other out overwrite own party performing php please post pre-configured prefix prevent private process processing property protection provides put raw read readable reads received recommend relative remove replaced request requests required resource response responses resume return routed running runs salt same sample script security self sent server service session set sets setting should simple since site size some special specific specified specifying status still strategies string stringified strip subsequent success sure tag take technique tests text than that the then therefore these third this threats tobe token tokens tomatch turn two type unauthorized under unique updatemodel url use user using utilizes valid value values var verifiable verify version vulnerability vulnerable was way web web-site when which while wikipedia will with work x-requested-with x-xsrf-token xhr xmlhttprequest xsrf xsrf-token your"},
{"section":"api","id":"angular.service.$xhr.bulk","name":"angular.service.$xhr.bulk","depth":3,"shortName":"bulk","type":"service","keywords":"$log $xhr angular api bulk error service"},
{"section":"api","id":"angular.service.$xhr.cache","name":"angular.service.$xhr.cache","depth":3,"shortName":"cache","type":"service","keywords":"$defer $log $xhr acts all angular api are body bulk but cache cached caches callback called case data defaults delegate delegated destination entries entry error execute for fresh from function get hashmap hit http immediately just like method misses post present received request requests response responses result returned sent server service stored success synchronously that the then true update url when where while will"},
{"section":"api","id":"angular.service.$xhr.error","name":"angular.service.$xhr.error","depth":3,"shortName":"error","type":"service","keywords":"$log $service $xhr and angular api application body callback can code console data default destination error fetch file following for function get handler has http implementation log logs method ng:click non-existent object one optional properties replaces request response service specific status success the this url with"},
{"section":"api","id":"angular.widget","name":"angular.widget","depth":1,"shortName":"widget","type":"overview","keywords":"$route about after and angular api are attribute before blocks built-in but can changes cloned collection compilation compiler conditionally creates custom data-bound developer directive directives dom during either element elements entirely existing external following for fragment from guide html include includes information input inputtype list manages markup modifies more new ng:include ng:non-bindable ng:repeat ng:switch ng:view overview partial processed processing see standard structure templates that the understanding widget widgets with works"},
{"section":"api","id":"angular.widget.@ng:non-bindable","name":"angular.widget.@ng:non-bindable","depth":2,"shortName":"@ng:non-bindable","type":"widget","keywords":"actually alone angular any api are attribute binding bindings but check chunk code directive div doc-example-live element example expect function html ignore left like location looks make necessary ng:non-bindable note one present should simple sometimes text the there this tobe tomatch two use where which widget wrapped write"},
{"section":"api","id":"angular.widget.@ng:repeat","name":"angular.widget.@ng:repeat","depth":2,"shortName":"@ng:repeat","type":"widget","keywords":"$index $position actually adam age although amalie and angular any api are attribute can check collection count current currently defined directive display doc-example-live each element enumerate every example expect exposed expression first for formats friend friends from function gets given giving have how identifiers including index indicating initializes instance instantiates item iterator its john key last length length-1 like list local looks loop mary middle name names ng:init ng:repeat note offset old once one own per person position properties repeat_expression repeated repeater row scope set should special supported template the then they this tobe toequal track tracks two user uses using value var variable where who widget years"},
{"section":"api","id":"angular.widget.form","name":"angular.widget.form","depth":2,"shortName":"form","type":"widget","keywords":"$error $form $formfactory $valid alias all allow allows and angular api are attached behaves browsers but can child class creates ctrl data detailed discussion dom element elements empty enter error expect false for form forms function guest guide however identical initialize input instance invalid jquery key means method model myform name nested nesting ng:controller ng:form ng:model ng:show not outer provides reason required resulting scope see service should text that the this toequal true type under using valid well when which widget widgets"},
{"section":"api","id":"angular.widget.input","name":"angular.widget.input","depth":2,"shortName":"input","type":"widget","keywords":"$error $formfactory $valid allowing and angular api assignable based behavior browsers changes class ctrl current custom data-bind data-binding declaring defined definition does due element empty enter entered error executed expect expected expression expressions false follows for form format from full function guest html html5 initialize inline input inputs inputtype interaction invalid key last lastname length less lifecycle loaded long longer match max maxlength min minlength model myform name need new ng:change ng:controller ng:maxlength ng:minlength ng:model ng:pattern ng:show not older pattern patterns polyfills property provide published quick regexp required ridiculously scope scopetype service set sets sharthand short shorter shorthand should some text text-box than the then there this through toequal tomatch too true type types under user username valid validation value visitor when which widget widgets with"},
{"section":"api","id":"angular.widget.ng:include","name":"angular.widget.ng:include","depth":2,"shortName":"ng:include","type":"widget","keywords":"access and angular api applies blank change compiles constant content ctrl doc-example-live evaluate evaluates evaluating examples expect expression external false fetches file for fragment function href html included includes instance jsfiddle keep load loaded make mind mypartialtemplate name new ng-include ng:controller ng:include ng:model ng:options onload option optional origin partial policy quotes resources same scope select set should source src string sure template template1 template2 templates text that the this tobe toequal url value when which widget won work wrap you"},
{"section":"api","id":"angular.widget.ng:pluralize","name":"angular.widget.ng:pluralize","depth":2,"shortName":"ng:pluralize","type":"widget","keywords":"according actual added allows also and angular any api are attribute attributes better between binded bounded braces bundled but can case categories category closed configure configuring correct correctly correspoding count ctrl current customization data-binded decide deduct default desired dev did display displayed displays doc-example-live document documentation dozen either en-us enter evaluated example expect experience explicit expression expressions following for found from function further guide how html http i18n igor including input instead interpret into its john json kate later let locale localization look many mapping mappings marry match matched matches may message messages might misko must names ng-pluralize ng:controller ng:model ng:non-bindable ng:pluralize nobody not note notice number numbers object off offset offsets one only optional org other others overridden overview parts people perhaps person person1 person2 personcount placeholder plural pluralization pluralized previous provide providing pural replace result rule rules scope see set should show showing shown shows simple specifies specify specifying still string strings substituted take taken text that the there these this three throughout tobe total two type use user uses using value variable view viewing views vojta want when which while widget will with without would you"},
{"section":"api","id":"angular.widget.ng:switch","name":"angular.widget.ng:switch","depth":2,"shortName":"ng:switch","type":"widget","keywords":"add against angular api case casses change child conditionally ctrl deafault default displayed div doc-example-live dom elments expect expression for function home item items match matchvalue1 matchvalue2 ng:controller ng:model ng:options ng:switch ng:switch-default ng:switch-when option other select selection settings should span start statement structure text the then this toequal when widget will"},
{"section":"api","id":"angular.widget.ng:view","name":"angular.widget.ng:view","depth":2,"shortName":"ng:view","type":"widget","keywords":"$inject $route according advantages angular api auto_bootstrap automatic available below bootstrap bootstrapctrl changes click compared complements configuration controller current doc-example-live doesn efficient element every execution expect false file function functionality guide href html included including index initialization initializing into jsfiddle layout like load main more myctrl ng:controller ng:include ng:view offers overview overviewctrl partials provides rendered require root route scope service shorter should similar src syntax template templates text that the these this time tomatch undefined used view when widget with"},
{"section":"api","id":"angular.widget.select","name":"angular.widget.select","depth":2,"shortName":"select","type":"widget","keywords":"$remove after allowed angular api array assignable attribute background-color because below bind binding binds black blue border bound browsers but can causing check chose class color colors confuses considered containing currently dark data data-bind data-binding default demonstration dom during dynamically each element elements empty entered evaluates evaluating example expect expression facility following for form forms function generate group grouped hard-coded height href html identified incorect instead into item iterate iteration iterator key label light likely list local menu might model most must mycntrl name need nested ng:click ng:controller ng:model ng:options ng:repeat ng:style not note null nullable object objects obtained one only option optionally options over parent property propertyname provides push reasons red refer rendering represent represented required requires result see select selected set shade should single source sources specified string strings style suitable that the then this tomatch unrolls use used using valid value variable when where which white widget will with yellow"},
{"section":"api","id":"angular.widget.textarea","name":"angular.widget.textarea","depth":2,"shortName":"textarea","type":"widget","keywords":"allowing and angular api are assignable changes current data-bind data-binding defined definition does due element entered error exactly executed expected expression expressions for form format from html inline input inputtype interaction key loaded longer match maxlength minlength name ng:change ng:maxlength ng:minlength ng:model ng:pattern not pattern patterns properties property published quick regexp required same scope scopetype sets shorter textarea than the then this those type types under user validation value when which widget widgets with"},
{"section":"api","id":"angular.mock","name":"angular.mock","depth":1,"shortName":"mock","type":"overview","keywords":"$browser $exceptionhandler $log after all and angular angular-mocks any api automatically before browser built-in exception file for handler implementation loaded log mock mocks namespace object overview real replaces service services ship tests that the with"},
{"section":"api","id":"angular.mock.service.$browser","name":"angular.mock.service.$browser","depth":3,"shortName":"$browser","type":"service","keywords":"$browser $defer $xhr and angular angular-mocks api apis are automatically available browser can code commonly cookies defer enables except executing fake following for functions hard helper implementation loaded make methods mock provides real regular replaces same service settimeout several test testing tests that the there this used uses via when which xhr xmlhttprequests"},
{"section":"api","id":"angular.mock.service.$browser.xhr","name":"angular.mock.service.$browser.xhr","depth":4,"shortName":"xhr","type":"function","keywords":"$browser also and angular api body browser call callback can configuration configure convenience data expect expectdelete expected expectget expectjson expectpost expectput flush flushed for function generic headers http its key-value method methods mock object pairs path pending request requests respond response return see service should test tests the training url use what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.expectDELETE","name":"angular.mock.service.$browser.xhr.expectDELETE","depth":5,"shortName":"expectDELETE","type":"function","keywords":"$browser and angular api browser call can configuration configure delete expect expectdelete expected flush flushed for function its method mock object path request respond response return service should the trains url what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.expectGET","name":"angular.mock.service.$browser.xhr.expectGET","depth":5,"shortName":"expectGET","type":"function","keywords":"$browser and angular api browser call can configuration configure expect expected expectget flush flushed for function get its method mock object path request respond response return service should the trains url what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.expectJSON","name":"angular.mock.service.$browser.xhr.expectJSON","depth":5,"shortName":"expectJSON","type":"function","keywords":"$browser and angular api browser call can configuration configure expect expected expectjson flush flushed for function its json method mock object path request respond response return service should the trains url what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.expectPOST","name":"angular.mock.service.$browser.xhr.expectPOST","depth":5,"shortName":"expectPOST","type":"function","keywords":"$browser and angular api browser call can configuration configure expect expected expectpost flush flushed for function its method mock object path post request respond response return service should the trains url what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.expectPUT","name":"angular.mock.service.$browser.xhr.expectPUT","depth":5,"shortName":"expectPUT","type":"function","keywords":"$browser and angular api browser call can configuration configure expect expected expectput flush flushed for function its method mock object path put request respond response return service should the trains url what when which xhr you"},
{"section":"api","id":"angular.mock.service.$browser.xhr.flush","name":"angular.mock.service.$browser.xhr.flush","depth":5,"shortName":"flush","type":"function","keywords":"$browser all and angular api argument callbacks executes flush flushes function mock pending requests response service the trained with xhr"},
{"section":"api","id":"angular.mock.service.$exceptionHandler","name":"angular.mock.service.$exceptionHandler","depth":3,"shortName":"$exceptionHandler","type":"service","keywords":"$exceptionhandler angular any api application are bug error errors fail for handler implementation info into make means mock mocks more passed rethrows see service test tests that the there these this typically will"},
{"section":"api","id":"angular.mock.service.$log","name":"angular.mock.service.$log","depth":3,"shortName":"$log","type":"service","keywords":"$log all angular api are array arrays each error exposed for function gathers implementation info level level-specific log logged logging logs messages mock mocks more per property see service that the these"},
{"section":"cookbook","id":"index","name":"Cookbook","depth":0,"shortName":"Cookbook","type":"overview","keywords":"able abstractions across add advanced advancedform aids ajax allowing anchor and angular api app application applications apps are available away basic behavior bidirectional binding bread but butter buzz changes changing classic collection common communicate controller controllers cookbook creates data deep deeplinking demonstrates dependency design detection dirty disabling displaying dom easy editing eliminating emailing errors example exist external features first for form forms from full-page get global hello helloworld here implement initialization initialized injection instead its level likely linking links lived loads long maintainability makes model multi-page must mvc navigates never next objects order overview own page particular pattern perils possible pre-bundled presentation prevent problem project providing reloading reloads resolves resources responsive reverting safeguards screen screens send separate separation service services show simplest single solve specially specific state submit such tailored taking testability that the this through thus tic-tac-toe time-tested tries typical update url urls useful user uses using validation view way web welcome what which will with within without world you your"},
{"section":"cookbook","id":"advancedform","name":"Cookbook: Advanced Form","depth":1,"shortName":"Advanced Form","type":"overview","keywords":"$add $equals $invalid $remove address advanced and angular anytown are attr back basic being button buttons cancel change changes city click common contact contacts cookbook copy debug detection dirty disabled element enable enabled enter errors example expect extend features form function here href include input internal invalid john line1 main master model models myform name ng:click ng:controller ng:disabled ng:model ng:pattern ng:repeat notice one only original other overview phone presented preventing pristine prototype required reverting reverts save should shows size smith something state submission such text the there this tobefalsy tobetruthy toequal two type updates user userform val validation value view zip"},
{"section":"cookbook","id":"buzz","name":"Cookbook: Resources - Buzz","depth":1,"shortName":"Resources - Buzz","type":"overview","keywords":"$inject $resource activities activity activityid actor and angular api are attach behavior buzz buzzcontroller callback can class click com comments content cookbook count data div element example expand expandreplies expect external factory fetch float font-size for function get give google googleapis googlebuzz has help href html http https item items json json_callback links margin-left max-height name names ng:click ng:controller ng:href ng:model ng:repeat ng:src object overview params profileurl prototype provide rendered replies reply resource resources retrieve right style templates that the them then this thumbnailurl tobegreaterthan urls use used userid which with xit you"},
{"section":"cookbook","id":"deeplinking","name":"Cookbook: Deep Linking","depth":1,"shortName":"Deep Linking","type":"overview","keywords":"$inject $location $route alert allows also and angular anonymous any api app appcntl application appropriate are assign associated assumptions background-color behavior blue bookmarked bookmarks bootstraps border boundary but can cancel case causes change changed changes changing chrome class click color com common consist consists construct constructed contact contacts controller cookbook copy current deal deep define defined described details difference display divided does each easy edit element email encode enter etc example expect false following footer for force form from function greet has have hello here home href html implement information initialization initialize input instantiated instantiates into jsfiddle later like line linking loads make makes maps margin model most multiple name navigate newly ng:controller ng:ext-link ng:view not notice overview padding page parent partial partials particular path person programatically proper prototype refer restored routes routing same save scope screen screens service services sets settings settingscntl several should show shows simple single snippet solid something state style sufficient table template text that the then these things this tomatch two url urls useful user using very view views visible visit watches way welcome welcomecntl when whether which while white widget will with would you your yourname"},
{"section":"cookbook","id":"form","name":"Cookbook: Form","depth":1,"shortName":"Form","type":"overview","keywords":"$add $remove abc add adding address allow and angular anytown api application are array available better blank both build can city class classname click clicking contact contacts controller cookbook data data-bound debug debugging digits directive div element enter entering example expect field for form formcontroller forms from function gather going guide have how href included initial initialized input inputs into items john leaving line1 link main make model name new ng:click ng:controller ng:model ng:pattern ng:repeat non not notice off operations org overview phone present prop purpose purposes read reason refer reflected remove required scope should show shows simple simply size smith state strives text the them then these things this tomatch trivial type understand updated user using validate value view web what which widget widgets will with write xxx you your zip"},
{"section":"cookbook","id":"helloworld","name":"Cookbook: Hello World","depth":1,"shortName":"Hello World","type":"overview","keywords":"and angular any api binding binds bootstrap bootstraps bound brace change changes concept cookbook curly data databinding double enter enters environment event events expect field firing for function greeting guide hello hellocntl implicit input listener look name need ng:controller ng:model note notice overview presence reflects registration root scope script should source tag take templates text that the things this through toequal type user value variable when which widget world your"},
{"section":"cookbook","id":"mvc","name":"Cookbook: MVC","depth":1,"shortName":"MVC","type":"overview","keywords":"$index $location $watch above all allows and angular any api are available back because behavior between black board border browser button call calls can cell cellstyle center changes changing class clean click code col connection controller cookbook copy cursor deep-linking defined diagonal droppiece easy element example execute expect for foreach function functions game grade grafted has hash height html injected instantiate instantiated into invokes isolation javascript join just listener logic makes middle model mvc needed next nextmove ng:click ng:controller ng:repeat ng:show ng:style notice one onto overview piece play player pointer projection properties prototype push readurl reference rendering reset return row rows same scope search see separation set seturl share should simply since solid split state steps still stored style template test testable text text-align that the there things this tictactoecntl toequal undo url value var variable vertical-align very view when which width will winner without won"},
{"section":"guide","id":"index","name":"Developer Guide","depth":0,"shortName":"Developer Guide","type":"overview","keywords":"about and angular apps are auto_bootstrap automatic before bootstrap both check come comparing compiler completely component controller controllers creating creating_services dependencies dependency details dev_guide develop developer directives directives_widgets documents filters following forms getting guide here how html initialization initializing injection internals learn managing managing_dependencies manual manual_bootstrap markup may misc model mvc objects one out overview place registering registering_services relatively returning right scope scopes service services started templates testing testing_services the tutorial understanding understanding_controller understanding_di understanding_model understanding_scopes understanding_services understanding_view unfamiliar use using using_di_controllers view want web welcome widgets with you"},
{"section":"guide","id":"dev_guide.overview","name":"Developer Guide: Overview","depth":1,"shortName":"Overview","type":"overview","keywords":"$10 $19 _expression_ _really_ _you_ about above add addchild adding affected ajax all allowfullscreen allowing allows allowscriptaccess almost along also although always amount and angular angularjs another answer any api apis app application applications approach apps are around aspect assists attribute authoring auto-injected automated automatically back basic been behind belief better bidirectional bind binding bit blank boilerplate bonus bootstrap borders both bound braces browser browsers building built built-in built-ins business but call callbacks can change changes class client client-side clutters code coding color com combination comes comfort coming common compile compiler complex component components consider control core cornerstone cost could create creates crud cumbersome curly currency cycle data declarative declaratively decouple deeper demonstrate dependency-injection depends describe describes describing design designer designing details dev_guide develop developer developers developing development different difficult difficulty directive directs disappears display displaying document does doesn dom don double double-curly dramatically dynamic early easier easily easy edited either eliminates enough ensures enter entire equal erm error-prone errors example excellent executes existing expand expect expressing expression extends extensible fantastic far features feedback few field fields filter filters finally fine first flow following for forest form format formatting four framework freed frees from full function functions get gets give given going gone good google got greater guice guide guides gwt hard has have height hello helpful here home homing hours how html http https hundreds idea immerse imperative implement implementation importance improves includes indeed initialization input instant integer integrate internal into introductory invalid invoicecntl its itself javascript journey jquery july just know label leave leaving let level libraries library life like line list listeners live load loaded logic long look looks lot lots low major majority make makes making manage manipulate manipulating manipulation many markup marshaling may might min model model-view-controller modify money more most movie much multiply mysterious name names namespace need never new ng:autobind ng:bind ng:controller ng:model nice nicely normal not notation note noticed now number object occurred one only operations org others out output over overall overview page pain parallel parent part parts pattern perceive perhaps philosophy place plumbing point points possible powerful presentation preview process programatically programmatic progress provide provides put qty quantity quickly rather read really reasons red reduces reflected refreshing regard registering removes removing required resulting returning reuse round run runs same saving say scenes see server services setclass sets settext setup short shortcut should show side sides simple simply since single sites software some source spent src started state structured style substantial subsystem such suffice sum sweet syntax system systems tag tags talk tasks teaches technology tells template templates templating testability testing tests text than that the them then there these they thing things think this those thought thous thrill thrilled through time times toequal together tons too tools total traditional transformed trees tricks trip trivial true truth try turn two two-way type typically uis user users uses using utility validating validation validators value var variables vastly versus very view vocabulary walk want wanted was watch way web well what when where which while whole why widget widgets width wiring with within without work working world would write writing written xmlns yes you your yourself youtube"},
{"section":"guide","id":"dev_guide.bootstrap","name":"Developer Guide: Initializing Angular","depth":1,"shortName":"Initializing Angular","type":"overview","keywords":"add addition alias all and angular angular- another are auto_bootstrap automatic automatically bootstrap browser called cases choose com comes compile compiler compressed consists could create creating debug debugging declaration declare define dev_guide developer development domain either example explorer file flavor flavors following follows for form fully guide how html http human-readable initialization initialize initializing internet load loading manage manual manual_bootstrap map min must name namespace namespaces need ng:autobind not obfuscated older org overview own page process production properly qualified ready related render script set should simplest simply specify specifying src suitable tag tell than that the this topics two types unique use using version versions way when whether which whole widget widgets xhtml xmlns you your"},
{"section":"guide","id":"dev_guide.bootstrap.auto_bootstrap","name":"Developer Guide: Initializing Angular: Automatic Initialization","depth":2,"shortName":"Automatic Initialization","type":"overview","keywords":"above after all all-my-scripts and angular angularcontent angularjs any api apis app appended appending application apply are arguments associates assume attaches attribute auto-bootstrap automatic automatically because before begin being between bootstrap bootstrapped bound browser business can cases changes child cms com combined compilation compile compiler complete config constructs contents controller creates data data-binding define details dev_guide developer directives document doesn dom duration during either element encounters entire everything example exclusively exists features fields file finds for from functions global guide handler happens hello high-level how html http included initialization initializes initializing initiated into just like listeners load loaded loads logic looking manage manual manual_bootstrap markup means model monitors namespace necessary ng:autobind ng:init ng:repeat nice not object one onload only options order org other overview page part phase possible prefix presentation process processed processing rare reason registers related resulting root runnable runs scopes script scripts see separation session should single situations snippet some specify specifying src state subsequently systems tag targeted tells that the their them then these this those topics two-way ultimately until updates url use value variable view walks want well were what when whenever whole why widgets with works world xmlns you your"},
{"section":"guide","id":"dev_guide.bootstrap.manual_bootstrap","name":"Developer Guide: Initializing Angular: Manual Initialization","depth":2,"shortName":"Manual Initialization","type":"overview","keywords":"$apply advanced after angular angularjs api application auto_bootstrap automatic best bi-directionally bootstrap bootstrapping bound but can choose code compile compiler control converts dev_guide developer directive document each element executable explicitly find follow get guide handle handy happens hello html http initialization initializing instead into letting loaded look manual method more ng:autobind org over overview own page process ready related root run sequence should showing src start started step template that the this topics typically use users using want way what when which who with world xmlns you your"},
{"section":"guide","id":"dev_guide.mvc","name":"Developer Guide: About MVC in Angular","depth":1,"shortName":"About MVC in Angular","type":"overview","keywords":"about acquired along and angular appeared applications basic behind better between building client-side component components controller coupling data dependency design dev_guide developer developing different distinct easier encourage explain first following greatly guide has how http incorporates injection into its logic loose maintain makes meaning model model-view-controller more mvc org original over overview pattern presentation principles separate services shades since software structured summarized testable the these topics understanding understanding_controller understanding_model understanding_view view way web while wikipedia with years"},
{"section":"guide","id":"dev_guide.mvc.understanding_controller","name":"Developer Guide: About MVC in Angular: Understanding the Controller Component","depth":2,"shortName":"Understanding the Controller Component","type":"overview","keywords":"$eval $new $route about above accomplished across add adding affects all along also always and angular any api app application applied applies are argument arguments assigned assigning assignment associate associating augment augmented augments automatic automatically available away baby babyctrl based because become becomes beforeeach behavior being belong between binding body both bound box business but button buttons called can capital child childctrl children chili chilispicy clicked code common compiler complicated component components consisting constant construct constructors contain contains context controller controllers convention correctly could create created creates creating ctrl customspice data-binding databinding default defined defines demonstrated dependency depending depends describe dev_guide developer direct directive directives directly discussed does doesn dom earlier element encapsulate encapsulating ends evaluated evening event example examples excluding existing expect explicitly expressions filtering filters first following food for form formatting forms from function functions general gingerbreak greeting greetingctrl guide habanero handlers happens hard have hola hot how illustrate implicitly inheritance inherits initial injection input instances instantiate instantiated instead interacts into invoked invoking its jalape jalapeno jalapenospicy javascript just keep keyword kind known lava length let letter life-cycle little logic look mainctrl manage manipulation manual mattie means mentioned message method methods might mild model models modifies morning most much mvc mycontroller name named naming necessary need needed nested never new ng:click ng:controller ng:model nikki not note notice now object objects offers one only operator option other our output overview own parent pasilla pass passes perform plain presentation previous primitives properties property prototype prototypical putting rather referred refers related replaced result return root run same scope scopes second section sections sense service services set sets setting shadows shared should shouldn significantly simple single slim spice spiceiness spiceness spices spiciness spicy spicyctrl standard starts state stateful stateless string take takes task tell template templates test testability testing that the then there these things this three through timeofday tobe too topics try two type typically understanding understanding_model understanding_view updated updates upon use used using value values var variation very via view was wasabi way well when which widgets will with within work works you your"},
{"section":"guide","id":"dev_guide.mvc.understanding_model","name":"Developer Guide: About MVC in Angular: Understanding the Model Component","depth":2,"shortName":"Understanding the Model Component","type":"overview","keywords":"_model_ about above all and angular any api application applications apps array arrays assign assigning assignment ball bar become being called can child cloud code collection commonly component constructs contain contains context controller controllers create created creates creating current data declaration depending dev_guide developer direct directive discussion documentation each either elements eligible entire entities entity example explicitly expression expressions fluffy following foo for form from function garbage guide identifier illustration img implicitly initial input item iterator its javascript make model models most must mvc myctrl name ng:click ng:init ng:model ng:repeat ng:repeater not object objects occurs one only operator other overview phone phones png primitives processing properties property query reachable real recommended refer reference referenced references referencing related representing requirement scope scopes select set shows simple single src stale stops suitable template templates term textarea that the these this topics toy understanding understanding_controller understanding_view use value view ways when widget with you"},
{"section":"guide","id":"dev_guide.mvc.understanding_view","name":"Developer Guide: About MVC in Angular: Understanding the View Component","depth":2,"shortName":"Understanding the View Component","type":"overview","keywords":"about after and angular api associated based bindings both browser call can component controller data-binding dev_guide developer directive directives dom form function functions guide has img implementation information knowledge knows loaded model mvc ng:controller ng:view occurs overview png related rendered src such template the these this through topics transformed two-way understanding understanding_controller understanding_model view ways where widget"},
{"section":"guide","id":"dev_guide.scopes","name":"Developer Guide: Scopes","depth":1,"shortName":"Scopes","type":"overview","keywords":"$apply $eval $watch addition additional all also and angular any api apis apply are between bindings can changes communicate compilation components context contexts controller created creates data data-bindings dev_guide developer directive during elements evaluated example expressions for functions get guide html input instances interested internals javascript link linkage linked mechanism medium model model-view-controller ng:bind notify object objects overview paradigm process property provide provides providing registered related scope scopes serve system template the think this through together topics understanding understanding_scopes useful view watch watching which with within you"},
{"section":"guide","id":"dev_guide.scopes.internals","name":"Developer Guide: Scopes: Scope Internals","depth":2,"shortName":"Scope Internals","type":"overview","keywords":"$apply $defer $destroy $digest $eval $location $new $service $watch $watch-er $watch-ers $xhr about access action after afterwards against all allow allows already always ancestor and angular angularized any api apis application applications applied are argument assert assigned associated asynchronous attach attached automatically available back because before behavior binding both built-in but button call callbacks called calling calls can cases categories cause change changes characteristics check checked child clicking code collector come comes compilation compile compiler components comprise context control controller controllers correct correctly corresponding create created creates creating creator current custom cycle cycles data decide defaulting define demonstrates dependency dependents describes design destroy destroyed destruction detail detected dev_guide developer digest directive directives docs does doesn doing dom double-curly during each eager effects element elements end enough entire environment etc evaluate evaluated event events every example execute executes execution expect explicitly expose expression expressions external extra fall fetch find fire fires firing following for framework free from full function functions garbage get gets getting given grandparent granularity greeting guide handlers happen happens has have hello hide how however html immediately implementation implicitly including information inherit inheritance inherits initialized initializing inject injection injector inputs instances instead interact interactions intercepts internals into invoke isolate its javascript kinds life listener listeners longer made magic make managed managing manually matches may means memory method methods might mimic mimics mocks model model-view-controller models more most must mutate mutation mutations mvc mylocation name necessary need needed needs nested nesting new ng:click ng:controller ng:include ng:repeat normal not notified object objects observation observations observe observed observing one only other outside over override overview own parent parentscope parts passed pattern phase play point process propagate propagates propagating propagation properly properties property provide providing pushes read realm reason received reclaimed recursively references reflected register registering registration related released remove request reside response responsibility responsible results retrieve right root run-time same scope scopes section see sense server service services set shared should shown side similarly since situations some started stop such super-heroic synchronous system template templates test tests that the their them then there these think this those through throughout time timer timers toequal topics transitions trigger triggered two type typical typically undefined understand understanding understanding_controller understanding_scopes unit-testing unit-tests unnecessary update updated updates updating use used user using usually var via view watch watcher watches way what when whenever whether which while widget widgets will with within work worry wraps write writes written xhr xhrs yet you your"},
{"section":"guide","id":"dev_guide.scopes.understanding_scopes","name":"Developer Guide: Scopes: Understanding Scopes","depth":2,"shortName":"Understanding Scopes","type":"overview","keywords":"above along and angular any api are array arrays attached attaches automatically based bindings binds built called can changes child closest code controller created creates data dev_guide developer directive display displayed doc-example-live doesn dom during each element elements example expect expression find finds following for from function functions further gail guide hank has have hierarchy how html igor illustration img infrastructure inherits initialization initialized internals items its kai list looking looks misko model name names nested new ng:init ng:repeat object objects observe original outside overridden override overview page parent parents png pre primitives properties property related repeater repeats respective root row scope scopes serves should shows snippet source specified src template text that the their this tobe toequal topics tree understanding until upstream use value values view walks when where which widget with you your"},
{"section":"guide","id":"dev_guide.compiler","name":"Developer Guide: Angular HTML Compiler","depth":1,"shortName":"Angular HTML Compiler","type":"overview","keywords":"all also and angular api application applications apps are browser building but can compilation compile compiler core create default dev_guide developer directives dom domain-specific dynamic element extend extending extending_compiler for generic guide how html into involved its language markup new overview page place processes provides related server specific static takes testing testing_dom_element that the topics transform transformations types understanding understanding_compiler useful web widgets works you"},
{"section":"guide","id":"dev_guide.compiler.directives","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Directives","depth":2,"shortName":"Understanding Angular Directives","type":"overview","keywords":"above add added all and angular any api associated attribute behavior between binding button button1 can change changed comparing compiler controller created creating creating_directives custom data databinding dev_guide developer directive directives directives_widgets display div dom element encounters example existing expression following foo for function guide have how html implement knows lets like model modify name next ng:bind ng:click ng:controller ng:model number other overview passes per prefix process properties related set sets span specified standard tag tells template templates text that the them this topics turn type understanding updated use value view when which widget widgets with you"},
{"section":"guide","id":"dev_guide.compiler.directives.creating_directives","name":"Developer Guide: Angular HTML Compiler: Directives: Creating Custom Angular Directives","depth":3,"shortName":"Creating Custom Angular Directives","type":"overview","keywords":"$watch additional and angular api below built-in child code comparing compile compiledelement compiler compiling control creating currentscope custom define definition descend dev_guide developer directive directives directives_widgets doc docs element elements example exposes extending following for function guide how html ignores information lets linkelement may method methods need new ng:bind other overview own processes related return see shows simplified snippet text that the this understanding use var when whether widgets writing you your"},
{"section":"guide","id":"dev_guide.compiler.directives_widgets","name":"Developer Guide: Angular HTML Compiler: Comparing Directives and Attribute Widgets","depth":2,"shortName":"Comparing Directives and Attribute Widgets","type":"overview","keywords":"although and angular api appear appropriate are attribute attributes because before browser cannot choice comparing compiler consider copies creating custom declared determine dev_guide developer difference directive directives doesn each element evaluated evaluation example execute execution existing first for guarantee guide have here higher html implemented make mary matter matters mike more must need ng:bind ng:init ng:repeat not notice once one order others overview people person piece priority processed related responsibility right run same should significant situation template than that the there they this topics understanding use user uses want when where whether which widget widgets will with would you"},
{"section":"guide","id":"dev_guide.compiler.extending_compiler","name":"Developer Guide: Angular HTML Compiler: Extending the Angular Compiler","depth":2,"shortName":"Extending the Angular Compiler","type":"overview","keywords":"$watch about above add added aggregate and angular any api append applied are attr attribute attributes automatically because block bootstrap browser called careful changes class classes clones code compilation compile compileelement compiler contains copy corresponding create css data declare definition depth-first dev_guide developer display displays dom element elements example execute expression expressions extending extract find following for function greeting guide have hello here how html includes just knows let link linkelement more name nameexp namespace namespan new ng:init not note one output overview page phase process processed processing produce recursively reference related rendering repeating return salutation salutationexp salutationspan say see set should shows snippet source span spans steps style such tag tags takes template testing testing_dom_element text that the them this topics transformed traverse treat two understanding understanding_compiler values var want was watches when which widget widgets will with works world write you"},
{"section":"guide","id":"dev_guide.compiler.markup","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Markup","depth":2,"shortName":"Understanding Angular Markup","type":"overview","keywords":"ability addclass additional-class after all allows also and angular api are attribute attrmarkup attrname binding built-in calls can chance changes compile compiled compiler content could create creating curly-brace curly-braces custom declarations declare define details dev_guide developer directive directives docs dom double easier element elements enclosed every except expanded expression expressions extend extends extraclass feature find footer for function functions giving guide handler header here horizontal how html index indexof into let lets link make markup matches model modify name needs ng:bind node normally one overview own parentelement phase points pre-compile prior processes provides rather reason reference related remove represents returned rule say see shorthand should similar simple state substring templates text textnode than that the then this topics transform transformed transforms translate translates understand understanding unlike use used useful using var very view want way which widget widgets works write you your"},
{"section":"guide","id":"dev_guide.compiler.testing_dom_element","name":"Developer Guide: Angular HTML Compiler: Testing a New DOM Element","depth":2,"shortName":"Testing a New DOM Element","type":"overview","keywords":"angular api come compile compiler dev_guide developer dom element extending extending_compiler guide how html new over overview related testing the topics understanding understanding_compiler works"},
{"section":"guide","id":"dev_guide.compiler.understanding_compiler","name":"Developer Guide: Angular HTML Compiler: Understanding How the Compiler Works","depth":2,"shortName":"Understanding How the Compiler Works","type":"overview","keywords":"aggregate all and angular any api are automatically bootstrap built-in call called calls can case caused cloned clones compilation compile compiler compiles completes comprises create dataset defined depth-first details dev_guide developer directive directives doc dom don each element elements encounters every exactly example execute executed executes exposes expression extending extending_compiler file follows for found from function functions generated gets guide happens have how html individual information initializing inject into item iteration link list listener load loaded look make markup matching methods modify multiple must need new ng:autobind ng:repeat note once one optionally overview own page per phase phases predefined previously proceeds process recursively refer registered registers related repeat repeater repeating result return returned returns root scope script see services set sets should specify step steps tag testing testing_dom_element that the them then there these this through times topics traverse type understanding use used were when which while widget widgets will with works write writing you your"},
{"section":"guide","id":"dev_guide.compiler.widgets","name":"Developer Guide: Angular HTML Compiler: Understanding Angular Widgets","depth":2,"shortName":"Understanding Angular Widgets","type":"overview","keywords":"adding allowed already always and angular any api are attribute before being browser built-in can come compile compiler create creating creating_directives creating_widgets custom dev_guide developer difference directive directives doesn dom element elements example existing guide html intended main manipulate modify new ng:repeat one only overview own per processed properties provides related same shown similar some specified that the topics tree two types understand understanding which widget widgets will with you your"},
{"section":"guide","id":"dev_guide.compiler.widgets.creating_widgets","name":"Developer Guide: Angular HTML Compiler: Widgets: Creating Custom Widgets","depth":3,"shortName":"Creating Custom Widgets","type":"overview","keywords":"$watch about added additional alert and angular any api attr attribute block bootstrap but can child compile compileelement compiler compiling control create creating creating_directives css current currentscope custom date defining descend dev_guide developer directives display div doc dom each element elements example existing exp exposes expression for function guide html ignores implement information initializing let lets like linkelement live may method methods must name namespace namespaces need new other overview own processes related return same say see set settimeout tag text that the them this time topics type update use user value var watch when whether widget widgets with would writing you your"},
{"section":"guide","id":"dev_guide.e2e-testing","name":"Developer Guide: E2E Testing","depth":1,"shortName":"E2E Testing","type":"overview","keywords":"$location able about above addition after all almost also and angular any api application applications are array assert asserts assigned attr available avoid becomes bees before behave below binding bindings block blocks browser bugs built but button buzz call called calling can catch certain check checkbox checks click clicking clicks client code column com come comes commands compiler complexity comprised console contain continues correctness count css current currently defined describe describes destination developer done dsl duplicating dynamic dynamically e2e each easy element elements end enter entering enters example excuse executed executes execution expect expectation expectations expression fail failed fails features feel field filter filtertext first following for frame from function functions future futures get given google great grow guide hash have health height help helper here how href html http https img index innerheight innerwidth input interaction interactions into item items jacksparrow javascript jquery key label language link list listed lists loaded loads location made makes manual many marks match matcher matchers matching may method methods more multi name navigate navigateto needs negation new next no-help not notice number object offset one only option options ouput outerheight outerwidth output overview page pass passing path pathname pause pauses picks png position power problem prop query radio reason reduced refreshes regardless regressions reload rely repeater requirements result results resume return returned returns row rows run runner satisfies scenario scenarios scopes scrollleft scrolltop search seconds section select selectedelements selection selector selects service set should simple simulates single size sleep solve something source specific specifically specified src starts state statements stream strong strongly tell test testing tests text that the then there these they think this toequal turn typed unknown unrealistic until url use used user using val value value2 values verifies verify very when where whether which width will window with write written you your"},
{"section":"guide","id":"dev_guide.expressions","name":"Developer Guide: Understanding Angular Expressions","depth":1,"shortName":"Understanding Angular Expressions","type":"overview","keywords":"$30 $add $document $eval $filter $parent $remove $window access accidental according act actual adam add addfuture addfutureaction adding additional additions against alert alerttext all allow allows also and angular api application arbitrary are arguments array assignments attribute attributes augmentation augments because become before behavior behind below binding bindings bugs built-in but calculate call called can canned cannot case chain change choose class click clutter cntl1 cntl2 code collide collision collisions colon-delimited common compile compiler complicated conditional conditionals consider contacts control controller controllers convert core correct could count create creates current data databinding decimal default define defined delegate dev_guide develop developer developers did didn differences different differentiate display displaying does doesn done element embed enter entirely equivalent etc eval evaluating evaluation evaluations evaluator even example example2 example3 exception existing exists expect expr expression expressions exprs extend extensions extra filter filter1 filter2 filters flow following for forgiving format formatted frameworks friend friends from function further future general global greet guide hand harmony have hello here href html human-readable input instead intentionally intermediary into invoking its javascript john julie language length like limited list locale logic look loop loops make makes markup mary method methods might mike mock mockwindow more much must name names namespace need needs neither new ng-attr-widget ng:bind ng:click ng:controller ng:init ng:model ng:repeat nor not nothing null number object objects often operators order other others our over overview pass passes philosophy phone place points prefix prefixing presenting prevent primarily problem properties property prototype purpose push raw reason refer related repeater reserves reserving response return returns reverse richness row run same scope search searchtext sense server set should show significance similar similarly simple simply size soon source state statement statements string subtle such syntax table takes templates tempting ternary testing text than that the them then there these they think this through throw throws tobe toequal topics try type types undefined understanding unlike uppercase use used user user-friendly uses using valid value var version view views vocabulary waiting want wasn way what when where which while who will window with without wondering work world worse would write yet you"},
{"section":"guide","id":"dev_guide.forms","name":"Developer Guide: Forms","depth":1,"shortName":"Forms","type":"overview","keywords":"$apply $createwidget $destroy $digest $emit $equals $error $form $formfactory $inject $invalid $modelvalue $new $on $parsemodel $parseview $render $service $valid $validate $viewchange $viewvalue $watch abc abcdef above access act added addition address addressform aggregated aggregating alias all allow also always and angular angular-defined any anytown api application appropriate are area array assigned assigns attr attribute behaves between bidirectional bind bindings block boolean booleans border both bound bult-in but button calling calls can cancel carlos catch center chance change changeing changing check checkbox child city class classes classname clean click collection cols common complementary consist contains contenteditable control controller controllerargs controllers controlling converting converts copies copy created creates creating creation css css-styling ctrl current custom customer data data-set debug declare declared demonstrates describe described desirable destroyed determines dev_guide developer different directive disable disabled disablelogin displayed does dom each editor editorcntl editorform element emit emited emits emitted emitting empty enable enabled enter entered enters environment error errors event events example examples exercise exp expect expression external false field filled filter fired fires following font-size for forelement form format forms from function further get gets gives giving groups guide has have highlighting how html htmlcontent htmleditorwidget htmlfilter img implement implemented implements implicit includes incomplete individual influence information injection input input1 input2 input3 input4 input5 input6 inputs inside instance instantiate instead interact interaction interacts intercepts internal into invalid invalidate its itself john jquery key keyup later length life-cycle line1 linkfn listener listeners listens logic logical login logincontroller loginform main managing manually marshaling master may method methods missing mock model more most multiple multiselect must myreason name necessary need needs nested new ng-form ng-invalid ng-valid ng:click ng:controller ng:disabled ng:html-editor-model ng:model ng:non-bindable ng:pattern ng:show not notify now number object one only option options other out outside overview own parsable password pattern perform png present production prop properly properties property protect prototype provide provided pulldown radio raw red reference references registered registers removed renderable rendering represent represented required responds response responsible retrieval return rootform rules save scope scopes script select self service set sets short should show shown shows similarly simulate since single size smith solid src standard state states string strongpassword structure style styling submission such templates term tests text textarea that the their them themselves then there therefore these they this tobe tobefalsy tobetruthy toequal together tomatch too tracking translate translated translating translations triggered triggers true try turn type under unit unit-test unit-tested unit-testing update updated updates updating use used useful user user-entered userform userformcntl username users using val valid validate validation validator validators validity value var verify view way web-designer well were when where which widget widgets widgetwhichemitedinvalid will with within would write writing written you your zip"},
{"section":"guide","id":"dev_guide.i18n","name":"Developer Guide: i18n and l10n","depth":1,"shortName":"i18n and l10n","type":"overview","keywords":"$1000 $locale abbreviated about above abstracted abstracting accordingly account actual adapting additionally all allows also always and angular angular_de-ge angularjs anticipate any api app application applications apply approach approaches apps are automatically balance because binding bits both bound browser can case cases cat changes client code codes com commonly components computer concatenating configure consists containing contains content correct correspond country create css cultural cultures currency currently custom date datetime default depend depending described desired developer developers developing development different display displaying disregard dollars each easily either en-au en-us enable end example examples extra extreme few file files filter filters find fine folder following for format formats from generic geographical german github gotcha gotchas greatly guide have hence her here how however html http https i18n icu icu-project ids include including index index_de-ge information instead internationalization internationalizing into japan javascript jump june junio keep l10n language languages length level like likely linguistic list loaded local locale locale-specific locales localizable localization localized localizing look make managed market may means might min mind more most need needs neither ng:autobind ng:pluralize nor not number one only optional org other out overlap override overview own package page pages parameter particular parts pluralization political pre-bundle pre-bundled pre-configured prepare process products provide provided providing readers really region rely requires rule rules running same script second see separates serve server service sets settings should show showcase shown slower someone something spanish specific specified specify specifying src starts straight strings such support supported supports sure symbol testing text that the their there these they this thorough time timezone translated translations two understood upset usability usd use used uses using valid value various vary viewers views want way web website when which who widget will with would you your zh-cn zone"},
{"section":"guide","id":"dev_guide.introduction","name":"Developer Guide: Introduction","depth":1,"shortName":"Introduction","type":"overview","keywords":"absent abstraction action adding and angular app application applications apps automatically back because been before between binding bookmarking both brings browser but buttons can care case change client-side coding compiler components concentrate course css data data-binding dependency designed develop developer developers developing development dom ease easier entirely error-prone ever every example existing extensible far faster feature features follow for forward from guide handles have history however html implemented important including increasing injection input introduction involved javascript less level leverage listeners load logic long long-established low-level lower-level make manipulation many might migrating more most much normally notifiers objects older one operations overview page part presentation primarily pure relatively repetitive round-trip same sense separation services setting simplifies single-page sophisticated subset substitutable supports takes tasks techniques technologies technology templates testing than that the these this time together too use using validation want way web were wiring with work works would wouldn written you"},
{"section":"guide","id":"dev_guide.templates","name":"Developer Guide: Understanding Angular Templates","depth":1,"shortName":"Understanding Angular Templates","type":"overview","keywords":"$route above access add addition along also and angular angular-specific api app are attribute attributes augmented augments bar becomes behavior bind body brace browser built-in button buttontext can changefoo code compiler complex conjunction consists contained containing controller css curly custom data declarative declaring dev_guide developer direct directive directives display dom double dynamic eight element elements example existing expression expressions file files filter filters following foo for form formats forms from guide html include index information input into javascript just lets located made main markup model more multiple mycontroller ng:autobind ng:click ng:controller ng:model ng:repeat ng:view notation note one overview page partials reference related rendered sees segments separate service seven shorthand shown shows simple single-page snippet specification src standard static steps string tag tags technique template templates that the these this topics transform tutorial types understanding use user using validate value view views which widget widgets with within wrapped you your"},
{"section":"guide","id":"dev_guide.templates.css-styling","name":"Developer Guide: Templates: Working With CSS in Angular","depth":2,"shortName":"Working With CSS in Angular","type":"overview","keywords":"also angular any api application applies because bound browser browsers changed character class classes could css dev_guide developer did directive does element elements for forms guide has have input interaction interacts marking name new ng-directive ng-dirty ng-include ng-invalid ng-pristine ng-valid ng-widget ng:include not notpass old once overview pre provide reason related replacing select sets styling support templates that the these this topics used useful user validation where which widget with working your"},
{"section":"guide","id":"dev_guide.templates.databinding","name":"Developer Guide: Templates: Data Binding in Angular","depth":2,"shortName":"Data Binding in Angular","type":"overview","keywords":"additional after all along always and angular any application apps are automatic automatically because between bind binding browser can change changes class classical code compilation compiled completely components constantly controller data data-binding dependency dev_guide developer diagram different direction directives dom easy first for from greatly guide has html illustrated img immediately implements instant into isolation just lets live makes markup means merge model most not occurs one only overview png produces programing projection propagated reflected reflects related right say scopes second sections separated simplifying simply single-source-of-truth snap src state step syncing syncs systems template templates templating test testing that the they think this times together topics treat unaware uncompiled user versa vice view way web when with without works worse write you your"},
{"section":"guide","id":"dev_guide.templates.filters","name":"Developer Guide: Templates: Understanding Angular Filters","depth":2,"shortName":"Understanding Angular Filters","type":"overview","keywords":"according addition allows also angular api applying before can chain conditionally creating creating_filters css data dev_guide developer display displaying dom evaluator example expression expressions filter filtered filters for format formatted formatting guide handle have like locale might modify name needs object output overview pass passes related simply styles such tasks templates that the this through topics understanding uppercase user using using_filters value you"},
{"section":"guide","id":"dev_guide.templates.filters.creating_filters","name":"Developer Guide: Templates: Filters: Creating Angular Filters","depth":3,"shortName":"Creating Angular Filters","type":"overview","keywords":"$element abc addition additional allows and angular any api are argument arguments assigns based binding blue can cba charat color compiler conditional conditionally containing creating css ctrl current define dev_guide developer dom easy element enter expect filter filters first following for framework function greeting guide hello html input javascript just length makes manipulate manipulation ng:controller ng:model object olleh optional out overview own passed passes related return reverse reverses sample scope should string templates text the these this toequal topics touppercase type understanding upper-case uppercase use using value var variable variables very writing you your"},
{"section":"guide","id":"dev_guide.templates.filters.using_filters","name":"Developer Guide: Templates: Filters: Using Angular Filters","depth":3,"shortName":"Using Angular Filters","type":"overview","keywords":"after also and angular any api applying are argument arguments before binding bindings but can chain chained colon-delimited colons creating creating_filters data decimal dev_guide developer different digits display evaluation example examples expression expressions filter filter1 filter2 filters for format formatting guide here how many new notice number optional overview part pass point points process related right rounding scope separated show significant some specifies syntax take takes templates that the this topics transform two type typically understanding used using values with you your"},
{"section":"guide","id":"dev_guide.services","name":"Developer Guide: Angular Services","depth":1,"shortName":"Angular Services","type":"overview","keywords":"also angular api apps are been brings client-side commonly conrollers creating creating_services dependencies dependency dev_guide developer feature for from guide have injecting injecting_controllers injection into key long managing managing_dependencies most objects often overview registering registering_services related server service services side substitutable testing testing_services that the time together topics understanding understanding_services used using web where wired with"},
{"section":"guide","id":"dev_guide.services.$location","name":"Developer Guide: Angular Services: Using $location","depth":2,"shortName":"Using $location","type":"overview","keywords":"$apply $browser $digest $document $location $locationconfig $observers $service $serviceundertest $sniffer $sut $watch $watchers $window _blank _escaped_fragment_ able about absolute absurl access according actually add addition address after again ajax all allow allows always among and angular angularjs any api apis app append application applications appropriate apps are attr automatically available aware back bar based basehref basically because beforeeach begin behave best bind binding bot both break browser browsers but button call called calls can capability care cases cause causes caveats chain chaining change changed changes changing character characters check class click clicks coalesces code com commit comparing compile compiler compose configuration configure connected contain content control controller conversion crawlable crawler crawlers crawling create creating current currently customizing decoded default defer define delay depending describe developer differences different differently directive directly displaying doc-example docroot document does doesn dom domain don during each earlier element elm empty empty-corner-lt enable enabled encode encoded encoding encouraged enough entire entry equivalents etc event everything example examples exposes extra facilitate fake fakebrowser fall fallback false features fireurlchange first flag following for form format forward fragment frees from full function future general get getelementbyid getter getters going google guide happens has hasbang hash hashbang hashbang-mode hashbangcntl hashpath hashprefix hashsearch have having head here history host hover href html html5 html5-hashbang-example html5-mode html5cntl html5mode http https ietf images img immediately implement index indexed indexing information initenv initial initurl input inside instances instantiated instead integrates integration interact internal into issue issues item its jpg jquery-style just keydown keypress keyup knows last legacy level life-cycle like link links loaded location locationpath lower lower-level make makes making management many means meta method methods migrating missing mode modern modes modified more mozilla multiple must mutations name navigate navigation necessary need needs new next ng:address-bar ng:controller ng:ext-link ng:model ng:non-bindable noop not note notified notify notifywhenoutstandingrequests null object observe obtains old older once one only onurlchange open opening operation option org original others otherwise outside overview page param parameter parameters parses parsing part parts pass passed path perform phase phases please point port prefix prefixes process processes propagate properties property protocol provided provides pushed rather raw react read read-only recognize record records redirect redirection redirects reflected regular related relative release releases reload replace replaced replacing represents request require requires resets responsibility retrigger return returned returns rewrite rewrites rewriting rewritten rfc rill root rules running same scope scripts search sec section see segments sending serve server server-side service services set setter setters settimeout should side since single slash snapshots special specified specify src state statement stoppropagation strongly such suitable supplies support supported supports sure synced synchronizes tag takes target technique tell test testing text than that the their them then there these this through time transparent transparently true two two-way txt type unless update updated updatehash updates url urlchange urls use used useful user users uses using val value values var versa via vice viewing want was watch watchers web well what whatever when whether which widget will window with without work worry would write you your"},
{"section":"guide","id":"dev_guide.services.creating_services","name":"Developer Guide: Angular Services: Creating Angular Services","depth":2,"shortName":"Creating Angular Services","type":"overview","keywords":"$eager $inject $window ability accepts after alert all allows and angular any api application arguments array begin boots bound called config configuration controllers create creating custom declaring defaults dependant dependencies dependency depends dev_guide developer displays during example factory false find first following for function guide highly ids injecting injecting_controllers injection instantiated instantiation into join just lazily length managing managing_dependencies method mocks msgs name need needed nontrivial notifications notify object offers once one order overview own parameter parameters participate passed properties provided push registered registering registering_services related requested return root same scope service services several simple simply specified stores swap system testable testing testing_services tests that the themselves these third this three topics true under understanding understanding_services use useful var very well when which while will win window with write you your"},
{"section":"guide","id":"dev_guide.services.injecting_controllers","name":"Developer Guide: Angular Services: Injecting Services Into Controllers","depth":2,"shortName":"Injecting Services Into Controllers","type":"overview","keywords":"$inject $loc $location $log $window alert angular another api array but calling callnotify can containing controller controllers convention corresponding creating creating_services dependencies dev_guide developer don dynamic expect factory figure firstmethod for function guide ids info inject injected injecting into javascript join language languages length managing managing_dependencies match matter matters message msgs must mycontroller name names ng:click ng:controller ng:init ng:model notify notifyservice order out overview parameters property push registered registering registering_services related return secondmethod service services sethash should similar simple since specify static strings test testing testing_services text the therefore they this toequal topics try type typed types understanding understanding_services use used using val var very when which will win with you"},
{"section":"guide","id":"dev_guide.services.managing_dependencies","name":"Developer Guide: Angular Services: Managing Service Dependencies","depth":2,"shortName":"Managing Service Dependencies","type":"overview","keywords":"$afterroutechange $defer $eager $inject $log $on $route above all allows and angular anything api application are argument array associated batches batchlog both built-in but can case change checking console construction controllers creating creating_services current currently custom declaration declare declared depend dependencies dependency depends determine dev_guide developer doesn dropped each eager else every example experimental factory feature flushed for framework from function guide here how identifiers ids important inferred inferring inject injecting injecting_controllers injector instances instantiation into length log logged logs managing memory message messagequeue messages monitors names need needed note nothing notice null optionally order other our overview particular periodic property provided push queued registering registering_services related return routetemplatemonitor same seconds service services signature soon specify start started starts string template testing testing_services that the their them things this topics true two underline understanding understanding_services unless use uses var via web well which with you"},
{"section":"guide","id":"dev_guide.services.registering_services","name":"Developer Guide: Angular Services: Registering Angular Services","depth":2,"shortName":"Registering Angular Services","type":"overview","keywords":"$resource $route $service actually affects after all allergic and angular api applicaiton application are because body boot bootstrap but called can cases component components configuration configures constructs controllers create created creates creating creating_services crucially declare declared declares default depend dependencies dependency depends dev_guide developer directly doesn each eager eagerly example except exposed factory few fits following follows for function given global guarantee guide hand happens important indirectly initializes injecting injecting_controllers injector injectors instance instantiate instantiated instantiates instantiating instantiation into its itself lastly lazily lazy lethally likely logs make managing managing_dependencies means memory monitors more multiple need needed not note nothing observes one only optional other override overview own passively per possible property pseudo-code rarely rather realize register registering registration related request requested return right scenario scenarios scope service services shinynewserviceinstance should shows simple since singletons specific state tempting testing testing_services tests that the there these they this time topics true understanding understanding_services unless unsure usage useful usually var when where whether which while will with won words you your"},
{"section":"guide","id":"dev_guide.services.testing_services","name":"Developer Guide: Angular Services: Testing Angular Services","depth":2,"shortName":"Testing Angular Services","type":"overview","keywords":"after alert all angular api args beforeeach browser callcount clear conrollers createspy creating creating_services dependencies dev_guide developer example expect first following for function guide injecting injecting_controllers instead into jasmine managing managing_dependencies messages mock more mostrecentcall not notification notifications notify one overview real registering registering_services related service services should spy test testing the third three toequal tohavebeencalled tohavebeencalledwith topics two understanding understanding_services unit uses var"},
{"section":"guide","id":"dev_guide.services.understanding_services","name":"Developer Guide: Angular Services: Understanding Angular Services","depth":2,"shortName":"Understanding Angular Services","type":"overview","keywords":"$inject $location $xhr about above access also always and angular another api apps are because browser built-in can cannot care carry charge common controller core create creating creating_services custom define dependencies dependency dependent depends dev_guide developer dynamically example explicitly factory for framework function functions guide identifiers identify injection injector injects instantiation its javascript language level like low managing managing_dependencies mentioned must mycontroller object operations other out overview own passed property provides provision reason registering registering_services related requested resolution rest service services set singletons specific start static subsystem such takes tasks testing testing_services that the this topics typed types understanding use using variables via web with xmlhttprequest you your"},
{"section":"guide","id":"dev_guide.di","name":"Developer Guide: About Dependency Injection (DI)","depth":1,"shortName":"About Dependency Injection (DI)","type":"overview","keywords":"about all and angular api application applications behind book built-in com component components control cycles decouple decoupling dependencies dependency depends design dev_guide develop developer done each easier favorite for fowler from general guide has helps html http idea individual information injection injector into inversion its job life make management manages managing martin more moving object-oriented org other out overview particular pattern provider read related responsibility see service services software subsystem supports test that the this topics understand understanding understanding_di way wikipedia your"},
{"section":"guide","id":"dev_guide.di.understanding_di","name":"Developer Guide: DI: Understanding DI in Angular","depth":2,"shortName":"Understanding DI in Angular","type":"overview","keywords":"$inject $service $window $xhr above access achieve across act after all along already and angular annotation api application applications apps are argument arguments augmented automatically because been below benefits between bootstrap bound break brings built-in cache caches calling calls can change checks child code common compiles components configured construct controller controllers create created creates creation curry custom declaration declare define defined definitions depend dependencies dependency dev_guide developer different directive does drawbacks during each either end equivalent events expect experimental explicitly factory feature filters find fna fnb following follows for from function functions future generate get gets given guide handle has have having hence how identifiers identifies illustration img implemented implicitly implies important infer inference inferring information inject injected injection injector insert instance instances instantiated into invocations isolation its java javascript job languages like list locator main manages may means method minified minifiers most myfn myservice name names necessary need new ng:autobind ng:controller not note objects one only our out overview own phonelistctrl png pre-processor proceeds property provide provides provision reason reasons registered related relates repository resolving resort responsible returns root rootscope scan scope scopes section see separate sequence service servicea servicea_ services several share should shown signature singletons source src statically steps subsystem such tasks template test tests that the them then there therefore these they this those through time toequal topics tostring tries triggers turns two typed typical understanding use used user uses using var way web what which while widely widgets will with you your"},
{"section":"guide","id":"dev_guide.di.using_di_controllers","name":"Developer Guide: DI: Using DI in Controllers","depth":2,"shortName":"Using DI in Controllers","type":"overview","keywords":"$inject $route about additional angular angularjs annotations any api applications are argument arguments call called cause common configure configuring controller controllers correct dependency dev_guide developer example follows for form from function guide have here html http information injected injection injector instance instantiated instantiating instantiation into javascript know min most mvc mycontroller needs ng:autobind ng:controller one org overview place property referencing reflection related responsible route routes service services should simple since src supply supplying takes template the then there think this topics two understanding understanding_controller understanding_di use used using ways what when with xmlns your"},
{"section":"guide","id":"dev_guide.unit-testing","name":"Developer Guide: Unit Testing","depth":1,"shortName":"Unit Testing","type":"overview","keywords":"abc able about above abstraction actual addclass advantage all allow almost also and angular another answer any api append application applications apply approach are arguments ask assert asserting assumptions bad basic because becomes being below binds bits body bound brittle built but call called calling calls can chance change changes class code com come comes compiler complete concerns controllers correct correctly could crated crating create created creation creator data dependencies dependency dependency-injection dev_guide developer developers did different difficult directives div document does dom don dose dowork dynamically each easier easy elements else end everything ex1 example excuse executes expect explanation expression failures fake features feel filter filters find follow for forced forget format formatting forward from function functions fundamentally further get getting glabal global going good got grade great guide handed happen hard harmed has have having hevery hold how however html http idea implies important individual inject injection input instance instantiate intercept into isolate isolation issue its jasmine javascript javascripttestdriver kind know known language last lastly length lets like likely list location logic look look-up looking magic make makes making manipulates manipulating manipulation many may means medium method mind mix mixed mixing mock mocks mockxhr model monkey msg much must mutated myclass name need needed needs network new no-help not nothing notice nutshell obvious often oldservicelocator oldxhr one only onreadystatechange open operator order other oue out outside overview passed passing password passwordcntrl passwordcontroller patching permanently piece pieces place power preferred present problem problematic project provide purposes pwd question random rather readable reads reason reasons references registry related remove removeclass replace requires reset resetting resort responsibility responsible resulting results return returned right same sample say scope see seem seen send separated separates server service servicelocator serviceregistry services set several shorter should simplifying simulate since singleton singletons site size solved some sort sorts span state still story straight strength strictly strong strongly such take tells test testability testable testing tests text than that the then there these they thing things think this through time toequal transform tried true try trying type typed typical unique unit units untestable uoe updating url user using usually val var variable variables very wait want was way ways weak well were what when where which while whoever why will wish with without would write writing written wrong xhr xhrmock yes you your"},
{"section":"misc","id":"contribute","name":"Contributing","depth":0,"shortName":"Contributing","type":"overview","keywords":"absolutely accept accepted access account add added address afterwards ahead aliases all also always and angular angular- angular-ie-compat angular-scenario angularjs annotations anonymous api apis application applying are artifacts automatically available base based before below best better binaries branch browser browsers bug build building bundle can capture case change changed changes characters check checking checkout clone closure closures code com commit compatibility complete complex concise configure consistency consists contained contains contents contribute contributing contribution contributions coordinate craft crafted crazy create creating curl debug default delete dependencies depending development directories directory discussed docs document documentation documented don duplication each efforts either end2end ensure entire errors even exceptions executed execution existing explicitly explorer export extended external features file files first fixes follow following for fork forking from functions generate git github good google googlecode grab guidance guide guidelines h1_1 h1_2 h1_3 h1_4 h1_5 have help here hierarchies hosted how href html http https implicitly information inheritance install installation installing instead instructions integration intend internal internally internet jasmine jasmine-node java javascript jsdoc jstd jstestdriver keep latest license licensed like lint linux list listed local located log love machine machines macintosh made mailing main major make makes map markdown master mean means merged methods min mind minified misc mit modules more most must my-fix-branch name namespaces necessary need needed new ngdoc ngdocs node non-minified not npm objects off often one only open org origin other our out output over overview package page part pass patch please plenty possible pre-installed pre-packaged prefer prevent private project prototypical provided public pull purpose push q-fs quite rake rather release remote repository request reviewed rubyforge rules run runner running runtime script see send sense separately server serves several simple small source standards start steps style submit submitted submitting successfully suite support sure system tag tail tarball templating test tested tests tgz than thank that the them then there these this throughout time today trigger true type under unit unit-tests unless update upstream use used useful username version via view warnings watchr web website welcome what when whenever which with work working wrap write written xml you your yours"},
{"section":"misc","id":"downloading","name":"Downloading","depth":0,"shortName":"Downloading","type":"overview","keywords":"__angular- after all allows always and angular angular- angular-ie-compat- angular-mocks- angular-scenario- angularjs any anything app application applications apps archive are artifacts available better browser build can closure code compiler compose contains copy created data development directory docs docs- documentation don download downloaded downloading during each easier editor end-to-end error even everything example execute explorer file files following for from fun get getting handy harness have host hosting html http human-readable implementation importantly includes including internet javascript js__ late lifetime listing load loaded local locally maintain make makes messages min minified minimize misc mocks more navigate ng:autobind nifty non-minified non-obfuscated obfuscated offline older one opening option order org our overview own parent particular path point points production project quickest released releasing resides same script scripts see server servers set should since single size special specifically src started strongly suggest suitable sure tag tailored tarball template test testing tests tgz that the their there these this those two types under unit url urls use user version versioned versions very view want way web which who with work write xmlns you your"},
{"section":"misc","id":"faq","name":"FAQ","depth":0,"shortName":"FAQ","type":"overview","keywords":"about above ajax all and android angular another any api app application apps are attack attacks back basic because bidirectional big binding bindings blackberry bootstrap both brackets browser browsers build building built-in but call called can chrome client closure code com compatible compilation compile compiled compressed constantly create cross-site css data dependency depending desktop details developer development different does dom don download downloading element environment escaping existing falls faq file firefox fit for framework from functions good google has highest holes host how however html html5 http ie6 ie7 impervious implementation important include including injection instructions integrate integrated iphone its itself javascript jquery july just learn level libraries library license licensed like lite live load locally look lots makes manipulate manipulation many means memory misc mit mobile model more namespace native need none not note obfuscated one only open open-source orthogonal other overview own path performance plugin present primitives produces project projections protection provide radically reason render round-trip script scripting security see service side size sounds source step strings sync system systems tag takes talk technology template templating testability testable that the there these this together two use uses vary very view watch way webkit-based webos what which why widget widgets will with work works worry write yes you your youtube"},
{"section":"misc","id":"started","name":"Getting Started","depth":0,"shortName":"Getting Started","type":"overview","keywords":"__source__ above abstraction across add addition additional after ajax all anatomy and angular angularjs any api app application application-specific applications apps are arrays attributes awesome because behavior behind below bi-directional bind binding binds bootstrap border bound box brace braces browser browsers build building built-in caching called can center change changes check class closer code comes compiler concept concepts contents controller cookbook copy could create created css curly data databinding declarative define defines definitely demonstrates dependency-injection describes design details developer did direction display displayed doesn dom don double downloads dynamic easily easy edit editor elements employs entire event events example examples explains explanations explicitly expression extend extensible far favorite feature field file finally first following for from fully further get getting going great greeting guide handler hands-on happens have hello helloworld here how html http illustration img immediate immediately important include including input instructions instructs interest interesting into javascript keep language learned left let like line listener listeners literal loaded logic look maintain makes manipulators map markup matter matters meaning min misc model model-view-controller more name namespace need next ng:autobind ng:model not notation note notice now object objects occurs open org other our out overview own page pages parts paste pattern png points presented primitives process processes properties provided real referenced reflected reflects refresh register replace resulting routing scenes scope scopes script section see select serve services set should shows some something source src standard started state string sync take template templates test text that the these they this through together top tradtional try tutorial two-way type typing understand url use useful uses using value variable versa very vice view walks way web what when whenever where which widget window with work world write xhr xmlns you your yourname"},
{"section":"tutorial","id":"index","name":"Tutorial","depth":0,"shortName":"Tutorial","type":"overview","keywords":"able about actions add all already and android angular angular-phonecat angular-seed angularjs any apache app application apps archive are assume bash bat below better between binaries binding boot-strap browser browsers build building bundled but can catalog change check client-side clone code com command commands common computer construction containing contains copy couple create creates current data day define dependency details device devices differences digging directory displays document dom don download dynamic each easier editor either end end-to-end entire environment examples executable executed experiments extensions files filter finish follow following follows for frameworks from get getting git git-mac git-win going good great guides hack has have hours how href http https identify img immediately including injection install installed instructions interest into introduced introduction java javascript js-via-package-manager last learn learning let lets like line linux list listeners located looking mac machines make makes management manipulation may misc modification more msysgit need node now one only option options org out overview own package pleasant plug-ins png prcn pre-compiled pre-installed preferred process project projects provide quickly really repository resources response run running sandbox scripts see select server services setting shorter should show simple site smarter snapshots source spend src ss-mac ss-win started step step_00 such suggestions sure system tabs tasks terminal test tests text that the them then thing this through title true tutorial typically understand unit unzip use user verify versioning view views walks want way web when which whole will window windows with without work working works workspace writing you your"},
{"section":"tutorial","id":"step_00","name":"Tutorial: 0 - angular-seed","depth":1,"shortName":"0 - angular-seed","type":"overview","keywords":"about add added all and angular angular-phonecat angular-seed any api app application applications are associates attribute bash bat become below bootstrap browser build bundled but callback can cause change changes charset checkout code com come command constructed containing contains content creates css data declaration developing development directive directory displays doc doing downloaded downloads element elements evaluated every everything example exciting executed familiar files finds following for forward from fully future git git-mac git-win going here how href html http https images img important includes key latest learn let lib libraries line looks lost mac made make modified more most msysgit must namespace navigate need needed new next ng:autobind node not nothing now number older one order org other overview page phone phonecat png pre-configured project projects purposes ready registers rel removed repeat resets root run running scope script scripts see seed serve server servers shortly show shown simple single snapshots some source specified src ss-mac ss-win start static step step-0 step_01 steps stylesheet summary tab tag template terminal test than that the these this title true tutorial typical typically used users using utf-8 versions very was web what when whether which will window windows with within work working workspace xhtml xmlns yet you your"},
{"section":"tutorial","id":"step_01","name":"Tutorial: 1 - Static Template","depth":1,"shortName":"1 - Static Template","type":"overview","keywords":"about add adding addition and angular any app are basic below can cell changes code com contains create data diff display doc dynamically enhances examine example experiments fast faster for full generate generation github got how html https illustrate important index information into just learn let list listed more most next nexus now number order overview page phones purely result same see set show some standard static step step-1 step_02 summary tablet template that the then this true try turn tutorial two use uses wi-fi will with xoom you your"},
{"section":"tutorial","id":"step_02","name":"Tutorial: 2 - Angular Templates","depth":1,"shortName":"2 - Angular Templates","type":"overview","keywords":"__controller__ __model__ __view__ _separate_ about above add after all allows along also although and angular angular-phonecat angular-seed another any api app application appropriate apps are around array back behavior-driven being below between bind binding block bounded braces browser but can capture changes changing choose chrome close code com compiler component components concept concerns connected constructed constructs contained contains context controller controllers controlling create created creates critical crucial ctrl curly data data-binding decouple demonstrates describe design developed developers development diff directive directory doc documentation does doing dots dynamic each easy element enclosed encourage encouraged errors establish example examples execute expect experiments expressions fail fails fast faster features file first following follows for forget framework from full function generation github glue going google got guide hard-coded have hello home how html http https img important incrementing index indicates information instantiated jasmine javascript jstestdriver just keep kill learn leave length let lib list listed literal little located locations logic look mac made make makes many markup matches means mind mode model model-view-controller models more most motorola much name navigate new newly next nexus ng:autobind ng:bind ng:controller ng:repeat not notation note now number object occur one open org our output overview page part passed pattern phone phonecat phonelistctrl phones playing png point points pre-configured prefer presentation procedure project projection property providing records reflected refresh refreshes repeat repeater replaced report require rerun reset results role run runner running says scope scopes script search see seen separate server shorthand should similar simple since snippet software src start statement step step-2 step_03 strict structure such summary sure sync syntax tab table tablet tag take tells template templates terminal test testing tests text that the them then there this three through time tobe together total tutorial two unit updates use uses using var verifies very view views way ways web when whenever where which wi-fi widget wiki wikipedia will window with within work world write writing wrote xoom yay yet you your"},
{"section":"tutorial","id":"step_03","name":"Tutorial: 3 - Filtering Repeaters","depth":1,"shortName":"3 - Filtering Repeaters","type":"overview","keywords":"$filter __move__ actually add added adding also although and angular any api apis app appear application are array assertion automatically available because beforeeach below better between bind binding binds block body both box browser but can capability casual cause change changes changing choice class code com common completely components contains content controller controllers core correctly could count create criteria curlies current data data-binding declaration defined demonstrates depending describe detects developer did diff differences directive directives display displayed div doc dom double e2e-testing easily easy edit effects efficiently element elements end-to-end enter even example expect expected experiments explore eye fail feature features filter filtering fine first following follows for foundation friend from full fulltext fully function functional gallery get github gives good google guide has have how however html http https img immediately implemented important included index input into invisible jasmine javascript just keeps last laying learn learned let lets like list listed live lives loading loads looks lot made make manipulation match method might model most motorola much must name navigateto new nexus ng:bind ng:bind-template ng:controller ng:model ng:repeat ng:repeater node notice noticed now number one only open opportunity other our overview page parent pass pause perfect phone phonecat phonelistctrl phones png process prove query quickly readable reader really records reflect refresh regressions reload repeater repeaters rerun response result returned run runner same scope search second see servers set should simple snippet solution something sorting split src standard state statement status stays step step-3 step_04 steps summary sure sync syntax tab tag template templates test testing tests text that the their these they think this those though title tobe together tomatch transparent troubleshooting tutorial two type types unit updates use used useful user users uses using value variable verifies verify version very via view want was what when which while will wired wiring with within won work works would write written you your"},
{"section":"tutorial","id":"step_04","name":"Tutorial: 4 - Two-way Data Binding","depth":1,"shortName":"4 - Two-way Data Binding","type":"overview","keywords":"$browser $filter $orderby about add added addition again age all allows alphabetical alphabetically and angular api app are array assertions attention automatically because beforeeach below between binding bloated block both box browser but can cause chained changes chrome class code column com construction control controller controllers controls correctly create creates creating ctrl current data data-binding dataset default dependency describe diff differences direction discussed display displays doc doing dom down drop dropdown dynamic each element end-to-end enter errors example execute expect experiments extract fails fast faster feature filter filtering first following for from full function further generation github good got had have here how html http https img implemented important index initialized injection input instead into items its jasmine job just learn length let letting line list listed loaded look mac made magic make manipulation mechanism menu method model modified most motorola name named narrow necessary new newest next nexus ng:model ng:repeat not notice now once opposite option options order orderby ordering orderprop our output overview parent phone phonecat phonelistctrl phones pick png possible process property provided query record refresh remove reordered reorders repeater reset rest run runner running scope script search section see select selected selection server services set sets shared shorter should similar snippet sort sorting src statement step step-4 step_05 steps summary tab tablet talk template test tested tests text that the them then this time tobe toequal together total turn tutorial two two-way type unit update updated used user users uses utility value var verified verifies via view way well when whenever which wi-fi will wiring with work working works would xoom you your"},
{"section":"tutorial","id":"step_05","name":"Tutorial: 5 - XHRs & Dependency Injection","depth":1,"shortName":"5 - XHRs & Dependency Injection","type":"overview","keywords":"$browser $inject $new $service $xhr able add age all allows also and angular any api apis app apps are argument arguments array asking assertions assign associated automatically avoid backend because been before beforeeach behind being below between binding bit both bottom browser building built-in but call callback called calling can care caused causes changes child chrome code collisions com common complicated components constructed constructing contains control controlled controller controllers convention correctly could coupled create created creating ctrl data dataset deal declare default defy depend dependencies dependency describe detected diff displayed doc does doesn don droid dynamically easier easy enough environment errors everything exactly execute executed exist exists expect expectget experiments fact fails fake fetch fetched few file finally first flush following follows for format from front full function generated get github global guide handle hard-coded harness has have having helps how however html http https identifier identify images img implementation important incoming index infers injection injector injects into issues its javascript json just kind larger last learned let life like limiting line links list listed look loosely mac make makes managed may method methods might minification minified minify mock model models more most motoblur motorola motorola-defy-with-motoblur name names naming native need new nexus not note notice now number object often one operations operator order orderprop org other our out output overcome overview own parsed passed phone phonecat phonelistctrl phones png possible pre-process prefix presentation process production project property provide provides providing queue ready received recommended relative represent request reset resolved respond responds response responses retrieve returned root run runner sake same sample scenes scope script see self separate server service services set several should simplicity simply since snippet some splice src started state step step-5 step_06 stored strings subsystem suggests summary takes tell test testing tests that the them themselves these they this three throws thumbnail tobe tobeundefined toequal total train trained transitive tutorial unit upon url use used uses using value var various verify verifying version way web well well-structured were what when where wikipedia will with without would write xhr xhrs you your"},
{"section":"tutorial","id":"step_06","name":"Tutorial: 6 - Templating Links & Images","depth":1,"shortName":"6 - Templating Links & Images","type":"overview","keywords":"$filter $orderby about access add added additional also and angular api app applications are attribute below binding brace browser can catalog changes chrome class click com compiler confirm contains content correct create data defy detail diff directive directory display doc done double-curly dynamically each easy element end-to-end enter expect experiments expression extraneous file firebug for from full function future generate generating github guide had hash have how href html http https ids image images imageurl img implement important indeed information input inspecting inspector invalid jpg json layout lead learn links list listed literally location logs makes making markup most motoblur motorola motorola-defy-with-motoblur multiple name new next nexus ng:repeat ng:src note now now-familiar nowhere old only overview pages phone phones plain point prevents query record refresh regular render replace request run runner running see server should snippet specific specified src step step-6 step_07 steps subsequent such summary tab tag template templates templating test tests that the them this thumb thumbnail tobe tools treating tutorial unique upcoming urls use used using values verify views web webserver which will with would you"},
{"section":"tutorial","id":"step_07","name":"Tutorial: 7 - Routing & Multiple Views","depth":1,"shortName":"7 - Routing & Multiple Views","type":"overview","keywords":"$filter $inject $orderby $route about add added adding address against age alias all allows also and angular api app appears application are associated automatically batman because becoming before beforeeach behavior below binding bookmarks both browser build building but call callback called can captain changes class click code com common complex conjunction consists construct constructed contain containing controller controllers correct could create created current currently declaration declare declared deep defined dependency depending describe detail detailed details devices diff different display displayed doc doesn each easy either element empty end-to-end even everything expand expect expected experiments extracted feature file fit for forward fragment from full function get github going growing happens has hash hero history how href html http https imageurl img implement implemented important include included index information inherit inheritance instead into its layout learn let lets lib line link linking list listed located location makes managed map match matched matches messy model more most multiple name navigate navigateto navigation new next nexus-s ng:autobind ng:controller ng:model ng:repeat ng:src ng:view notation note nothing now onchange only open orderprop org other otherwise our overview page parameter params parent part partial partials perfect phone phone-detail phone-details phone-list phonecatctrl phonedetailctrl phoneid phonelistctrl phones placed placeholder png predicates previous properly properties property proton provided query quickly ready redirect redirected redirection refresh removed rendered replaced reused role root route routes routing run runner running same scope search second see self server service set shadow shadowing should show shown single slowly snippet some sort special src statement step step-7 step_08 steps stub sub-controllers summary tab tag tbd template templates test tests text thanks that the them then this three thumb tobe together triggers try turn tutorial two type url urls use used user users uses using usually utilize value var variable variables various verify very via view views visible was what when where which widget wikipedia will wire wired with wonders work would wrote you zoro"},
{"section":"tutorial","id":"step_08","name":"Tutorial: 8 - More Templating","depth":1,"shortName":"8 - More Templating","type":"overview","keywords":"$browser $inject $new $xhr added addition additionalfeatures also and android angular api app are availability been beforeeach below bindings browser can changes chrome class click clicks com communications comprise construct contains contour controller ctrl current custom data describe describes description detail details diff directory display displayed doc e2e-testing each end-to-end errors execute expand expect expectget experiments extracted fails features fetch field file files filter flash flesh flush following for from full function get github guide has heading how html http https images img implement important information into jpg json learn line list listed lists mac markup model more most name navigates navigateto near networks new nexus nexus-s ng:repeat ng:repeater ng:src note now one our out output overview own page params phone phone-details phone-specific phone-thumbs phonecatctrl phonedetailctrl phoneid phonelistctrl phones place placeholder png proceed project properties ram refresh replaced request reset respond response route run runner running same scope script see self server service should show similar snippet specs src step step-8 step_09 storage structure summary tab tbd template templating test tests that the them these this thumbnail tobe tobeundefined toequal total tutorial unit url use user using var various verifies view way when where which will with works write wrote xhr xyz you your"},
{"section":"tutorial","id":"step_09","name":"Tutorial: 9 - Filters","depth":1,"shortName":"9 - Filters","type":"overview","keywords":"add also and angular any api app are bar baz below binding bindings boolean built-in can cap certain changes characters checkmark chosen chrome code com combine component connectivity convert create cross custom date describe detail details diff display displayed doc easy either element employ enhance errors evaluates execute expect experiment experiments expression fails false features file filter filtered filters following follows for full function further github glyphs gps have how html https important include index indicate infrared input into json layout learn learned let like listed lives looks lower mac model most name navigate need new ng:model not now one order other our output overview own page pages phone present previous register represent reset return run runner script see should simply since some src step step-9 step_10 string strings summary syntax template templates test tested tests text that the these this those tobe total true tutorial two unicode unit uppercase uppercased use used userinput using values very were what whether will with write you your"},
{"section":"tutorial","id":"step_10","name":"Tutorial: 10 - Event Handlers","depth":1,"shortName":"10 - Event Handlers","type":"overview","keywords":"$inject $xhr add added alert also and angular any api app appropriately are attr attribute beforeeach below better between bound browser button can change changed changes class click clickable clicked clicking clicks com controller controllers could created current data declared default describe desired detail details diff directive display displays doc element elmo end-to-end even event expect experiments feature fetch first for from full function get github great handler handlers have hello how html http https image images imageurl img important index inherited its jpg json just large last learn let listed look main mainimageurl method methods model most move navigateto new ng:click ng:repeat ng:src now one operational overview page params phone phone-list phone-thumbs phonecatctrl phonedetailctrl phoneid phonelistctrl phones place png property ready refresh registered remains replace response run runner running same second see self server set setimage several should smaller snippet src step step-10 step_11 stop summary swap swapper tab template test tests that the them this thumbnail thumbnails tobe tutorial two url use user value var verifies verify view way well when while will with working world would you"},
{"section":"tutorial","id":"step_11","name":"Tutorial: 11 - REST and Custom Services","depth":1,"shortName":"11 - REST and Custom Services","type":"overview","keywords":"$browser $inject $new $resource $service $xhr above account actual add addmatchers age all alone also although amount and angular any api app application are arguments arrives augments automatically because beforeeach below bind both callback called can case cases changes check chrome client closing code com compares controller controllers correctly cover create created ctrl custom data data-binding deal declare declared default define defined deleting dependencies dependency describe detail diff doc doing don droid easier easy equals errors everything exactly execute expect expected expectget exposed factoring factory fail fails fetch fetched fetches few file filled flush following for from full function functions future get github have having here how html http https ignores illustrates images important improve improvement include instead interacting into invoking isarray issuing jasmine json just last layout lines listed looks lower-level mac mainimageurl make makes match matcher matchers methods model modified most motorola name need new newly-defined nexus not notes notice now object objects only orderprop org our out output overview params pass passed phone phonecat phonedetailctrl phoneid phonelistctrl phones problem process processing properties query register relatively relying replaced replacing represents requests require reset resource resources respond response responses rest restful result return returned returns run runner scope script see self server service services set setting short should similar simple simplified solve sometimes sources src standard statement step step-11 sub-controllers sufficient summary synchronously takes template test tests than that the the_end them then there these thing this time tobe toequal toequaldata total true tutorial two understand unit update updating urls use used using value values var verify via view want way web were what when which wikipedia will with without would xhr xyz you"},
{"section":"tutorial","id":"the_end","name":"Tutorial: The End","depth":1,"shortName":"The End","type":"overview","keywords":"about and angular application apps are back bootstrap checkout code com commands complete concepts contributing cookbook details develop developer developing development end enough especially examples experiment feedback feel for free further git google goto_step guide have hope https inspired interested jump just learn learned make message might misc more now our out overview own please post previous project questions ready recommend say see seed several start steps that the this touched tutorial useful using want was web when with you your"}];