NG_PAGES=[
{"id":"started","name":"Getting Started","depth":0,"shortName":"Getting Started","type":"overview","keywords":"__source__ above abstraction across add addition additional after ajax all anatomy and angular angularjs any app application application-specific applications are arrays attributes because behavior behind below bi-directional bind binding binds bootstrap border bound box brace braces browser browsers browswer build building built-in caching called can center change changes class closer code comes compiler concept concepts consists contents controller cookbook copy create created css curly data data-binding declarative define defines demonstrates dependency-injection describes design details developer did direction display displayed dom don double downloads dynamic easily easy edit editor elements entire event events example examples explains explanations explicitly expression extend extensible favorite feature field file finally first following for from fully get getting going great greeting guide handler hands-on happens have hello helloworld here how html http illustration img immediate immediately implicitly important include including input instructions instructs interest interesting into javascript language left let like line listener listeners literal loaded logic look maintain makes manipulators map markup meaning min model model-view-controller more name namespace need next ng:autobind not notation note notice now objects one only open org other our overview own page pages parts paste pattern png points presented primitive process processes properties provided referenced reflected refresh register replace requirement restrictions resulting root routing scenes scope script section see select serve services set should shows some something source src standard started string structure take template templates test text that the there these they this through together top tradtional try two-way type types typing understand url use useful uses using value variable very view way web what when where which widget window with work world write xhr xmlns you your yourname"},
{"id":"guide","name":"Developer Guide","depth":0,"shortName":"Developer Guide","type":"overview","keywords":"about all allows already and angular apis application are assigns attributes augment back bind binding bindings bootstrap brace browser built-in can classes compile compiler constructs contribute contributing core create css curly data data-binding define dependency design developer directive display doesn dom double download downloading element elements embedded environment example existing expression expressions extra filter for form format formatter guide have host how html including injected injection input into its javascript keeps live markup mechanism model model-view-controller new notation objects other override overview own parse pattern philosophy project projection registering root scope scopes server service shorthand single source stored styles template testing text that the their them then think through times truth understand use user user-readable using validate validator view watchers what when widget wired with works xml you your"},
{"id":"guide.overview","name":"Developer Guide: Overview","depth":1,"shortName":"Overview","type":"overview","keywords":"$10 $19 __14__ __15__ __2__ __3__ _around_ _declare_ _expression_ _really_ _with_ _you_ abandon about above abstraction add addchild adding addition affected ago ahead ajax alive all allowfullscreen allowing allows allowscriptaccess almost along although always amount anatomy ancestors and angular angular-related angularized annoy annoying another answer any apis app appear appearance applets application application-specific applications approach apps are argue around arrays aspect assists attributes authoring auto-injected automated automatically back back-then-considered-rich balked basic because been before behavior behind being belief believe berners-lee best better bidirectional bike bind binding bit bits blank boilerplate bonus bootstrap border borders both bound braces breed browser browsers build building built built-in built-ins business but bypassing caching call callback callbacks can care carry certainly change changes cheap check checking class clearly clever client client-side clutters code coding color com combination come comes comfort coming common compile compiler complex components consider control controllers cool cornerstone cost could couldn counterparts create creates creation crud css cumbersome curly currency cycle data decades declarative declaratively decouple deeper deficiencies define demonstrate demonstrates dependency-injection depends described describes describing design designed designer designing desktop detail details developer developers developing development different difficult difficulty directive directives disappears display displaying document documents does doesn doing dom don done dramatically dynamic earlier early easier easily easy edited effects either elements eliminates enhanced enough ensures enter entire equal erm error-prone errors essentially established esteemed even events every everything evolved example excellent executes existing expand expect expressing expression extend extends extensible factor failed failures fantastic far fast feature featured features feedback few field fields file filter finally fine first flash flow following follows for forest form format forms forward four framework freed frees friend friendlier from full fully fun function functioning functions generate get gets give given gmail goal going gone good google got graphic great greater guice guide guides gwt h1_1 h1_2 h1_3 h1_4 h1_5 h1_6 hack hard has have height hello helpful here his home homing hours how href html http https huge hundreds idea illustration img immediately immerse imperative implement implementation implementing importance impressive improves include includes increasing indeed inevitability initialization initially input inside instant instantly instead instructions integer integrate intention intentions interactive internal internet into intro invalid invented irritated isn its itself javascript journey jquery july just keep keeping keeps kind knock know label language learning leave leaving led left less let level libraries library life like line lines list listeners little live loaded loads logic long look looks lot lots low mainly maintain major majority make makes making manage manipulate manipulating manipulation manipulators many maps markup marshaling math matter matters may mid might min model model-view-controller modern modify money more most movie much multiply muttering mvc mysterious name names namespace naturally need needs network never new ng:autobind ng:bind ng:required ng:validate ngular nice nicely normal not notation note noticed now number object objects occurred occurrences occurs often one only operations org other others our out over overall overview own page pain parallel parent part parts pattern people perceive perhaps philosophy place plainly plays plumbing png point points possible powerful practice presentation prevailed preview primitives process programatically programmatic programming progress provide provides pull put qty quantity quickly rather read reads reality really reasons recall recognizes red reduces referenced reflect reflected reflecting reflects refreshing regard registering remember removes removing resulting returning reuse richer ride rival round routing run runs same saved saving saw say saying scenes scientific scientists scope scratch section see served server service services set setclass sets settext setup sgml sharing shop short shortcut should show shows side sides silverlight simple simply since single sites software some something sorts sounds source speaking spent src started state static still store strengths structured style substantial subsystem succeeded such suffice sum sweet sync syntax system systems tabs tag tags takes talk tasks tb-l teaches technologies technology tells template templates templating test testability testing tests text than thankfully that the their them then there these they thing things think this those thought thous three thrill thrilled through thus tim time times toequal together told tons too tools top total traditional transformed trees tricks tried trip trivial true truth try trying turn two two-way type typically uis ummm understand updates updating url use used user users uses using utility validating validation validators value var variables vastly versa versus very vice view vocabulary wait walk want wanted was watch watcher way ways web well were what when whenever where which while who whole why widget widgets width wiring with within without work working world would write writing written xhr xmlns year yes yet you your yourself youtube"},
{"id":"guide.bootstrap","name":"Developer Guide: Bootstrap","depth":1,"shortName":"Bootstrap","type":"overview","keywords":"add advanced after alias all and angular angular-0 angular-debug angularjs another apis application are attribute auto autobind behind best bi-directionally bind binding bootstrap bootstraps bound but called can care catch code com compilation compile compiler compressed control converts could create creates declare define developer document does domain don each either environment equivalent event example examples executable explains explicitly explorer feel fields file find follow following for form free fully function get global guide handler handy hello how html http human-readable initialization inserting instead internet into like loaded look magic manage manual map might min mode more must name namespace need ng:autobind noop not note obfuscated object occurs onload org out over overview own page prefer previous previousonload process properly qualified render root run running script section sequence set should simplest simply single snippet special src start started step tag takes tells template templates text that the there this through throughout thus try two type typically uncompressed unique unobfuscated use users uses using variable version versions want way when which who whole widget widgets window with working world writing xml xmlns you your"},
{"id":"guide.compiler","name":"Developer Guide: Compiler","depth":1,"shortName":"Compiler","type":"overview","keywords":"$watch about access actually add added advanced aggregate all allows already also and angular any api app append application applications applied apply apps are attr attribute attributes august automatically background because behavior best between bind bit block browser build building built-in but call called calls can careful caused change changes children class clone cloned clones comment compilation compile compileelement compiler compiles completes comprises contains cool copy core corresponding create css current data decide declared default define defined definition depth-first descend describes developer directive directives display dom domain-specific don each element elements every exactly example execute executed existing expression expressions extract find first following for found function functions generated generic get goes greeting guide happens have hello here how however html includes individual information initialized inject instance into invoke involved item iteration just knows language let like link linkelement linker listener loads look manual markup matching meaning methods might mode modify more multiple name nameexp namespace namespan need new ng:autobind ng:init not note often once one only optional original overview own page per phase phases predefined previously process processing produce provides recall recursively refer reference registers relationship rendering repeat repeater repeating result return returned returns root salutation salutationexp salutationspan say scope section see server services set sets should source span spans specific state step steps style subject template text that the them then there these this through times transformations traverse treat true two type types understood use useful user using var want was watches way web were what when which while widget widgets will with world write writing you your"},
{"id":"guide.css","name":"Developer Guide: CSS","depth":1,"shortName":"CSS","type":"overview","keywords":"and angualr angular any applies border box built-in can class classes code contains create criteria css details developer directives displays does dom download edit element error evaluate evaluated example exception expression expressions file following for from guide have host hovering how href html includes input like link local malformed message more ng-exception ng-validation-error ng:required ng:validate normally not note override overriding overview own pass predefined red rel see server set solid source styles stylesheet styling surrounded text that the these this threw try turn turns type using validation when which widget would you your yourfile"},
{"id":"guide.data-binding","name":"Developer Guide: Data Binding","depth":1,"shortName":"Data Binding","type":"overview","keywords":"about additional after all allows along always and angular another any application are automatically because bind binding browser but can changes class classical code compilation compiled completely consider constantly controller copying data data-binding dependency details developer development diagram different direction directives dom easy first fit for from good greatly guide has highest how html illustrated img immediately important instant into isolation just known level like live looks makes markup means merge model most not occurs one only overview png process produces programing projection propagated reason reflected related right say scope second sections see separated simplifying simply single-source-of-truth snap src state step syncs system systems template templates templating test testing that the there they think this times together treat two-way unaware uncompiled user values very view way why with without works worse write you your"},
{"id":"guide.di","name":"Developer Guide: Dependency Injection","depth":1,"shortName":"Dependency Injection","type":"overview","keywords":"$inject $new $route $service $window $xhr about absolutely access accesss achieve across act added addition additional after ahead alert alexandria all allergic allowing allows almost along also among and angular angularjs annotation annotations another answer any application applications approach are argument arguments array ask asking aspx automatically because been begins below benefits better bound break bundled but cache caching call called caller calling calls can case cause change child chuck closely code code-base com common commonly components concept configparam1 configparam2 configure configured configuring control controller controllers core correct count counter crate create created creates creating creation crucially curried curring curry custom customization declaration declare declares defined definitions dependencies dependency dependent depends describe design details developer developers devshed different discuss document does down drawbacks each easy either end ending equivalent exactly examining example except expect experimental explain explains explicitly extra factory far feature feel finally find flexible fna fnb fnthis focus following for form fowler framework free from function functions future gadgetfactory gain generate get gets given global google greet guice guide has have having hello hence here highly how html http ideally idgenerator idgenerator2 imperatively implementation implies important importantly increment infer inference inferred inferring information inject injected injection injector injectors insert instance instances instantiated instantiating instantiation instead into inversion invocations isolation its java javascript keyword know known lack lame languages large lastly learn let lethally like lingo links list locator look looking lookups lot main maintainable makes manual manually martin may means method microsoft min minified minifiers mock mocks more most msdn multiple must mycontroller myfn myservice name names need needed needs neither net new ng:autobind ng:controller nor norris not note notice object often one only operator order org other our ourselves out outside overview own parameter parent parentctrl part pattern patterns per picocontainer place please portion possible pragmatically pre-processor precise properties property provide provided question quite rare realize reason reasons refer referencing reflection register registered registering registry related replace requires resolving resort responsible retrieval retrieving return returning returns root rootscope route routes rules run-time salutation same say scale scan scope scopes section see seems separate service servicea servicea_ services several share should shown simple simplest since singletons soon source specifically spring springframework src standard starting state statically still story strip strongly subsequent such supplied supplies supply supplying takes talking template test testable tests than that the their them then there therefore these think this time times tobe toequal topic tostring track tries trying turns two typed typical typically unbound undervalued uniqueid unit use used useful user using usually value var very via way ways what when where which while wikipedia will wiring with without work world writing xmlns you your"},
{"id":"guide.expression","name":"Developer Guide: Expression","depth":1,"shortName":"Expression","type":"overview","keywords":"$30 $add $document $eval $filter $parent $remove $service $window access accidental according act actual adam add addfuture addfutureaction adding additional additions against alert alerttext all allow allows also and angular api application arbitrary are arguments array assignments attribute attributes augmentation augments because become before behavior behind below binding bindings bugs built-in but calculate call called can canned cannot case chain change choose chooses class click clutter code collide collision collisions colon-delimited common complicated conditional conditionals consider contacts control controller controllers convert core correct could count create creates current data decimal default define defined delegate develop developer developers did didn differences different differentiate display displaying does doesn done element embed enter entirely equivalent etc eval evaluating evaluation evaluations evaluator even example example2 example3 exception existing exists expect expr expression expressions exprs extend extensions extra filter filter1 filter2 filters flow following for forgiving format formatted frameworks friend friends from function further future general global guide harmony have hello here href html human-readable input instead intentionally intermediary into invoking its javascript john julie language length like limited list locale logic look loop loops make makes mary method methods might mike mock mockwindow more much must name names namespace need needs neither new ng-attr-widget ng:bind ng:click ng:init ng:repeat nor not nothing null number object objects often operators order other others our over overview pass passes perhaps philosophy phone points prefix prefixing presenting prevent primarily problem properties property prototype purpose push raw reason refer repeater reserves reserving response return returns reverse richness row run same scope search searchtext sense server set should show significance similarly simple simply size soon source state statement statements string subtle such syntax table templates tempting ternary testing text than that the them then there these they think this through throw throws tobe toequal try type types undefined unlike uppercase use used user user-friendly using valid value var version view views vocabulary waiting want wasn way what when where which while who will window with without wondering work world worse would write yet you"},
{"id":"guide.template","name":"Developer Guide: Template","depth":1,"shortName":"Template","type":"overview","keywords":"add addition allows already also and angular any application attach attribute attributes augment behavior bind brace browser build can constructs create css curly data developer directive display doesn dom domain-specific double easily element elements example existing expressions following for format guide html input into language lets markup means new notation object overview readable rendering shorthand template text that the think this understand use user validate view want web what widget writing xml you your"},
{"id":"guide.testing","name":"Developer Guide: Testing","depth":1,"shortName":"Testing","type":"overview","keywords":"angular applications developer guide overview testing written"},
{"id":"contribute","name":"Contributing","depth":0,"shortName":"Contributing","type":"overview","keywords":"absolutely accept accepted access account add added address afterwards ahead aliases all also always and angular angular-ie-compat angular-scenario angular-x angularjs annotations anonymous api apis application applying are artifacts automatically available base based before below best better binaries branch browser browsers bug build building bundle can capture case change changed changes characters check checking checkout clone closure closures code com commit compatibility complete complex concise configure consistency consists contained contains contents contribute contributing contribution contributions coordinate craft crafted crazy create creating debug default delete dependencies depending development directories directory discussed docs document documentation documented don duplication each efforts either end2end ensure entire errors even exceptions executed execution existing explicitly explorer export extended external features file files first fixes follow following for fork forking from functions generate git github good google googlecode grab guidance guide guidelines h1_1 h1_2 h1_3 h1_4 h1_5 have help here hierarchies hosted how href html http https implicitly information inheritance install installation installing instead instructions integration intend internal internally internet jasmine java javascript jsdoc jstd jstestdriver keep latest license licensed like lint linux list listed local located log love machine machines macintosh made mailing main major make makes map markdown master mean means merged methods min mind minified mit more most must my-fix-branch name namespaces necessary need needed new ngdoc ngdocs node non-minified not objects off often one only open org origin other our out output over overview package page part pass patch please plenty possible pre-installed pre-packaged prefer prevent private project prototypical provided public pull purpose push quite rake rather release remote repository request reviewed rubyforge rules run runner running runtime script see send sense separately server serves several sha simple small source standards start steps style submit submitted submitting successfully suite support sure system tag tail tarball templating test tested tests tgz than thank that the them then there these this throughout time today trigger true type under unit unit-tests unless update upstream use used useful username version via view warnings watchr web website welcome what when whenever which with work working wrap write written xml you your yours"},
{"id":"cookbook","name":"Cookbook","depth":0,"shortName":"Cookbook","type":"overview","keywords":"able abstractions across add advanced aids ajax allowing anchor and angular app application applications apps are available away basic behavior bidirectional binding bread but butter buzz changes changing classic collection common communicate controller controllers cookbook creates data deep deeplinking demonstrates dependency design detection dirty disabling displaying dom easy editing eliminating emailing errors example exist external features first for form formadvanced forms from full-page get global hello helloworld here implement initialization initialized injection instead its level likely linking links lived loads long maintainability makes model multi-page must mvc navigates never next objects order overview own page particular pattern perils possible pre-bundled presentation prevent problem project providing reloading reloads resolves resources responsive reverting safeguards screen screens send separate separation service services show simplest single solve specially specific state submit such tailored taking testability that the this through thus tic-tac-toe time-tested tries typical update url urls useful user uses using validation view way web welcome what which will with within without world you your"},
{"id":"cookbook.buzz","name":"Cookbook: Resources - Buzz","depth":1,"shortName":"Resources - Buzz","type":"overview","keywords":"$inject $resource activities activity activityid actor and angular api are attach behavior buzz buzzcontroller callback can class click com comments content cookbook count data div element example expand expandreplies expect external factory fetch float font-size for function get give google googleapis googlebuzz has help href html http https item items json json_callback links margin-left max-height name names ng:click ng:controller ng:repeat object overview params profileurl prototype provide rendered replies reply resource resources retrieve right src style templates that the them then this thumbnailurl tobegreaterthan urls use used userid value which with you"},
{"id":"cookbook.deeplinking","name":"Cookbook: Deep Linking","depth":1,"shortName":"Deep Linking","type":"overview","keywords":"$inject $rouet $route alert allows also and angular anonymous any app appcntl application appropriate are assign associated assumptions background-color behavior blue bookmarked bookmarks bootstraps border boundary but can cancel case causes change changed changes changing chrome class click color com common consist consists construct constructed contact contacts controller cookbook copy current deal deep define defined described details difference display divided does each easy edit element email encode enter etc example expect following footer for force form from function greet has hash have hello here home href html implement information initialization initialize input instantiated instantiates into later like line linking loads location make makes maps margin model most multiple name navigate newly ng:controller ng:view not notice overview padding page parent partial partials particular person programatically proper prototype refer restored routes routing same save scope screen screens service services sets settings settingscntl several should show shows simple single snippet solid something state style sufficient table template text that the then these things this tomatch two url urls useful user using very view views visible visit watches way welcome welcomecntl when whether which while white widget will window with would you your yourname"},
{"id":"cookbook.form","name":"Cookbook: Form","depth":1,"shortName":"Form","type":"overview","keywords":"$add $remove abc add adding address allow and angular anytown application are array attr auto available better blank both bound build can city class classname click clicking contact contacts controller cookbook data debug debugging digits div element enter entering example expect field for form formcontroller from function gather going have how href html included initial initialized input inputs into items john leaving line1 link main make model name new ng:click ng:controller ng:repeat ng:required ng:validate non not notice off operations org overview phone present purpose purposes read reason refer reflected regexp remove scope should show shows simple simply size smith state strives text the them then these things this tomatch trivial type understand updated user using validate validator value view web what which widget widgets will with write xxx you your zip"},
{"id":"cookbook.formadvanced","name":"Cookbook: Advanced Form","depth":1,"shortName":"Advanced Form","type":"overview","keywords":"$add $equals $inject $invalidwidgets $remove address advanced and angular anytown are attr back basic being button buttons cancel change changes city click common contact contacts cookbook copy debug detection dirty disabled element enable enabled enter errors example expect extend features form function here href include input internal invalid john line1 main master model models name ng:click ng:controller ng:repeat ng:required ng:validate notice one only original other overview phone presented preventing pristine prototype regexp reverting reverts save should shows size smith something state submission such text the there this tobefalsy tobetruthy toequal two type updates user userform val validation value view visible zip"},
{"id":"cookbook.helloworld","name":"Cookbook: Hello World","depth":1,"shortName":"Hello World","type":"overview","keywords":"and angular any binding binds bootstrap bootstraps bound brace change changes concept cookbook curly data data-binding double enter enters environment event events expect field firing for function greeting guide hello html implicit input listener look name need note notice overview presence reflects registration root scope script should source tag take text that the things through toequal type user value variable when which widget world your"},
{"id":"cookbook.mvc","name":"Cookbook: MVC","depth":1,"shortName":"MVC","type":"overview","keywords":"$index $location $watch above all allows and angular any are available back because behavior between black board border browser button call calls can cell cellstyle center changes changing class clean click code col connection controller cookbook copy cursor deep-linking defined diagonal droppiece easy element else example execute expect for foreach function functions game grade grafted has hash hashsearch height html injected instantiate instantiated into invokes isolation javascript join just listener logic makes middle model mvc needed next nextmove ng:click ng:controller ng:repeat ng:show ng:style notice one onto overview piece play player pointer projection properties prototype push readurl reference rendering reset return row rows same scope see separation set seturl share should simply since solid split state steps still stored style template test testable text text-align that the there things this tictactoecntl toequal undo url value var variable vertical-align very view when which width will winner without won"},
{"id":"downloading","name":"Downloading","depth":0,"shortName":"Downloading","type":"overview","keywords":"about after all allows always and angular angular- angular-ie-compat- angular-mocks- angular-scenario- angularjs any anything app application applications apps archive are artifacts available better browser build can care closure code compiler compose contains copy created data development directly directories directory docs docs- documentation download downloaded downloading during each easier editor end error even everything execute explorer file files first following for from get getting handy harness host hosting html http human-readable implementation importantly including internet javascript kinds late latter let lifetime list listing load loaded local maintaining make messages min minified minimize mocks more navigate ng:autobind nifty non-minified non-obfuscated obfuscated offline older once one opening options order org other our overview own parent particular path point production project provide quickly released releasing resides same say script scripts see servers should since single size special specifically src started strongly suggest suitable sure tag tailored tarball template test testing tests tgz that the their there these this those two under unit urls use user version versioned versions very view want web which who with without work worrying write you your"},
{"id":"faq","name":"FAQ","depth":0,"shortName":"FAQ","type":"overview","keywords":"about above ajax all and android angular another any app application apps are attack attacks back basic because bidirectional big binding bindings blackberry bootstrap both brackets browser browsers build building built-in but call called can chrome client closure code com compatible compilation compile compiled compressed constantly create cross-site css data dependency depending desktop details developer development different does dom don download downloading element environment escaping existing falls faq file firefox fit for framework from functions good google has highest holes host how however html html5 http ie6 ie7 impervious implementation important include including injection instructions integrate integrated iphone its itself javascript jquery july just learn level libraries library license licensed like lite live load locally look lots makes manipulate manipulation many means memory mit mobile model more namespace native need none not note obfuscated one only open open-source orthogonal other overview own path performance plugin present primitives produces project projections protection provide radically reason render round-trip script scripting security see service side size sounds source step strings sync system systems tag takes talk technology template templating testability testable that the there these this together two use uses vary very view watch way webkit-based webos what which why widget widgets will with work works worry write yes you your youtube"},
{"id":"testimonials","name":"Testimonials","depth":0,"shortName":"Testimonials","type":"overview","keywords":"able accomplish also and angular application approach are astounded back basically before best better building but clone coding compliments conference consider constantly currently developing discovering dobrica dynamic embedded end epiphany especially even everything executive experience fantastic first for from fun git github goal great had hardy have having help here how igor interested jeremiah jerry john jquery last learner library list long might misko more most much myself new obvious overview pass pavlinusic people possible power probably productive project promoting question really received rewriting seen server-side simple simpler simplicity sites something source still submission summarize summary system testimonials than thanks that the thing think this thought time try understand use used useful want was way web webapps week who widely within without wondering world worth write you"},
{"id":"angular","name":"angular","depth":0,"shortName":"angular","type":"overview","keywords":"angular exported namespace overview the"},
{"id":"angular.attrMarkup","name":"angular.attrMarkup","depth":1,"shortName":"attrMarkup","type":"overview","keywords":"addclass additional-class allows angular attribute attrmarkup attrname compiler contest element except extends extraclass function markup modify node overview rather similar state text that the then very way you"},
{"id":"angular.bind","name":"angular.bind","depth":1,"shortName":"bind","type":"function","keywords":"all also angular are args arguments becomes bind bindings bound call calls can context currying evaluated for function known optional org prebound returns self should specified supplied that the this which wikipedia with wraps"},
{"id":"angular.compile","name":"angular.compile","depth":1,"shortName":"compile","type":"function","keywords":"$new access allowing and angular approriate are around asking attach attrmarkup before bind both bound but call called caller calling can case clicked clone cloneattachfn cloned clonedelement collects compilation compile compiler compiles coresponding create created current directive directives document dom each either element elements entire example executes for from function functions give hand have html instance into keep link linking many-times markup match need new newly ng:click none not once one original other passed piece place point process produce produces provided rather reference repeater results retain returned returns right root rootscope2 rootsscope same scoope scope send single someparentscope specified string template that the them then there this together transformed tree true trying two used var via view walking was ways were where which widget widgets will window with working would you"},
{"id":"angular.element","name":"angular.element","depth":1,"shortName":"element","type":"function","keywords":"additionally alias all allows always and angular api api-compatible are arguments available before both com commonly current dom domcontentevent domelement either element extend focus footprint for function functionality functions html implementation implements into invocation jquery limited lite loaded long manipulate methods minimal most needed never note number object only precedence raw real reason references retrieves scope string styles subset supported takes that the these this tiny version was which with wrapped wraps"},
{"id":"angular.extend","name":"angular.extend","depth":1,"shortName":"extend","type":"function","keywords":"all angular can copying destination dst extend extends from function multiple object objects properties source specify src the you"},
{"id":"angular.forEach","name":"angular.forEach","depth":1,"shortName":"forEach","type":"function","keywords":"and angular array become can collection context each either element expect for foreach function gender index invoked invokes item iterate iterator key known log male misko name note obj object once optionally over previously property push reference specified the this toequal value values var was where with"},
{"id":"angular.fromJson","name":"angular.fromJson","depth":1,"shortName":"fromJson","type":"function","keywords":"angular available deserialize deserialized deserializes format fromjson function json native parser string the thingy use"},
{"id":"angular.identity","name":"angular.identity","depth":1,"shortName":"identity","type":"function","keywords":"angular argument code does except first for function functional identity its nothing return returning style that the this transformer useful value when writing"},
{"id":"angular.injector","name":"angular.injector","depth":1,"shortName":"injector","type":"function","keywords":"$inject $service above additional after also and angular any appended are args argument arguments array automatically available call calling can creates curry currying depended dependency determine eager for function guide has initialize inject injection injector instance instances key keys known look map none optional override pass place property provided provider providers retrieving return returns reuse root saved scope service services set speciafied string tests that the then this those type used value when where which with"},
{"id":"angular.isArray","name":"angular.isArray","depth":1,"shortName":"isArray","type":"function","keywords":"angular array check checks function isarray reference true value"},
{"id":"angular.isDate","name":"angular.isDate","depth":1,"shortName":"isDate","type":"function","keywords":"angular check checks date function isdate reference true value"},
{"id":"angular.isDefined","name":"angular.isDefined","depth":1,"shortName":"isDefined","type":"function","keywords":"angular check checks defined function isdefined reference true value"},
{"id":"angular.isFunction","name":"angular.isFunction","depth":1,"shortName":"isFunction","type":"function","keywords":"angular check checks function isfunction reference true value"},
{"id":"angular.isNumber","name":"angular.isNumber","depth":1,"shortName":"isNumber","type":"function","keywords":"angular check checks function isnumber number reference true value"},
{"id":"angular.isObject","name":"angular.isObject","depth":1,"shortName":"isObject","type":"function","keywords":"angular are but check checks considered function isobject javascript not null object objects reference true unlike value"},
{"id":"angular.isString","name":"angular.isString","depth":1,"shortName":"isString","type":"function","keywords":"angular check checks function isstring reference string true value"},
{"id":"angular.isUndefined","name":"angular.isUndefined","depth":1,"shortName":"isUndefined","type":"function","keywords":"angular check checks function isundefined reference true undefined value"},
{"id":"angular.lowercase","name":"angular.lowercase","depth":1,"shortName":"lowercase","type":"function","keywords":"angular converts function lowercase lowercased string"},
{"id":"angular.markup","name":"angular.markup","depth":1,"shortName":"markup","type":"overview","keywords":"achieve after all allow and angular are attribute before built-in calls chance compilation compiled compiler content could curly custom define directive directives dom easier element elements enclosed every example expanded expression extended extensions find footer for function functions further giving guide handler header here horizontal how html index indexof into let linking markup markups matches name needs ng:bind node normally not other overview parentelement portions produce remove rule say shorthand should simply substring text textnode than the themselves then think this transform transforms translate translates understand unlike var want way which widget widgets words write you"},
{"id":"angular.mock","name":"angular.mock","depth":1,"shortName":"mock","type":"overview","keywords":"after all and angular angular-mocks any automatically before built-in file for loaded mock mocks namespace overview real replace services ship tests that with"},
{"id":"angular.mock.service.$browser","name":"angular.mock.service.$browser","depth":3,"shortName":"$browser","type":"service","keywords":"$browser angular mock service"},
{"id":"angular.mock.service.$exceptionHandler","name":"angular.mock.service.$exceptionHandler","depth":3,"shortName":"$exceptionHandler","type":"service","keywords":"$exceptionhandler angular any application are bug error errors fail for handler implementation info into make means mock mocks more passed rethrows see service test tests that the there these this typically will"},
{"id":"angular.mock.service.$log","name":"angular.mock.service.$log","depth":3,"shortName":"$log","type":"service","keywords":"$log all angular are array arrays each error exposed for function gathers implementation info level level-specific log logged logging logs messages mock mocks more per property see service that the these"},
{"id":"angular.noop","name":"angular.noop","depth":1,"shortName":"noop","type":"function","keywords":"angular calculateresult code empty foo function functional noop operation performs result style that the this useful var whatsoever when writing"},
{"id":"angular.toJson","name":"angular.toJson","depth":1,"shortName":"toJson","type":"function","keywords":"and angular contain formated function input into json jsonified jsonify newlines obj output pretty representing serializes set string the tojson true whitespace will"},
{"id":"angular.uppercase","name":"angular.uppercase","depth":1,"shortName":"uppercase","type":"function","keywords":"angular converts function string uppercase uppercased"},
{"id":"angular.Array","name":"angular.Array","depth":1,"shortName":"Array","type":"overview","keywords":"$foo all and angular are array augment because bound call character code collisions don exposed expressions foo for functions invoke invoked javascript manipulation method methods minimize must myarrayobject names namespace naming object objects overview params prefixed subtype the these two type utility ways well with"},
{"id":"angular.Array.add","name":"angular.Array.add","depth":2,"shortName":"add","type":"function","keywords":"$add $remove add added and angular appends array augment beforeeach being can click clicked create created defaults delete difference doc-example-live element empty example expand expanded expect expressions female filled for from function how href info initially input javascript john male mary method more name new ng:click ng:init ng:repeat note object objects one-- optional people person record see sex should shows similar simplify that the this tobe type used user value via when with"},
{"id":"angular.Array.count","name":"angular.Array.count","depth":2,"shortName":"count","type":"function","keywords":"$count and angular array augment being calculate compiled condition count counts currently determines doc-example-live element elements enter evaluated evaluates expect exposed expression expressions for fork function have info input item items iterated knife more name ng:init ng:repeat note number one only optionally over point points recalculate see should spoon text than that the this those toequal true type updated used using when which will"},
{"id":"angular.Array.filter","name":"angular.Array.filter","depth":2,"shortName":"filter","type":"function","keywords":"$filter above accept across adam against all and angular any arbitrary array augment called can column contain contained containing described each element elements enter equivalent example expect expression expressions fields filter filtering filters final for friend friends from function have info input items john julie mary match mike more name negated new ng:init ng:repeat note object objects one only pattern phone predicate prefixing properties property result results return returned returns search searchobjresults searchtext searchtextresults see selecting selects should simple source special specific string strings subset substring text that the this those toequal true type used using value when which will with write"},
{"id":"angular.Array.indexOf","name":"angular.Array.indexOf","depth":2,"shortName":"indexOf","type":"function","keywords":"$indexof and angular array augment bookname books calculate can correctly determines dick element enter expect expressions foo for found function gatsby great index indexof info initial input juliet list moby more name ng:init note position recalculate returned romeo search see should the this tobe type used value"},
{"id":"angular.Array.limitTo","name":"angular.Array.limitTo","depth":2,"shortName":"limitTo","type":"function","keywords":"$limitto angular array augment containing copied creates doc-example-live elements enter entered expect expressions first for from function info input items json last length limit limited limitto more name negative new ng:init note number numbers numer only output positive returned see should source sub-array the this three tobe toequal type update used val value when will"},
{"id":"angular.Array.orderBy","name":"angular.Array.orderBy","depth":2,"shortName":"orderBy","type":"function","keywords":"$orderby adam age aged angular are array ascending augment but called can click column comparator control copy descending determine different doc-example-live element elements equivalent evaluates expect expression expressions first for friend friends function getter href info items john julie mary mike more name next ng:click ng:init ng:repeat note object one operator optionally order orderby ordered orders phone predicate predicates prefixed property reorder result reverse see selects should sort sorted sorting source string such table that the this tobe toequal type used user using when which will with"},
{"id":"angular.Array.remove","name":"angular.Array.remove","depth":2,"shortName":"remove","type":"function","keywords":"$remove and angular applications array augment build check click column cool count demos doc-example-live documentation element expect expressions first for from function href indexof info initialize instance learn list looked modifies more ng:click ng:init ng:repeat note only out read remove removed removing see should task tasks the this tobe toequal type used using value which will with"},
{"id":"angular.Array.sum","name":"angular.Array.sum","depth":2,"shortName":"sum","type":"function","keywords":"$99 $add $remove $sum add all and angular are around array augment because becomes calculate calculates click cost count currency description doc-example-live during each element enter entry evaluated evaluation expect expression expressions for function gadget had href info initialize input integer invoice issues item items lame more name ng:click ng:init ng:repeat ng:required ng:validate note number numbers once qty recalculate returned row see should size source specs sum supplied table the then these this tobe toequal totals type used using value values work"},
{"id":"angular.Object","name":"angular.Object","depth":1,"shortName":"Object","type":"overview","keywords":"$foo all and angular are argument augment bound call character code collisions don exposed expressions first foo for function functions invoke invoked javascript manipulation method methods minimize must myobject names namespace naming object objects overview param2 prefixed the these two type utility ways with without"},
{"id":"angular.Object.copy","name":"angular.Object.copy","depth":2,"shortName":"copy","type":"function","keywords":"$copy $equals all and angular any array augment button can click clicked copied copy created creates css deep deleted destination display doc-example-live element equal expect expressions for form function hello including info initialy inline input into its make master members more name ng:click ng:hide none not note null object optional otherwise primitives print properties provided returned salutation see should source span specified text that the this tobe type undefined updated used val value was when which will world"},
{"id":"angular.Object.equals","name":"angular.Object.equals","depth":2,"shortName":"equals","type":"function","keywords":"$equals all and angular are arguments arrays augment compare comparision comparison css determines display doc-example-live during enter equal equals equivalent expect expressions for form function greeting hardcoded have hello ignored info initialy inline input kitty modified more must name ng:hide none not note object objects pass print properties property salutation same say see should span starting supports text that the their they this tobe true two type types used val value values when with world"},
{"id":"angular.Object.size","name":"angular.Object.size","depth":2,"shortName":"size","type":"function","keywords":"$size and angular array augment correct count determines elements expect expressions for function info inspect items length more neither note number obj object only own print properties see should size sizes string the this tobe type used"},
{"id":"angular.directive","name":"angular.directive","depth":1,"shortName":"directive","type":"overview","keywords":"$watch add all and angular answer any apply are attribute attributes because before both but can change changes compile compiledelement compiler consider control could create currentscope define different directive directives does dom each element ensures example execute execution existing expected expression extension first for function guaranteeing have here how html into last linkelement manipulate mary matters may mike modify namespace need ng:bind ng:init ng:repeat not notice number once order over overview passes people per person piece properties read repeater report return run same scope sets solve span tells template text that the there they thing this transform turn two type unspecified use used uses using value var want watch way ways whereas which why widget widgets work would you"},
{"id":"angular.directive.ng:autobind","name":"angular.directive.ng:autobind","depth":2,"shortName":"ng:autobind","type":"directive","keywords":"above absolute add advanced after alias all and angular angular-bootstrap angular-min angular-x angularcontent angularjs another any apis appending application are attribute auto auto-bootstrap autobind before behind best bi-directionally bind bootstrap bootstraping bootstrapping bootstraps bound but called can care case cases cms code com compilation compile compiled compiler control conventions converts could create creates declare define development directive document documented does dom domain don each either element ends equivalent etc event example exclusively executable explains explicitly explorer fields file filename find follow following for form format fragment fully get global handler handy hello how html http initialization inserting instead internet into javascript like loaded loads look magic manage manipulation manual manually map match might min mode more must name namespace naming need ng:autobind ng:autoboot not note object occurs one onload only optionally order org out over own page parameter part possible prefer prepended previous process properly qualified rare ready relative rename render restrictions root run running script section separate sequence set should similarly simplest simply single snapshot snippet some soon special specify src start started step systems tag takes targeted tells template templates text that the these this type typically unique url use users uses using value variable want way when which who whole widget widgets with without work world writing x-xxxxxxxx xmlns xmlsn you your"},
{"id":"angular.directive.ng:bind","name":"angular.directive.ng:bind","depth":2,"shortName":"ng:bind","type":"directive","keywords":"and angular any asks attribute binding bootstrap box change changes check compile content date directive doc-example-live element enter eval expect expression function given greeting guide hello here html input into just kept let name ng:bind replace should text the this time tobe try type using usually value watch when whirled with world write you"},
{"id":"angular.directive.ng:bind-attr","name":"angular.directive.ng:bind-attr","depth":2,"shortName":"ng:bind-attr","type":"directive","keywords":"above and angular angularjs any attr attribute attribute_json attributes bellow between bootstrap box can check click com compile contains created data-binding databindings directive directly doc-example-live don during each element embedded embedding enter expect expression expressions for function get gets given google guide here href html http input into json key key-value mapped matches name need needs ng:bind ng:bind-attr ng:non-bindable number pairs preferred query replace replaced representing should since snippet specified specifies template text that the this time tobe translated try type unlike using usually value way which with working write you"},
{"id":"angular.directive.ng:bind-template","name":"angular.directive.ng:bind-template","depth":2,"shortName":"ng:bind-template","type":"directive","keywords":"and angular any attribute binding box can change check contain directive doc-example-live element elements enter eval expect expressions few form function greeting greetings have hello here html input multiple name ng:bind ng:bind-template not option replaced required salutation should since some span specifies such template text that the title tobe try type unlike user using value watch with world"},
{"id":"angular.directive.ng:change","name":"angular.directive.ng:change","depth":2,"shortName":"ng:change","type":"directive","keywords":"abc angular changecount changes check checkbox checkboxcount directive doc-example-live enter execute executes expect expression function input name ng:change ng:init should text textcount the tobe type using whenever widget"},
{"id":"angular.directive.ng:class","name":"angular.directive.ng:class","depth":2,"shortName":"ng:class","type":"directive","keywords":"allows angular any attr button check class classname clear click conditionally css directive doc-example-live element eval expect expression function guide html myvar ng-input-indicator-wait ng:class ng:click not set should span text the tomatch type using value you"},
{"id":"angular.directive.ng:class-even","name":"angular.directive.ng:class-even","depth":2,"shortName":"ng:class-even","type":"directive","keywords":"affect and angular any attr cate check classname conjunction directive doc-example-live eval exactly except expect expression function guide inside john mary must name names ng-format-negative ng-input-indicator-wait ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only rows should span suz takes the tomatch with works"},
{"id":"angular.directive.ng:class-odd","name":"angular.directive.ng:class-odd","depth":2,"shortName":"ng:class-odd","type":"directive","keywords":"affect and angular any attr cate check classname conjunction directive doc-example-live eval exactly except expect expression function guide inside john mary must name names ng-format-negative ng-input-indicator-wait ng:class ng:class-even ng:class-odd ng:init ng:repeat odd only rows should span suz takes the tomatch with works"},
{"id":"angular.directive.ng:click","name":"angular.directive.ng:click","depth":2,"shortName":"ng:click","type":"directive","keywords":"allows angular any behavior check click clicked count custom directive doc-example-live element eval expect expression function guide increment ng:click ng:init should specify the tobe upon when you"},
{"id":"angular.directive.ng:controller","name":"angular.directive.ng:controller","depth":2,"shortName":"ng:controller","type":"directive","keywords":"access add addcontact adding alert allows also and angular any are array assign automatically becomes behavior bindings called can changes check class clear clearcontact clearing click contact contacts contacttoremove controller data declared design directive div doc-example-live easily easy editing element email eval expect expression for form from function greet greeting guide here href html information input john manually markup methods model model-view-controller mvc name need ng:click ng:controller ng:repeat notice org pattern phone possible prototype push reflected remove removecontact removing scope settingscontroller should simple smith source specifies support tab text that the these this through tobe type update user val value view which without yourname"},
{"id":"angular.directive.ng:eval","name":"angular.directive.ng:eval","depth":2,"shortName":"ng:eval","type":"directive","keywords":"allows and angular any assigning binding case check code desirable directive display displaying divide effect effects enter eval execute expect expression function guide has however input multiplied name ng:eval notice obj result should showing side sometimes such that the tobe updatecount updating user value which without you"},
{"id":"angular.directive.ng:eval-order","name":"angular.directive.ng:eval-order","depth":2,"shortName":"ng:eval-order","type":"directive","keywords":"$19 $add $remove $sum after and angular any are available before binding bottom but can change changing check circumstances colspan computed constant cost currency data desc directive div doc-example-live enter evaluation expect first for from full function gadget href input integer invoice item items lag last name needed ng:click ng:eval-order ng:format ng:init ng:repeat normally not order priority problem qty see should some such that the they this tobe top total try under until updated using usually values view will with without"},
{"id":"angular.directive.ng:hide","name":"angular.directive.ng:hide","depth":2,"shortName":"ng:hide","type":"directive","keywords":"allows and angular any check checkbox checked click conditionally count directive doc-example-live element expect expression function guide hidden hide html input name ng:hide ng:show portion respectively should show shown span the then toequal truthy type when you"},
{"id":"angular.directive.ng:href","name":"angular.directive.ng:href","depth":2,"shortName":"ng:href","type":"directive","keywords":"actual and angular any attribute before broken buggy can chance clicks com contain correct directive error gravatar has href http like likely link makes markup most namespace ng:href open page placing problem replace return solves string template that the this url user using way which will with write wrong"},
{"id":"angular.directive.ng:init","name":"angular.directive.ng:init","depth":2,"shortName":"ng:init","type":"directive","keywords":"allows angular any attribute before bootstrap check directive during enters eval executed execution expect expression for function greeting guide hello initialization mode ng:init person should tasks template the tobe world"},
{"id":"angular.directive.ng:show","name":"angular.directive.ng:show","depth":2,"shortName":"ng:show","type":"directive","keywords":"allows and angular any check checkbox checked click conditionally count directive doc-example-live element expect expression function guide hidden hide html input name ng:hide ng:show portion respectively should show shown span the then toequal truthy type when you"},
{"id":"angular.directive.ng:src","name":"angular.directive.ng:src","depth":2,"shortName":"ng:src","type":"directive","keywords":"angular any attribute browser buggy can com contain correct directive doesn expression fetch from gravatar http inside like literal markup namespace ng:src placing problem replaces right solves src string template text the this until url using way which will with work write"},
{"id":"angular.directive.ng:style","name":"angular.directive.ng:style","depth":2,"shortName":"ng:style","type":"directive","keywords":"allows and angular any are button check clear click color conditionally corresponding css directive doc-example-live element evals expect expression for function guide html keys mystyle names ng:click ng:style object red rgb set should span style text the those tobe type value values which whose you"},
{"id":"angular.directive.ng:submit","name":"angular.directive.ng:submit","depth":2,"shortName":"ng:submit","type":"directive","keywords":"$document $window action addfutureaction additionally and angular binding check click current default directive doc-example-live done element elements enables enter eval events expect expression expressions for form from function guide hello hit input list means name ng:init ng:submit onsubmit page prevents push reloading request sending server should submit text the this tobe trigger type value"},
{"id":"angular.filter","name":"angular.filter","depth":1,"shortName":"filter","type":"overview","keywords":"$element abc add addition additional all allow allows also and angular any apply are argument arguments assigns binding blue but can cba certain chained charat colons color common conditionally conditions containing css currency current data decimal define demonstrate digits display dom easy element enter evaluation example examples expect few filter filtered filters first following for format formating framework function have hello here html including input javascript json just length like makes manipulate met might modification modify name namespace new notice number olleh operations optional out output overview own part passed passes point process provides requests return reverse reverses right rounding scope separated set should significant standard string styles syntax take text that the these this toequal touppercase transform transforming two type typically upper-case uppercase use used user value var variables very way were with would writing you your"},
{"id":"angular.filter.currency","name":"angular.filter.currency","depth":2,"shortName":"currency","type":"filter","keywords":"$-1 amount angular applied attr binding class classname css currency default doc-example-live enter expect filter formated formats function init input making name negative ng-binding ng-format-negative number red should text the this tobe tomatch type update value when with"},
{"id":"angular.filter.date","name":"angular.filter.date","depth":2,"shortName":"date","type":"filter","keywords":"angular based can composed date datetime day digit either elements expect extended filter following format formats formatted formatting function hour input iso marker milliseconds minute month ng:non-bindable not number object offset padded recognized representation requested rules second should specified sssz string the timezone tomatch used year yyyy yyyy-mm-dd"},
{"id":"angular.filter.html","name":"angular.filter.html","depth":2,"shortName":"html","type":"filter","keywords":"absolutely all and angular any application are argument attacks back being binding browser but bypasses call can color cols content default discouraged dom enter escape escaped escaped-html expect filter filtered from function get getting hate here however html html-filter html-unsafe-filter inline input inserted into make makes may means more name new ng:bind not obscure only onmouseover option optional other our parser parsing possible prevents properly pwn3d raw recognized returned rows safe sanitize sanitized sanitizer serialized should since snippet some strict string strongly style textcontent than that the then this through tobe tokens trust typical unsafe update used users using valid vulnerable which whitelist with without won would xss you your"},
{"id":"angular.filter.json","name":"angular.filter.json","depth":2,"shortName":"json","type":"filter","keywords":"$eval allows always and angular any applied arrays automatically binding convert converted curly debugging double element encapsulating enter expect filter filtered for function input into javascript json jsonify mostly name ng-monospace ng:eval notation obj object objects objtxt primitive should string text the this tobe type types update useful using value when you"},
{"id":"angular.filter.linky","name":"angular.filter.linky","depth":2,"shortName":"linky","type":"filter","keywords":"address and angular another binding cols email enter escaped-html expect filter finds ftp function href html html-linkified http input into linkify links linky linky-filter mailto more name new ng:bind not one org plane pretty rows should snippet some supports text the them tobe turns update urls with without"},
{"id":"angular.filter.lowercase","name":"angular.filter.lowercase","depth":2,"shortName":"lowercase","type":"filter","keywords":"angular filter lowercase"},
{"id":"angular.filter.number","name":"angular.filter.number","depth":2,"shortName":"number","type":"filter","keywords":"after and angular decimal decimalplaces default digit each empty enter expect filter format formats formatting fractions function input name negative not number numbers places returned round rounded should string text the third tobe update val value"},
{"id":"angular.filter.uppercase","name":"angular.filter.uppercase","depth":2,"shortName":"uppercase","type":"filter","keywords":"angular filter uppercase"},
{"id":"angular.formatter","name":"angular.formatter","depth":1,"shortName":"formatter","type":"overview","keywords":"$document addfutureaction all and angular application are automatically case change changes charat data displayed doc-example-live done easy edits elements example expect for form format formats formatted formatter formatters formatting function functions here input internal into javascript join just length lower model name namespace ng:format non-reversed one overview own pair parse parsed parsing ralugna readable register responsible return reverse reversed should store stored text the this toequal tolowercase touppercase translating trigger type unshift uppercase user user-visible val value var viewed while widget with writing writting xyz your zyx"},
{"id":"angular.formatter.boolean","name":"angular.formatter.boolean","depth":2,"shortName":"boolean","type":"formatter","keywords":"angular boolean checkbox converts data enter enters expect false format formatter function input name ng:format should store text the toequal true truthy type unless use user value wish you"},
{"id":"angular.formatter.index","name":"angular.formatter.index","depth":2,"shortName":"index","type":"formatter","keywords":"abc admin angular are array back best build can conversion converted copy create currentuser democntl expect for form formatter from function guest however index input issue iterate located look means meant must name needs ng:controller ng:format ng:repeat not object objects one option original over password position possible pull-down retrieve select selected selecting set should solve string strings that the this toequal used useful user users value when where which widget with"},
{"id":"angular.formatter.json","name":"angular.formatter.json","depth":2,"shortName":"json","type":"formatter","keywords":"angular data enter expect format formats formatter function input json misko model name ng:format ng:init project representation should size string text the toequal type user"},
{"id":"angular.formatter.list","name":"angular.formatter.list","depth":2,"shortName":"list","type":"formatter","keywords":"$document addfutureaction angular array chair change convert doc-example-live done elements enter entered expect format formatter from function items list lists name ng:format parsed should string table text the this toequal trigger type use user val value wish xyz you"},
{"id":"angular.formatter.number","name":"angular.formatter.number","depth":2,"shortName":"number","type":"formatter","keywords":"angular convert enter entered expect format formatter from function input name ng:format number numbers parsed should string text the toequal type use user valid value wish you"},
{"id":"angular.formatter.trim","name":"angular.formatter.trim","depth":2,"shortName":"trim","type":"formatter","keywords":"$document addfutureaction and angular book change doc-example-live done elements enter excess expect extra format formatter function leading name ng:format should space spaces text this toequal trailing trigger trim type use user val value wish with xyz you"},
{"id":"angular.scope","name":"angular.scope","depth":1,"shortName":"scope","type":"overview","keywords":"$become $eval $index $root $watch about acts also and angular any anyone apis append are array assigns attached back basic because become becomes behavior bindings bound call called calling calls can change changes characteristics child comes compiling context controller copy created creates current custom data default defined demonstrates dependency dependents design doc-example-live does dom each earth either element encompasses enters evaluated events example execution expect expressions extra factory fetch few field fire fix for forwarding framework from function greeting has have hello here how html immediately implementing info inherit inheritance inherited inherits injection input instancecache interact into its javascript leak listen listeners made map method misko model model-view-controller more mvc name names need needed nested newly ng:init ng:repeat not note notice notified object objects one only operations other override overrides overriding overview page params parent pattern pre pre-instantiated propagate properties property provided providers provides push register registering rendered repeater request response responsible returns root row salutation scope scopes server service services set should show similarly simple snippet spreadsheet-like state template text that the then these think this those through time tobe toequal tree triggered types unnecessary update updated updates used user usually var view views watch watchers way welcome when which while whole widget widgets will with within world written you your"},
{"id":"angular.scope.$become","name":"angular.scope.$become","depth":2,"shortName":"$become","type":"function","keywords":"$become act additional allows angular another applying attached before binding bound can class controller copying current data effectively either for function gets given html initialization instance instantiated javascript later like make makes method methods model modifies name new operator ordinary prototype refer refers removed same scope standalone stored stuff supports template testing that the this two use used using variable variables view way ways when will with"},
{"id":"angular.scope.$bind","name":"angular.scope.$bind","depth":2,"shortName":"$bind","type":"function","keywords":"$bind angular bind binds bound current expect function return scope see the this toequal var"},
{"id":"angular.scope.$eval","name":"angular.scope.$eval","depth":2,"shortName":"$eval","type":"function","keywords":"$eval $oneval and angular calling calls child compiled compiles context current cycle eval evaluates example exp expect expression for function its other parameter result return returns scope scopes set sum the this toequal triggers var with without words"},
{"id":"angular.scope.$get","name":"angular.scope.$get","depth":2,"shortName":"$get","type":"function","keywords":"$get angular any are can chained current exception expect first for function instead intermediary javascript misko name optionally person properties property property_chain representing returned returns scope string the there throwing toequal undefined unlike value var with"},
{"id":"angular.scope.$new","name":"angular.scope.$new","depth":2,"shortName":"$new","type":"function","keywords":"$become $new angular assume child created creates current function new newly scope should specified that the type via will"},
{"id":"angular.scope.$onEval","name":"angular.scope.$onEval","depth":2,"shortName":"$onEval","type":"function","keywords":"$eval $exceptionhandler $oneval angular call context counter current cycle decorate dom during each element eval evaluates example exception executed execution expect expr expression first function get handler lower numbers occurs priority scope service the toequal var when"},
{"id":"angular.scope.$service","name":"angular.scope.$service","depth":2,"shortName":"$service","type":"function","keywords":"$service access and angular any api components currently dependency discouraged don etc except factory filters for function general injection injector object provides registered return returned scope service serviceid services string support tests that the this use value"},
{"id":"angular.scope.$set","name":"angular.scope.$set","depth":2,"shortName":"$set","type":"function","keywords":"$set and angular any are assign assigned assigns can chained created current empty exception expect first function instead intermediary javascript misko name objects optionally person properties property property_chain representing scope specified string the them there throwing toequal undefined unlike value var via with"},
{"id":"angular.scope.$tryEval","name":"angular.scope.$tryEval","depth":2,"shortName":"$tryEval","type":"function","keywords":"$eval $exceptionhandler $tryeval also angular attr block body but called context current decorated document domelement element error evaluate evaluates evaluation example exception exceptionhandler expect expression function handle hasclass just lastexception like myerror ng-exception null parameter result scope the then this throw thrown toequal try used var with wraps"},
{"id":"angular.scope.$watch","name":"angular.scope.$watch","depth":2,"shortName":"$watch","type":"function","keywords":"$eval $exceptionhandler $watch about adam and angular aware callback called can change changes checked counter cycle decorated default domelement during each element eval evaluated every example exception executed execution expect expression first flag for function gets handler information initrun listener misko name newvalue oldvalue parameter parameters prevented prevents registers registration scope service should specified string that the this throws time toequal two upon value var via watchexp when will with"},
{"id":"angular.service","name":"angular.service","depth":1,"shortName":"service","type":"overview","keywords":"$browser $cookies $cookiestore $document $eager $exceptionhandler $hover $inject $invalidwidgets $loc $location $log $resource $route $window $xhr ability able accepts after alert all allows always and angular another any application are args arguments array basic because been beforeeach boots bound browser built-in bulk but cache callcount called calling callnotify can clear common config configuration contains controller controllers convention core could creates createspy custom declaring defaults define dependant dependencies dependency depends displays don done during dynamic dynamicaly each enables error example expect explicitely factory false figure first firstmethod following for function has have here highly identifiers identify ids info inject injected injecting injection injector instantiated instantiation instead into its jasmine javascript join just language languages lazily length like match matter matters message messages mock mocks more mostrecentcall msgs must mycontroller name names necessary need needed needs new ng:click ng:controller ng:init nontrivial not notification notifications notify notifyservice object objects once one only operations operator order other out overriden overview own parameter parameters participate passed properties property provided provides push real registered registering requested requires return root same scope secondmethod service services set sethash should similar simple specified specify spy start static stores strings substituable swap system test testable tests text that the them themselves therefore these they third this three thus toequal together tohavebeencalled tohavebeencalledwith true try two type typed types under unit use used using val var variables very well when which will win window wired with write writing you your"},
{"id":"angular.service.$browser","name":"angular.service.$browser","depth":2,"shortName":"$browser","type":"service","keywords":"$browser $log angular browser represents service the"},
{"id":"angular.service.$cookieStore","name":"angular.service.$cookieStore","depth":2,"shortName":"$cookieStore","type":"service","keywords":"$cookies $cookiestore angular are automatically backed cookies deserialized from key-value objects provides put retrieved serialized service session storage that this tojson"},
{"id":"angular.service.$cookies","name":"angular.service.$cookies","depth":2,"shortName":"$cookies","type":"service","keywords":"$browser $cookies $eval access adding and angular are browser cookies created current end exposed new object only properties provides read removing service simple the this"},
{"id":"angular.service.$defer","name":"angular.service.$defer","depth":2,"shortName":"$defer","type":"service","keywords":"$browser $defer $exceptionhandler $updateview and angular any block but can defer deferred delegates exceptions execution flush function functions into milliseconds queue service services should tests the try use who wraps you"},
{"id":"angular.service.$document","name":"angular.service.$document","depth":2,"shortName":"$document","type":"service","keywords":"$document $window angular browser document element jquery reference service the window"},
{"id":"angular.service.$exceptionHandler","name":"angular.service.$exceptionHandler","depth":2,"shortName":"$exceptionHandler","type":"service","keywords":"$exceptionhandler $log angular angular-mocks any browser console default delegated delegates error exception expressions implementation into loaded logs mock overriden service simply tests the this uncaught unit which"},
{"id":"angular.service.$hover","name":"angular.service.$hover","depth":2,"shortName":"$hover","type":"service","keywords":"$browser $document $hover angular service"},
{"id":"angular.service.$invalidWidgets","name":"angular.service.$invalidWidgets","depth":2,"shortName":"$invalidWidgets","type":"service","keywords":"$invalidwidgets all angular any are can currently displayed during find found invalid keeps queried references service there validation whether widgets"},
{"id":"angular.service.$location","name":"angular.service.$location","depth":2,"shortName":"$location","type":"service","keywords":"$browser $location and angular any application are available browser buttons changes forward hash hashpath hashsearch host href into location makes name notice parses path port protocol reflected search service text that the type url using your"},
{"id":"angular.service.$log","name":"angular.service.$log","depth":2,"shortName":"$log","type":"service","keywords":"$log $window and angular browser button console debugging default enter error for hello hit implementation info into log logging main message name ng:click open page present purpose service simple simplify text the this troubleshooting type value warn with world writes"},
{"id":"angular.service.$resource","name":"angular.service.$resource","depth":2,"shortName":"$resource","type":"service","keywords":"$action $charge $inject $resource $save $xhr abc above action action2 actions activities activity activityid actor actual after all allows and angular any appended are array arrives assigned async automatically available becomes behaviors bound buzz buzzcontroller cache callback calling came can card cardid cards case charge class client collection com comments contains content could count create created creates credit creditcard crud custom data declaration default define definition delete depending destination each easily empty example excess execution existing expandreplies expect extend extended extracted factory fetch first float following font-size for format from function get gets given googleapis googlebuzz greet has hash having hello high-level hit href html http https immediately important instance instanceof instances interact invoke invoked invoking isarray item items itself json json_callback jsonp key keys known let lets level like links look looks low made mapped margin-left max-height means method methods mike model most name need never new newcard ng:click ng:controller ng:repeat non non-get noting number object occurs once one onto operations optional optionally org other our overridden paramdefaults parameter parameterized parameters params passed perform populated post pre-bound prefix prefixed present profileurl prototype provide put query raw re-renders read realize received reference remove rendered rendering replies reply request resource resources response results retrieve returned returns rewrite right salutation save search section see server server-side service set should showing since smith sources specified src static style support template that the then these this thumbnailurl toequal trick true type update updated url useful user userid usually valid value values var verifycache view well what when whenever where which wikipedia will with without worth write xmlhttprequest you your"},
{"id":"angular.service.$route","name":"angular.service.$route","depth":2,"shortName":"$route","type":"service","keywords":"$location $route against all and angular array bookcntl box causes ch1 ch4 changes changing chaptercntl chose configured conjunction controller controllers current deep-linking definition example existing for function hash hashpath how href html input map match myapp name ng:view onchange params partial partials pulls reference route routes rsrc scope see service shows size src template text the this tries try type typically url urls used views watches when widget with"},
{"id":"angular.service.$updateView","name":"angular.service.$updateView","depth":2,"shortName":"$updateView","type":"service","keywords":"$browser $defer $eval $root $updateview $xhr adjusted and angular any application apply are automatically aware but call called calling can cases changed changing close code controller controllers default deferred delay delayed directives directly does dom don enough enqueues events eventual for from have hence immediately instantaneous into knowledge lags libraries listen manually may means merged mode model most multiple need not note occur often party perceived property reflect rules same scope service services settimeout setting simplify since single small some state sufficiently synchronous tests that the then there third this time together unit-test update updates user usually view when which widgets wish without writing xhr you your"},
{"id":"angular.service.$window","name":"angular.service.$window","depth":2,"shortName":"$window","type":"service","keywords":"$service $window alert all always angular are available because browser causes current don evaluated expressions for from global globality globally greeting hello javascript may mocked name ng:click ng:init object overriden problems refer reference removed respect scope service suffer testability testing text the they through type variable while window with world"},
{"id":"angular.service.$xhr","name":"angular.service.$xhr","depth":2,"shortName":"$xhr","type":"service","keywords":"$browser $inject $log $resource $updateview $xhr absolute abstraction added address adds advantage after all allows always and angular api application applications are aspx assured attack authentication automatically backend before both but callback called calling came can case causes check clear client code codes com comes conditions consider considerations considered content cookie cooperate cooperation could counter cross currently data data-binding delegated delegates delete design designing destination digest domain each effect either eliminate error example exceptions execution exists expectaitions features fetch fetchcntl first following for forgery format from function gain generated generates get googleapis handling have header higher href html http https include index insertion intercept into issues its javascript json json_callback jsonp level lower making matches mechanism method mock must name needs ng:click ng:controller nicer non non-200 non-get normal null object one only order org other out own party performing please post pre-configured prefix prevent private process processing protection provides put raw read readable reads received recommend relative replaced request requests required resource response responses resume return routed running runs salt script security self sent server service session set sets setting should since site size some special specific specifying status still strategies string stringified strip subsequent sure tag take technique tests text than that the then therefore these third this threats token tokens turn two type unauthorized under unique updated url use user using utilizes valid value values var verifiable verify version view vulnerability vulnerable was way web web-site when which while wikipedia will with work x-xsrf-token xhr xmlhttprequest xsrf xsrf-token your"},
{"id":"angular.service.$xhr.bulk","name":"angular.service.$xhr.bulk","depth":3,"shortName":"bulk","type":"service","keywords":"$log $xhr angular bulk error service"},
{"id":"angular.service.$xhr.cache","name":"angular.service.$xhr.cache","depth":3,"shortName":"cache","type":"service","keywords":"$xhr acts all angular are body but cache cached caches callback called case data defaults delegate delegated destination entries entry execute for fresh from function get hashmap hit http immediately just like method misses post present received request requests response responses result returned sent server service stored synchronously that the then true update url when where while will"},
{"id":"angular.service.$xhr.error","name":"angular.service.$xhr.error","depth":3,"shortName":"error","type":"service","keywords":"$log $service $xhr and angular application body callback can code console data default destination error fetch file following for function get handler has http implementation log logs method ng:click non-existent object one optional properties replaces request response service specific status the this url with"},
{"id":"angular.validator","name":"angular.validator","depth":1,"shortName":"validator","type":"overview","keywords":"$element addition additional against all allows angular any applied are argument arguments attach attr attribute available binding borders can change check class containing contains correct criteria css current default define dom easy element enter enters example expect fails field filter filters first foo for format function have input integer its javascript just make making manipulate marks match might must name namespace need new ng-validation-error ng:validate not number object only overview own passed passes phone red regexp replace return scope should size specific standard string syntax text that the these this tomatch tracking trackno transforming type ups upstrackingno use user using valid validate validation validator validators value var variables way well-formed when widgets writing written you your"},
{"id":"angular.validator.asynchronous","name":"angular.validator.asynchronous","depth":2,"shortName":"asynchronous","type":"validator","keywords":"and angular asynchronous asynchronously attr automatically box but caches call callback called can change changes classname color computed data delayed display doc-example-live element enter error expect fails from function immediately indicator input inputtovalidate length mycntl myvalidator name ng-input-indicator-wait ng-validation-error ng:controller ng:validate not object optionally pass passed pause provided result results settimeout should shows since specified spinning state text textbox the this through tomatch update use validate validated validation validationdone validator validity value var way when while widget without you"},
{"id":"angular.validator.date","name":"angular.validator.date","depth":2,"shortName":"date","type":"validator","keywords":"angular attr classname date doc-example-live element enter expect format function input invalidate name ng-validation-error ng:validate not restrict should text the tomatch use user valid validate validator value var"},
{"id":"angular.validator.email","name":"angular.validator.email","depth":2,"shortName":"email","type":"validator","keywords":"angular attr classname com doc-example-live element email enter expect function input invalidate name ng-validation-error ng:validate not restrict should text the tomatch use user valid validate validator value var wist you"},
{"id":"angular.validator.integer","name":"angular.validator.integer","depth":2,"shortName":"integer","type":"validator","keywords":"and angular attr between classname doc-example-live element enter equal expect for function greater input integer integers invalidate maximum minimum name ng-validation-error ng:validate not number numbers optional range restrict should than the tomatch use validate validator value var whole with"},
{"id":"angular.validator.json","name":"angular.validator.json","depth":2,"shortName":"json","type":"validator","keywords":"abc angular attr classname cols doc-example-live element enter expect function input invalidate json name ng-validation-error ng:validate not restrict rows should the tomatch use user valid validate validator value var wish you"},
{"id":"angular.validator.number","name":"angular.validator.number","depth":2,"shortName":"number","type":"validator","keywords":"and angular attr between classname doc-example-live element enter expect for function greater input integer invalidate maximum minimum name ng-validation-error ng:validate not number numbers optional range restrict should than the tomatch use validate validator value var whole with"},
{"id":"angular.validator.phone","name":"angular.validator.phone","depth":2,"shortName":"phone","type":"validator","keywords":"angular attr classname doc-example-live element enter expect function input invalidate name ng-validation-error ng:validate not number numbers phone restrict should text the tomatch use valid validate validator value var"},
{"id":"angular.validator.regexp","name":"angular.validator.regexp","depth":2,"shortName":"regexp","type":"validator","keywords":"angular any attr classname cntl display doc-example-live element enter error expect expression function input invalidate message msg name ng-validation-error ng:controller ng:validate non not regexp regular restrict should ssn ssnregexp textbox the this toequal tomatch use val valid validate validator value var"},
{"id":"angular.validator.url","name":"angular.validator.url","depth":2,"shortName":"url","type":"validator","keywords":"abc angular attr classname com doc-example-live element enter expect function html http input invalidate name ng-validation-error ng:validate not number phone restrict should size text the tomatch url urls use valid validate validator value var"},
{"id":"angular.widget","name":"angular.widget","depth":1,"shortName":"widget","type":"overview","keywords":"$watch added adding alert all allow already and angular any are assign attr attribute behavior bind block browser but can come compileelement compiler create css current currentscope date directives display doesn dom each element elements existing exp expected expression flavors for function implement let like linkelement manipulate modify my-watch name namespace new number one only overview per properties return same say settimeout text that the this time tree two type understand update use user value var watch whereas which widget widgets with would you your"},
{"id":"angular.widget.@ng:format","name":"angular.widget.@ng:format","depth":2,"shortName":"@ng:format","type":"widget","keywords":"and angular array attribute back built-in but chairs check collect comma converted custom data enter example expect field find for form formats formatter formatters from function how input internally items learn list might model more name need ng:format out parses plate represented separated should shows store stored string table text the this tobe type used useful user user-readable value widget you"},
{"id":"angular.widget.@ng:non-bindable","name":"angular.widget.@ng:non-bindable","depth":2,"shortName":"@ng:non-bindable","type":"widget","keywords":"actually alone angular any are attribute binding bindings but check chunk code directive div doc-example-live element example expect function html ignore left like location looks make necessary ng:non-bindable note one present should siple sometimes text the there this tobe tomatch two use where which widget wrapped write"},
{"id":"angular.widget.@ng:repeat","name":"angular.widget.@ng:repeat","depth":2,"shortName":"@ng:repeat","type":"widget","keywords":"$index $position actually adam age amalie and angular any are attribute but can check collection count current currently defined directive display doc-example-live each element enumerate enumerated every example expect exposed expression first for formats friend friends from function gets given giving have how identifiers index indicating initializes instance instantiates item iterator its john key last length length-1 like list local looks loop mary middle name names ng:init ng:repeat ng:repeat-index note offset old once one own per person position properties repeat_expression repeated repeater row scope set should special starting supported template than the there they this tobe toequal track tracks two user uses using value var variable where who widget with years"},
{"id":"angular.widget.@ng:required","name":"angular.widget.@ng:required","depth":2,"shortName":"@ng:required","type":"widget","keywords":"angular attr attribute becomes blank cannot case check classname contains correct disappear doc-example-live element enter error example expect function how input invalid make name ng-validation-error ng:required ng:validate not present red should shows special text that the this tomatch type user validates value when widget"},
{"id":"angular.widget.@ng:validate","name":"angular.widget.@ng:validate","depth":2,"shortName":"@ng:validate","type":"widget","keywords":"and angular are attr attribute becomes built-in check class classname contains correct css custom disappear doc-example-live does don element enter error example expect find function how input integer invalid make more name need ng-validation-error ng:error ng:validate not notanumber nothing out pass red set should shows text the this tomatch type used user validate validates validation validator validators value when widget"},
{"id":"angular.widget.HTML","name":"angular.widget.HTML","depth":2,"shortName":"HTML","type":"widget","keywords":"addition angular are attribute behavior below bound can carlos check checkbox checked cols common control enter example exercise expect expression false font-size for from function further have html input input1 input2 input3 input4 input5 input6 most multiple multiselect name ng:change ng:format ng:non-bindable ng:required ng:validate null option options pulldown radio see select set should size standard style text textarea the their these they toequal true type usage use using value widget widgets will you"},
{"id":"angular.widget.ng:include","name":"angular.widget.ng:include","depth":2,"shortName":"ng:include","type":"widget","keywords":"access angular applies blank change date doc-example-live evaluate evaluates evaluating expect expression external file filter for fragment function hmtl href html include included instance keep load loaded mind name new ng:include onload option optional origin partial policy resources same scope select set should src text that the toequal tomatch url value when which widget won work"},
{"id":"angular.widget.ng:switch","name":"angular.widget.ng:switch","depth":2,"shortName":"ng:switch","type":"widget","keywords":"add against angular case casses change child conditionally deafault default displayed div doc-example-live dom elments expect expression function home match matchvalue1 matchvalue2 name ng:switch ng:switch-default ng:switch-when option other select settings should span start statement structure switch text the then this toequal when widget will"},
{"id":"angular.widget.ng:view","name":"angular.widget.ng:view","depth":2,"shortName":"ng:view","type":"widget","keywords":"$inject $route according advantages angular available below bootstrap bootstrapctrl changes compared complements configuration console current doesn efficient every execution file function functionality guide href html included including index into layout like log main more myctrl ng:controller ng:include ng:view offers overview overviewctrl provides rendered require root route scope service shorter similar src syntax template that the these this time used view when widget with"}];